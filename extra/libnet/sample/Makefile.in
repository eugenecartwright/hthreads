# Makefile.in generated by automake 1.6.3 from Makefile.am.
# @configure_input@

# Copyright 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002
# Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

# $Id: Makefile.in,v 1.13 2004/03/11 18:50:20 mike Exp $
#
# Libnet automake information file
# Copyright (c) 1998 - 2004 Mike D. Schiffman <mike@infonexus.com>
# All rights reserved.
#
# Process this file with automake to produce a Makefile.in script.

# $Id: Makefile.in,v 1.13 2004/03/11 18:50:20 mike Exp $
#
# Libnet automake information file
# Copyright (c) 1998 - 2004 Mike D. Schiffman <mike@infonexus.com>
# All rights reserved.
#
SHELL = @SHELL@

srcdir = @srcdir@
top_srcdir = @top_srcdir@
VPATH = @srcdir@
prefix = @prefix@
exec_prefix = @exec_prefix@

bindir = @bindir@
sbindir = @sbindir@
libexecdir = @libexecdir@
datadir = @datadir@
sysconfdir = @sysconfdir@
sharedstatedir = @sharedstatedir@
localstatedir = @localstatedir@
libdir = @libdir@
infodir = @infodir@
mandir = @mandir@
includedir = @includedir@
oldincludedir = /usr/include
pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
top_builddir = ..

ACLOCAL = @ACLOCAL@
AUTOCONF = @AUTOCONF@
AUTOMAKE = @AUTOMAKE@
AUTOHEADER = @AUTOHEADER@

am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = @INSTALL@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_DATA = @INSTALL_DATA@
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_HEADER = $(INSTALL_DATA)
transform = @program_transform_name@
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_alias = @build_alias@
build_triplet = @build@
host_alias = @host_alias@
host_triplet = @host@
target_alias = @target_alias@
target_triplet = @target@

EXEEXT = @EXEEXT@
OBJEXT = @OBJEXT@
PATH_SEPARATOR = @PATH_SEPARATOR@
ADDITIONAL_LIBS = @ADDITIONAL_LIBS@
AMTAR = @AMTAR@
AWK = @AWK@
CC = @CC@
DEPDIR = @DEPDIR@
ENDIANESS = @ENDIANESS@
HAVE_PACKET_SOCKET = @HAVE_PACKET_SOCKET@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LIBNET_CONFIG_CFLAGS = @LIBNET_CONFIG_CFLAGS@
LIBNET_CONFIG_DEFINES = @LIBNET_CONFIG_DEFINES@
LIBNET_CONFIG_LIBS = @LIBNET_CONFIG_LIBS@
LIBNET_VERSION = @LIBNET_VERSION@
MAINT = @MAINT@
PACKAGE = @PACKAGE@
RANLIB = @RANLIB@
STRIP = @STRIP@
VERSION = @VERSION@
am__include = @am__include@
am__quote = @am__quote@
install_sh = @install_sh@

AUTOMAKE_OPTIONS = foreign no-dependencies

DISTCLEANFILES = *~

noinst_PROGRAMS = arp cdp dhcp_discover get_addr icmp_timestamp icmp_unreach \
                  ieee isl ntp ospf_hello ospf_lsa ping_of_death stp synflood \
                  tcp1 tcp2 udp1 udp2 synflood6 icmp6_echoreq icmp_echo_cq \
                  smurf dot1x dns rpc_tcp rpc_udp mpls icmp_timeexceed \
                  fddi_tcp1 fddi_tcp2 tring_tcp1 tring_tcp2 icmp_redirect \
                  bgp4_hdr bgp4_open bgp4_update bgp4_notification gre \
                  synflood6_frag tftp ip_link ip_raw sebek


arp_SOURCES = arp.c
cdp_SOURCES = cdp.c
dot1x_SOURCES = dot1x.c
dhcp_discover_SOURCES = dhcp_discover.c
dns_SOURCES = dns.c
fddi_tcp1_SOURCES = fddi_tcp1.c
fddi_tcp2_SOURCES = fddi_tcp2.c
tring_tcp1_SOURCES = tring_tcp1.c
tring_tcp2_SOURCES = tring_tcp2.c
get_addr_SOURCES = get_addr.c
icmp_echo_cq_SOURCES = icmp_echo_cq.c
icmp_redirect_SOURCES = icmp_redirect.c
icmp_timestamp_SOURCES = icmp_timestamp.c
icmp_timeexceed_SOURCES = icmp_timeexceed.c
icmp_unreach_SOURCES = icmp_unreach.c
ieee_SOURCES = ieee.c
isl_SOURCES = isl.c
ntp_SOURCES = ntp.c
ospf_hello_SOURCES = ospf_hello.c
ospf_lsa_SOURCES = ospf_lsa.c
ping_of_death_SOURCES = ping_of_death.c
mpls_SOURCES = mpls.c
rpc_tcp_SOURCES = rpc_tcp.c
rpc_udp_SOURCES = rpc_udp.c
stp_SOURCES = stp.c
synflood_SOURCES = synflood.c
tcp1_SOURCES = tcp1.c
tcp2_SOURCES = tcp2.c
tftp_SOURCES = tftp.c
udp1_SOURCES = udp1.c
udp2_SOURCES = udp2.c
icmp6_echoreq_SOURCES = icmp6_echoreq.c
smurf_SOURCES = smurf.c
synflood6_SOURCES = synflood6.c
synflood6_frag_SOURCES = synflood6_frag.c
bgp4_hdr_SOURCES = bgp4_hdr.c
bgp4_open_SOURCES = bgp4_open.c
bgp4_update_SOURCES = bgp4_update.c
bgp4_notification_SOURCES = bgp4_notification.c
gre_SOURCES = gre.c
ip_raw_SOURCES = ip_raw.c
ip_link_SOURCES = ip_link.c
sebek_SOURCES = sebek.c

LDADD = $(top_srcdir)/src/libnet.a
subdir = sample
mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/include/config.h
CONFIG_CLEAN_FILES =
noinst_PROGRAMS = arp$(EXEEXT) cdp$(EXEEXT) dhcp_discover$(EXEEXT) \
	get_addr$(EXEEXT) icmp_timestamp$(EXEEXT) icmp_unreach$(EXEEXT) \
	ieee$(EXEEXT) isl$(EXEEXT) ntp$(EXEEXT) ospf_hello$(EXEEXT) \
	ospf_lsa$(EXEEXT) ping_of_death$(EXEEXT) stp$(EXEEXT) \
	synflood$(EXEEXT) tcp1$(EXEEXT) tcp2$(EXEEXT) udp1$(EXEEXT) \
	udp2$(EXEEXT) synflood6$(EXEEXT) icmp6_echoreq$(EXEEXT) \
	icmp_echo_cq$(EXEEXT) smurf$(EXEEXT) dot1x$(EXEEXT) \
	dns$(EXEEXT) rpc_tcp$(EXEEXT) rpc_udp$(EXEEXT) mpls$(EXEEXT) \
	icmp_timeexceed$(EXEEXT) fddi_tcp1$(EXEEXT) fddi_tcp2$(EXEEXT) \
	tring_tcp1$(EXEEXT) tring_tcp2$(EXEEXT) icmp_redirect$(EXEEXT) \
	bgp4_hdr$(EXEEXT) bgp4_open$(EXEEXT) bgp4_update$(EXEEXT) \
	bgp4_notification$(EXEEXT) gre$(EXEEXT) synflood6_frag$(EXEEXT) \
	tftp$(EXEEXT) ip_link$(EXEEXT) ip_raw$(EXEEXT) sebek$(EXEEXT)
PROGRAMS = $(noinst_PROGRAMS)

am_arp_OBJECTS = arp.$(OBJEXT)
arp_OBJECTS = $(am_arp_OBJECTS)
arp_LDADD = $(LDADD)
arp_DEPENDENCIES = $(top_srcdir)/src/libnet.a
arp_LDFLAGS =
am_bgp4_hdr_OBJECTS = bgp4_hdr.$(OBJEXT)
bgp4_hdr_OBJECTS = $(am_bgp4_hdr_OBJECTS)
bgp4_hdr_LDADD = $(LDADD)
bgp4_hdr_DEPENDENCIES = $(top_srcdir)/src/libnet.a
bgp4_hdr_LDFLAGS =
am_bgp4_notification_OBJECTS = bgp4_notification.$(OBJEXT)
bgp4_notification_OBJECTS = $(am_bgp4_notification_OBJECTS)
bgp4_notification_LDADD = $(LDADD)
bgp4_notification_DEPENDENCIES = $(top_srcdir)/src/libnet.a
bgp4_notification_LDFLAGS =
am_bgp4_open_OBJECTS = bgp4_open.$(OBJEXT)
bgp4_open_OBJECTS = $(am_bgp4_open_OBJECTS)
bgp4_open_LDADD = $(LDADD)
bgp4_open_DEPENDENCIES = $(top_srcdir)/src/libnet.a
bgp4_open_LDFLAGS =
am_bgp4_update_OBJECTS = bgp4_update.$(OBJEXT)
bgp4_update_OBJECTS = $(am_bgp4_update_OBJECTS)
bgp4_update_LDADD = $(LDADD)
bgp4_update_DEPENDENCIES = $(top_srcdir)/src/libnet.a
bgp4_update_LDFLAGS =
am_cdp_OBJECTS = cdp.$(OBJEXT)
cdp_OBJECTS = $(am_cdp_OBJECTS)
cdp_LDADD = $(LDADD)
cdp_DEPENDENCIES = $(top_srcdir)/src/libnet.a
cdp_LDFLAGS =
am_dhcp_discover_OBJECTS = dhcp_discover.$(OBJEXT)
dhcp_discover_OBJECTS = $(am_dhcp_discover_OBJECTS)
dhcp_discover_LDADD = $(LDADD)
dhcp_discover_DEPENDENCIES = $(top_srcdir)/src/libnet.a
dhcp_discover_LDFLAGS =
am_dns_OBJECTS = dns.$(OBJEXT)
dns_OBJECTS = $(am_dns_OBJECTS)
dns_LDADD = $(LDADD)
dns_DEPENDENCIES = $(top_srcdir)/src/libnet.a
dns_LDFLAGS =
am_dot1x_OBJECTS = dot1x.$(OBJEXT)
dot1x_OBJECTS = $(am_dot1x_OBJECTS)
dot1x_LDADD = $(LDADD)
dot1x_DEPENDENCIES = $(top_srcdir)/src/libnet.a
dot1x_LDFLAGS =
am_fddi_tcp1_OBJECTS = fddi_tcp1.$(OBJEXT)
fddi_tcp1_OBJECTS = $(am_fddi_tcp1_OBJECTS)
fddi_tcp1_LDADD = $(LDADD)
fddi_tcp1_DEPENDENCIES = $(top_srcdir)/src/libnet.a
fddi_tcp1_LDFLAGS =
am_fddi_tcp2_OBJECTS = fddi_tcp2.$(OBJEXT)
fddi_tcp2_OBJECTS = $(am_fddi_tcp2_OBJECTS)
fddi_tcp2_LDADD = $(LDADD)
fddi_tcp2_DEPENDENCIES = $(top_srcdir)/src/libnet.a
fddi_tcp2_LDFLAGS =
am_get_addr_OBJECTS = get_addr.$(OBJEXT)
get_addr_OBJECTS = $(am_get_addr_OBJECTS)
get_addr_LDADD = $(LDADD)
get_addr_DEPENDENCIES = $(top_srcdir)/src/libnet.a
get_addr_LDFLAGS =
am_gre_OBJECTS = gre.$(OBJEXT)
gre_OBJECTS = $(am_gre_OBJECTS)
gre_LDADD = $(LDADD)
gre_DEPENDENCIES = $(top_srcdir)/src/libnet.a
gre_LDFLAGS =
am_icmp6_echoreq_OBJECTS = icmp6_echoreq.$(OBJEXT)
icmp6_echoreq_OBJECTS = $(am_icmp6_echoreq_OBJECTS)
icmp6_echoreq_LDADD = $(LDADD)
icmp6_echoreq_DEPENDENCIES = $(top_srcdir)/src/libnet.a
icmp6_echoreq_LDFLAGS =
am_icmp_echo_cq_OBJECTS = icmp_echo_cq.$(OBJEXT)
icmp_echo_cq_OBJECTS = $(am_icmp_echo_cq_OBJECTS)
icmp_echo_cq_LDADD = $(LDADD)
icmp_echo_cq_DEPENDENCIES = $(top_srcdir)/src/libnet.a
icmp_echo_cq_LDFLAGS =
am_icmp_redirect_OBJECTS = icmp_redirect.$(OBJEXT)
icmp_redirect_OBJECTS = $(am_icmp_redirect_OBJECTS)
icmp_redirect_LDADD = $(LDADD)
icmp_redirect_DEPENDENCIES = $(top_srcdir)/src/libnet.a
icmp_redirect_LDFLAGS =
am_icmp_timeexceed_OBJECTS = icmp_timeexceed.$(OBJEXT)
icmp_timeexceed_OBJECTS = $(am_icmp_timeexceed_OBJECTS)
icmp_timeexceed_LDADD = $(LDADD)
icmp_timeexceed_DEPENDENCIES = $(top_srcdir)/src/libnet.a
icmp_timeexceed_LDFLAGS =
am_icmp_timestamp_OBJECTS = icmp_timestamp.$(OBJEXT)
icmp_timestamp_OBJECTS = $(am_icmp_timestamp_OBJECTS)
icmp_timestamp_LDADD = $(LDADD)
icmp_timestamp_DEPENDENCIES = $(top_srcdir)/src/libnet.a
icmp_timestamp_LDFLAGS =
am_icmp_unreach_OBJECTS = icmp_unreach.$(OBJEXT)
icmp_unreach_OBJECTS = $(am_icmp_unreach_OBJECTS)
icmp_unreach_LDADD = $(LDADD)
icmp_unreach_DEPENDENCIES = $(top_srcdir)/src/libnet.a
icmp_unreach_LDFLAGS =
am_ieee_OBJECTS = ieee.$(OBJEXT)
ieee_OBJECTS = $(am_ieee_OBJECTS)
ieee_LDADD = $(LDADD)
ieee_DEPENDENCIES = $(top_srcdir)/src/libnet.a
ieee_LDFLAGS =
am_ip_link_OBJECTS = ip_link.$(OBJEXT)
ip_link_OBJECTS = $(am_ip_link_OBJECTS)
ip_link_LDADD = $(LDADD)
ip_link_DEPENDENCIES = $(top_srcdir)/src/libnet.a
ip_link_LDFLAGS =
am_ip_raw_OBJECTS = ip_raw.$(OBJEXT)
ip_raw_OBJECTS = $(am_ip_raw_OBJECTS)
ip_raw_LDADD = $(LDADD)
ip_raw_DEPENDENCIES = $(top_srcdir)/src/libnet.a
ip_raw_LDFLAGS =
am_isl_OBJECTS = isl.$(OBJEXT)
isl_OBJECTS = $(am_isl_OBJECTS)
isl_LDADD = $(LDADD)
isl_DEPENDENCIES = $(top_srcdir)/src/libnet.a
isl_LDFLAGS =
am_mpls_OBJECTS = mpls.$(OBJEXT)
mpls_OBJECTS = $(am_mpls_OBJECTS)
mpls_LDADD = $(LDADD)
mpls_DEPENDENCIES = $(top_srcdir)/src/libnet.a
mpls_LDFLAGS =
am_ntp_OBJECTS = ntp.$(OBJEXT)
ntp_OBJECTS = $(am_ntp_OBJECTS)
ntp_LDADD = $(LDADD)
ntp_DEPENDENCIES = $(top_srcdir)/src/libnet.a
ntp_LDFLAGS =
am_ospf_hello_OBJECTS = ospf_hello.$(OBJEXT)
ospf_hello_OBJECTS = $(am_ospf_hello_OBJECTS)
ospf_hello_LDADD = $(LDADD)
ospf_hello_DEPENDENCIES = $(top_srcdir)/src/libnet.a
ospf_hello_LDFLAGS =
am_ospf_lsa_OBJECTS = ospf_lsa.$(OBJEXT)
ospf_lsa_OBJECTS = $(am_ospf_lsa_OBJECTS)
ospf_lsa_LDADD = $(LDADD)
ospf_lsa_DEPENDENCIES = $(top_srcdir)/src/libnet.a
ospf_lsa_LDFLAGS =
am_ping_of_death_OBJECTS = ping_of_death.$(OBJEXT)
ping_of_death_OBJECTS = $(am_ping_of_death_OBJECTS)
ping_of_death_LDADD = $(LDADD)
ping_of_death_DEPENDENCIES = $(top_srcdir)/src/libnet.a
ping_of_death_LDFLAGS =
am_rpc_tcp_OBJECTS = rpc_tcp.$(OBJEXT)
rpc_tcp_OBJECTS = $(am_rpc_tcp_OBJECTS)
rpc_tcp_LDADD = $(LDADD)
rpc_tcp_DEPENDENCIES = $(top_srcdir)/src/libnet.a
rpc_tcp_LDFLAGS =
am_rpc_udp_OBJECTS = rpc_udp.$(OBJEXT)
rpc_udp_OBJECTS = $(am_rpc_udp_OBJECTS)
rpc_udp_LDADD = $(LDADD)
rpc_udp_DEPENDENCIES = $(top_srcdir)/src/libnet.a
rpc_udp_LDFLAGS =
am_sebek_OBJECTS = sebek.$(OBJEXT)
sebek_OBJECTS = $(am_sebek_OBJECTS)
sebek_LDADD = $(LDADD)
sebek_DEPENDENCIES = $(top_srcdir)/src/libnet.a
sebek_LDFLAGS =
am_smurf_OBJECTS = smurf.$(OBJEXT)
smurf_OBJECTS = $(am_smurf_OBJECTS)
smurf_LDADD = $(LDADD)
smurf_DEPENDENCIES = $(top_srcdir)/src/libnet.a
smurf_LDFLAGS =
am_stp_OBJECTS = stp.$(OBJEXT)
stp_OBJECTS = $(am_stp_OBJECTS)
stp_LDADD = $(LDADD)
stp_DEPENDENCIES = $(top_srcdir)/src/libnet.a
stp_LDFLAGS =
am_synflood_OBJECTS = synflood.$(OBJEXT)
synflood_OBJECTS = $(am_synflood_OBJECTS)
synflood_LDADD = $(LDADD)
synflood_DEPENDENCIES = $(top_srcdir)/src/libnet.a
synflood_LDFLAGS =
am_synflood6_OBJECTS = synflood6.$(OBJEXT)
synflood6_OBJECTS = $(am_synflood6_OBJECTS)
synflood6_LDADD = $(LDADD)
synflood6_DEPENDENCIES = $(top_srcdir)/src/libnet.a
synflood6_LDFLAGS =
am_synflood6_frag_OBJECTS = synflood6_frag.$(OBJEXT)
synflood6_frag_OBJECTS = $(am_synflood6_frag_OBJECTS)
synflood6_frag_LDADD = $(LDADD)
synflood6_frag_DEPENDENCIES = $(top_srcdir)/src/libnet.a
synflood6_frag_LDFLAGS =
am_tcp1_OBJECTS = tcp1.$(OBJEXT)
tcp1_OBJECTS = $(am_tcp1_OBJECTS)
tcp1_LDADD = $(LDADD)
tcp1_DEPENDENCIES = $(top_srcdir)/src/libnet.a
tcp1_LDFLAGS =
am_tcp2_OBJECTS = tcp2.$(OBJEXT)
tcp2_OBJECTS = $(am_tcp2_OBJECTS)
tcp2_LDADD = $(LDADD)
tcp2_DEPENDENCIES = $(top_srcdir)/src/libnet.a
tcp2_LDFLAGS =
am_tftp_OBJECTS = tftp.$(OBJEXT)
tftp_OBJECTS = $(am_tftp_OBJECTS)
tftp_LDADD = $(LDADD)
tftp_DEPENDENCIES = $(top_srcdir)/src/libnet.a
tftp_LDFLAGS =
am_tring_tcp1_OBJECTS = tring_tcp1.$(OBJEXT)
tring_tcp1_OBJECTS = $(am_tring_tcp1_OBJECTS)
tring_tcp1_LDADD = $(LDADD)
tring_tcp1_DEPENDENCIES = $(top_srcdir)/src/libnet.a
tring_tcp1_LDFLAGS =
am_tring_tcp2_OBJECTS = tring_tcp2.$(OBJEXT)
tring_tcp2_OBJECTS = $(am_tring_tcp2_OBJECTS)
tring_tcp2_LDADD = $(LDADD)
tring_tcp2_DEPENDENCIES = $(top_srcdir)/src/libnet.a
tring_tcp2_LDFLAGS =
am_udp1_OBJECTS = udp1.$(OBJEXT)
udp1_OBJECTS = $(am_udp1_OBJECTS)
udp1_LDADD = $(LDADD)
udp1_DEPENDENCIES = $(top_srcdir)/src/libnet.a
udp1_LDFLAGS =
am_udp2_OBJECTS = udp2.$(OBJEXT)
udp2_OBJECTS = $(am_udp2_OBJECTS)
udp2_LDADD = $(LDADD)
udp2_DEPENDENCIES = $(top_srcdir)/src/libnet.a
udp2_LDFLAGS =

DEFS = @DEFS@
DEFAULT_INCLUDES =  -I. -I$(srcdir) -I$(top_builddir)/include
CPPFLAGS = @CPPFLAGS@
LDFLAGS = @LDFLAGS@
LIBS = @LIBS@
depcomp =
am__depfiles_maybe =
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
CFLAGS = @CFLAGS@
DIST_SOURCES = $(arp_SOURCES) $(bgp4_hdr_SOURCES) \
	$(bgp4_notification_SOURCES) $(bgp4_open_SOURCES) \
	$(bgp4_update_SOURCES) $(cdp_SOURCES) $(dhcp_discover_SOURCES) \
	$(dns_SOURCES) $(dot1x_SOURCES) $(fddi_tcp1_SOURCES) \
	$(fddi_tcp2_SOURCES) $(get_addr_SOURCES) $(gre_SOURCES) \
	$(icmp6_echoreq_SOURCES) $(icmp_echo_cq_SOURCES) \
	$(icmp_redirect_SOURCES) $(icmp_timeexceed_SOURCES) \
	$(icmp_timestamp_SOURCES) $(icmp_unreach_SOURCES) \
	$(ieee_SOURCES) $(ip_link_SOURCES) $(ip_raw_SOURCES) \
	$(isl_SOURCES) $(mpls_SOURCES) $(ntp_SOURCES) \
	$(ospf_hello_SOURCES) $(ospf_lsa_SOURCES) \
	$(ping_of_death_SOURCES) $(rpc_tcp_SOURCES) $(rpc_udp_SOURCES) \
	$(sebek_SOURCES) $(smurf_SOURCES) $(stp_SOURCES) \
	$(synflood_SOURCES) $(synflood6_SOURCES) \
	$(synflood6_frag_SOURCES) $(tcp1_SOURCES) $(tcp2_SOURCES) \
	$(tftp_SOURCES) $(tring_tcp1_SOURCES) $(tring_tcp2_SOURCES) \
	$(udp1_SOURCES) $(udp2_SOURCES)
DIST_COMMON = Makefile.am Makefile.in
SOURCES = $(arp_SOURCES) $(bgp4_hdr_SOURCES) $(bgp4_notification_SOURCES) $(bgp4_open_SOURCES) $(bgp4_update_SOURCES) $(cdp_SOURCES) $(dhcp_discover_SOURCES) $(dns_SOURCES) $(dot1x_SOURCES) $(fddi_tcp1_SOURCES) $(fddi_tcp2_SOURCES) $(get_addr_SOURCES) $(gre_SOURCES) $(icmp6_echoreq_SOURCES) $(icmp_echo_cq_SOURCES) $(icmp_redirect_SOURCES) $(icmp_timeexceed_SOURCES) $(icmp_timestamp_SOURCES) $(icmp_unreach_SOURCES) $(ieee_SOURCES) $(ip_link_SOURCES) $(ip_raw_SOURCES) $(isl_SOURCES) $(mpls_SOURCES) $(ntp_SOURCES) $(ospf_hello_SOURCES) $(ospf_lsa_SOURCES) $(ping_of_death_SOURCES) $(rpc_tcp_SOURCES) $(rpc_udp_SOURCES) $(sebek_SOURCES) $(smurf_SOURCES) $(stp_SOURCES) $(synflood_SOURCES) $(synflood6_SOURCES) $(synflood6_frag_SOURCES) $(tcp1_SOURCES) $(tcp2_SOURCES) $(tftp_SOURCES) $(tring_tcp1_SOURCES) $(tring_tcp2_SOURCES) $(udp1_SOURCES) $(udp2_SOURCES)

all: all-am

.SUFFIXES:
.SUFFIXES: .c .o .obj
$(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ Makefile.am $(top_srcdir)/Makefile.am.common $(top_srcdir)/configure.in $(ACLOCAL_M4)
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --foreign  sample/Makefile
Makefile: @MAINTAINER_MODE_TRUE@ $(srcdir)/Makefile.in  $(top_builddir)/config.status
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)

clean-noinstPROGRAMS:
	-test -z "$(noinst_PROGRAMS)" || rm -f $(noinst_PROGRAMS)
arp$(EXEEXT): $(arp_OBJECTS) $(arp_DEPENDENCIES) 
	@rm -f arp$(EXEEXT)
	$(LINK) $(arp_LDFLAGS) $(arp_OBJECTS) $(arp_LDADD) $(LIBS)
bgp4_hdr$(EXEEXT): $(bgp4_hdr_OBJECTS) $(bgp4_hdr_DEPENDENCIES) 
	@rm -f bgp4_hdr$(EXEEXT)
	$(LINK) $(bgp4_hdr_LDFLAGS) $(bgp4_hdr_OBJECTS) $(bgp4_hdr_LDADD) $(LIBS)
bgp4_notification$(EXEEXT): $(bgp4_notification_OBJECTS) $(bgp4_notification_DEPENDENCIES) 
	@rm -f bgp4_notification$(EXEEXT)
	$(LINK) $(bgp4_notification_LDFLAGS) $(bgp4_notification_OBJECTS) $(bgp4_notification_LDADD) $(LIBS)
bgp4_open$(EXEEXT): $(bgp4_open_OBJECTS) $(bgp4_open_DEPENDENCIES) 
	@rm -f bgp4_open$(EXEEXT)
	$(LINK) $(bgp4_open_LDFLAGS) $(bgp4_open_OBJECTS) $(bgp4_open_LDADD) $(LIBS)
bgp4_update$(EXEEXT): $(bgp4_update_OBJECTS) $(bgp4_update_DEPENDENCIES) 
	@rm -f bgp4_update$(EXEEXT)
	$(LINK) $(bgp4_update_LDFLAGS) $(bgp4_update_OBJECTS) $(bgp4_update_LDADD) $(LIBS)
cdp$(EXEEXT): $(cdp_OBJECTS) $(cdp_DEPENDENCIES) 
	@rm -f cdp$(EXEEXT)
	$(LINK) $(cdp_LDFLAGS) $(cdp_OBJECTS) $(cdp_LDADD) $(LIBS)
dhcp_discover$(EXEEXT): $(dhcp_discover_OBJECTS) $(dhcp_discover_DEPENDENCIES) 
	@rm -f dhcp_discover$(EXEEXT)
	$(LINK) $(dhcp_discover_LDFLAGS) $(dhcp_discover_OBJECTS) $(dhcp_discover_LDADD) $(LIBS)
dns$(EXEEXT): $(dns_OBJECTS) $(dns_DEPENDENCIES) 
	@rm -f dns$(EXEEXT)
	$(LINK) $(dns_LDFLAGS) $(dns_OBJECTS) $(dns_LDADD) $(LIBS)
dot1x$(EXEEXT): $(dot1x_OBJECTS) $(dot1x_DEPENDENCIES) 
	@rm -f dot1x$(EXEEXT)
	$(LINK) $(dot1x_LDFLAGS) $(dot1x_OBJECTS) $(dot1x_LDADD) $(LIBS)
fddi_tcp1$(EXEEXT): $(fddi_tcp1_OBJECTS) $(fddi_tcp1_DEPENDENCIES) 
	@rm -f fddi_tcp1$(EXEEXT)
	$(LINK) $(fddi_tcp1_LDFLAGS) $(fddi_tcp1_OBJECTS) $(fddi_tcp1_LDADD) $(LIBS)
fddi_tcp2$(EXEEXT): $(fddi_tcp2_OBJECTS) $(fddi_tcp2_DEPENDENCIES) 
	@rm -f fddi_tcp2$(EXEEXT)
	$(LINK) $(fddi_tcp2_LDFLAGS) $(fddi_tcp2_OBJECTS) $(fddi_tcp2_LDADD) $(LIBS)
get_addr$(EXEEXT): $(get_addr_OBJECTS) $(get_addr_DEPENDENCIES) 
	@rm -f get_addr$(EXEEXT)
	$(LINK) $(get_addr_LDFLAGS) $(get_addr_OBJECTS) $(get_addr_LDADD) $(LIBS)
gre$(EXEEXT): $(gre_OBJECTS) $(gre_DEPENDENCIES) 
	@rm -f gre$(EXEEXT)
	$(LINK) $(gre_LDFLAGS) $(gre_OBJECTS) $(gre_LDADD) $(LIBS)
icmp6_echoreq$(EXEEXT): $(icmp6_echoreq_OBJECTS) $(icmp6_echoreq_DEPENDENCIES) 
	@rm -f icmp6_echoreq$(EXEEXT)
	$(LINK) $(icmp6_echoreq_LDFLAGS) $(icmp6_echoreq_OBJECTS) $(icmp6_echoreq_LDADD) $(LIBS)
icmp_echo_cq$(EXEEXT): $(icmp_echo_cq_OBJECTS) $(icmp_echo_cq_DEPENDENCIES) 
	@rm -f icmp_echo_cq$(EXEEXT)
	$(LINK) $(icmp_echo_cq_LDFLAGS) $(icmp_echo_cq_OBJECTS) $(icmp_echo_cq_LDADD) $(LIBS)
icmp_redirect$(EXEEXT): $(icmp_redirect_OBJECTS) $(icmp_redirect_DEPENDENCIES) 
	@rm -f icmp_redirect$(EXEEXT)
	$(LINK) $(icmp_redirect_LDFLAGS) $(icmp_redirect_OBJECTS) $(icmp_redirect_LDADD) $(LIBS)
icmp_timeexceed$(EXEEXT): $(icmp_timeexceed_OBJECTS) $(icmp_timeexceed_DEPENDENCIES) 
	@rm -f icmp_timeexceed$(EXEEXT)
	$(LINK) $(icmp_timeexceed_LDFLAGS) $(icmp_timeexceed_OBJECTS) $(icmp_timeexceed_LDADD) $(LIBS)
icmp_timestamp$(EXEEXT): $(icmp_timestamp_OBJECTS) $(icmp_timestamp_DEPENDENCIES) 
	@rm -f icmp_timestamp$(EXEEXT)
	$(LINK) $(icmp_timestamp_LDFLAGS) $(icmp_timestamp_OBJECTS) $(icmp_timestamp_LDADD) $(LIBS)
icmp_unreach$(EXEEXT): $(icmp_unreach_OBJECTS) $(icmp_unreach_DEPENDENCIES) 
	@rm -f icmp_unreach$(EXEEXT)
	$(LINK) $(icmp_unreach_LDFLAGS) $(icmp_unreach_OBJECTS) $(icmp_unreach_LDADD) $(LIBS)
ieee$(EXEEXT): $(ieee_OBJECTS) $(ieee_DEPENDENCIES) 
	@rm -f ieee$(EXEEXT)
	$(LINK) $(ieee_LDFLAGS) $(ieee_OBJECTS) $(ieee_LDADD) $(LIBS)
ip_link$(EXEEXT): $(ip_link_OBJECTS) $(ip_link_DEPENDENCIES) 
	@rm -f ip_link$(EXEEXT)
	$(LINK) $(ip_link_LDFLAGS) $(ip_link_OBJECTS) $(ip_link_LDADD) $(LIBS)
ip_raw$(EXEEXT): $(ip_raw_OBJECTS) $(ip_raw_DEPENDENCIES) 
	@rm -f ip_raw$(EXEEXT)
	$(LINK) $(ip_raw_LDFLAGS) $(ip_raw_OBJECTS) $(ip_raw_LDADD) $(LIBS)
isl$(EXEEXT): $(isl_OBJECTS) $(isl_DEPENDENCIES) 
	@rm -f isl$(EXEEXT)
	$(LINK) $(isl_LDFLAGS) $(isl_OBJECTS) $(isl_LDADD) $(LIBS)
mpls$(EXEEXT): $(mpls_OBJECTS) $(mpls_DEPENDENCIES) 
	@rm -f mpls$(EXEEXT)
	$(LINK) $(mpls_LDFLAGS) $(mpls_OBJECTS) $(mpls_LDADD) $(LIBS)
ntp$(EXEEXT): $(ntp_OBJECTS) $(ntp_DEPENDENCIES) 
	@rm -f ntp$(EXEEXT)
	$(LINK) $(ntp_LDFLAGS) $(ntp_OBJECTS) $(ntp_LDADD) $(LIBS)
ospf_hello$(EXEEXT): $(ospf_hello_OBJECTS) $(ospf_hello_DEPENDENCIES) 
	@rm -f ospf_hello$(EXEEXT)
	$(LINK) $(ospf_hello_LDFLAGS) $(ospf_hello_OBJECTS) $(ospf_hello_LDADD) $(LIBS)
ospf_lsa$(EXEEXT): $(ospf_lsa_OBJECTS) $(ospf_lsa_DEPENDENCIES) 
	@rm -f ospf_lsa$(EXEEXT)
	$(LINK) $(ospf_lsa_LDFLAGS) $(ospf_lsa_OBJECTS) $(ospf_lsa_LDADD) $(LIBS)
ping_of_death$(EXEEXT): $(ping_of_death_OBJECTS) $(ping_of_death_DEPENDENCIES) 
	@rm -f ping_of_death$(EXEEXT)
	$(LINK) $(ping_of_death_LDFLAGS) $(ping_of_death_OBJECTS) $(ping_of_death_LDADD) $(LIBS)
rpc_tcp$(EXEEXT): $(rpc_tcp_OBJECTS) $(rpc_tcp_DEPENDENCIES) 
	@rm -f rpc_tcp$(EXEEXT)
	$(LINK) $(rpc_tcp_LDFLAGS) $(rpc_tcp_OBJECTS) $(rpc_tcp_LDADD) $(LIBS)
rpc_udp$(EXEEXT): $(rpc_udp_OBJECTS) $(rpc_udp_DEPENDENCIES) 
	@rm -f rpc_udp$(EXEEXT)
	$(LINK) $(rpc_udp_LDFLAGS) $(rpc_udp_OBJECTS) $(rpc_udp_LDADD) $(LIBS)
sebek$(EXEEXT): $(sebek_OBJECTS) $(sebek_DEPENDENCIES) 
	@rm -f sebek$(EXEEXT)
	$(LINK) $(sebek_LDFLAGS) $(sebek_OBJECTS) $(sebek_LDADD) $(LIBS)
smurf$(EXEEXT): $(smurf_OBJECTS) $(smurf_DEPENDENCIES) 
	@rm -f smurf$(EXEEXT)
	$(LINK) $(smurf_LDFLAGS) $(smurf_OBJECTS) $(smurf_LDADD) $(LIBS)
stp$(EXEEXT): $(stp_OBJECTS) $(stp_DEPENDENCIES) 
	@rm -f stp$(EXEEXT)
	$(LINK) $(stp_LDFLAGS) $(stp_OBJECTS) $(stp_LDADD) $(LIBS)
synflood$(EXEEXT): $(synflood_OBJECTS) $(synflood_DEPENDENCIES) 
	@rm -f synflood$(EXEEXT)
	$(LINK) $(synflood_LDFLAGS) $(synflood_OBJECTS) $(synflood_LDADD) $(LIBS)
synflood6$(EXEEXT): $(synflood6_OBJECTS) $(synflood6_DEPENDENCIES) 
	@rm -f synflood6$(EXEEXT)
	$(LINK) $(synflood6_LDFLAGS) $(synflood6_OBJECTS) $(synflood6_LDADD) $(LIBS)
synflood6_frag$(EXEEXT): $(synflood6_frag_OBJECTS) $(synflood6_frag_DEPENDENCIES) 
	@rm -f synflood6_frag$(EXEEXT)
	$(LINK) $(synflood6_frag_LDFLAGS) $(synflood6_frag_OBJECTS) $(synflood6_frag_LDADD) $(LIBS)
tcp1$(EXEEXT): $(tcp1_OBJECTS) $(tcp1_DEPENDENCIES) 
	@rm -f tcp1$(EXEEXT)
	$(LINK) $(tcp1_LDFLAGS) $(tcp1_OBJECTS) $(tcp1_LDADD) $(LIBS)
tcp2$(EXEEXT): $(tcp2_OBJECTS) $(tcp2_DEPENDENCIES) 
	@rm -f tcp2$(EXEEXT)
	$(LINK) $(tcp2_LDFLAGS) $(tcp2_OBJECTS) $(tcp2_LDADD) $(LIBS)
tftp$(EXEEXT): $(tftp_OBJECTS) $(tftp_DEPENDENCIES) 
	@rm -f tftp$(EXEEXT)
	$(LINK) $(tftp_LDFLAGS) $(tftp_OBJECTS) $(tftp_LDADD) $(LIBS)
tring_tcp1$(EXEEXT): $(tring_tcp1_OBJECTS) $(tring_tcp1_DEPENDENCIES) 
	@rm -f tring_tcp1$(EXEEXT)
	$(LINK) $(tring_tcp1_LDFLAGS) $(tring_tcp1_OBJECTS) $(tring_tcp1_LDADD) $(LIBS)
tring_tcp2$(EXEEXT): $(tring_tcp2_OBJECTS) $(tring_tcp2_DEPENDENCIES) 
	@rm -f tring_tcp2$(EXEEXT)
	$(LINK) $(tring_tcp2_LDFLAGS) $(tring_tcp2_OBJECTS) $(tring_tcp2_LDADD) $(LIBS)
udp1$(EXEEXT): $(udp1_OBJECTS) $(udp1_DEPENDENCIES) 
	@rm -f udp1$(EXEEXT)
	$(LINK) $(udp1_LDFLAGS) $(udp1_OBJECTS) $(udp1_LDADD) $(LIBS)
udp2$(EXEEXT): $(udp2_OBJECTS) $(udp2_DEPENDENCIES) 
	@rm -f udp2$(EXEEXT)
	$(LINK) $(udp2_LDFLAGS) $(udp2_OBJECTS) $(udp2_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT) core *.core

distclean-compile:
	-rm -f *.tab.c

.c.o:
	$(COMPILE) -c `test -f '$<' || echo '$(srcdir)/'`$<

.c.obj:
	$(COMPILE) -c `cygpath -w $<`
uninstall-info-am:

ETAGS = etags
ETAGSFLAGS =

tags: TAGS

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(ETAGS_ARGS)$$tags$$unique" \
	  || $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)

top_distdir = ..
distdir = $(top_distdir)/$(PACKAGE)-$(VERSION)

distdir: $(DISTFILES)
	@list='$(DISTFILES)'; for file in $$list; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkinstalldirs) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(PROGRAMS)

installdirs:

install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-rm -f Makefile $(CONFIG_CLEAN_FILES)
	-test -z "$(DISTCLEANFILES)" || rm -f $(DISTCLEANFILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-noinstPROGRAMS mostlyclean-am

distclean: distclean-am

distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

info: info-am

info-am:

install-data-am:

install-exec-am:

install-info: install-info-am

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-am

maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic

uninstall-am: uninstall-info-am

.PHONY: GTAGS all all-am check check-am clean clean-generic \
	clean-noinstPROGRAMS distclean distclean-compile \
	distclean-generic distclean-tags distdir dvi dvi-am info \
	info-am install install-am install-data install-data-am \
	install-exec install-exec-am install-info install-info-am \
	install-man install-strip installcheck installcheck-am \
	installdirs maintainer-clean maintainer-clean-generic \
	mostlyclean mostlyclean-compile mostlyclean-generic tags \
	uninstall uninstall-am uninstall-info-am

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
