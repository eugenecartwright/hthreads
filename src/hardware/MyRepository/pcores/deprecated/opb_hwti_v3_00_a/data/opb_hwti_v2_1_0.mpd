## Copyright (c) 2004 Xilinx, Inc. All Rights Reserved.
## You may copy and modify these files for your own internal use solely with
## Xilinx programmable logic devices and  Xilinx EDK system or create IP
## modules solely for Xilinx programmable logic devices and Xilinx EDK system.
## No rights are granted to distribute any files unless they are distributed in
## Xilinx programmable logic devices.
###################################################################
##
## Name     : opb_hwti
## Desc     : Microprocessor Peripheral Description
##          : Automatically generated by PsfUtility
##
###################################################################

BEGIN opb_hwti

## Peripheral Options
OPTION IPTYPE = PERIPHERAL
OPTION IMP_NETLIST = TRUE
OPTION HDL = VHDL
OPTION IP_GROUP = MICROBLAZE:PPC:USER
OPTION CORE_STATE = DEVELOPMENT


## Bus Interfaces
BUS_INTERFACE BUS = MSOPB, BUS_TYPE = MASTER_SLAVE, BUS_STD = OPB

BUS_INTERFACE BUS=SFSL0, BUS_STD=FSL, BUS_TYPE=SLAVE
BUS_INTERFACE BUS=SFSL1, BUS_STD=FSL, BUS_TYPE=SLAVE
BUS_INTERFACE BUS=SFSL2, BUS_STD=FSL, BUS_TYPE=SLAVE

BUS_INTERFACE BUS=MFSL0, BUS_STD=FSL, BUS_TYPE=MASTER
BUS_INTERFACE BUS=MFSL1, BUS_STD=FSL, BUS_TYPE=MASTER




## Generics for VHDL or Parameters for Verilog
PARAMETER C_BASEADDR = 0xffffffff, DT = std_logic_vector, MIN_SIZE = 0x100, BUS = MSOPB, ADDRESS = BASE, PAIR = C_HIGHADDR
PARAMETER C_HIGHADDR = 0x00000000, DT = std_logic_vector, BUS = MSOPB, ADDRESS = HIGH, PAIR = C_BASEADDR
PARAMETER C_OPB_AWIDTH = 32, DT = INTEGER, BUS = MSOPB
PARAMETER C_OPB_DWIDTH = 32, DT = INTEGER, BUS = MSOPB
PARAMETER C_FAMILY = virtex2p, DT = STRING
PARAMETER C_NUM_THREADS = 256, DT = INTEGER
PARAMETER C_NUM_MUTEXES = 64, DT = INTEGER
PARAMETER C_THREAD_MANAGER_BADDR = 0x60000000, DT=std_logic_vector
PARAMETER C_MUTEX_MANAGER_BADDR = 0x75000000, DT=std_logic_vector
PARAMETER C_CONVAR_MANAGER_BADDR = 0x74000000, DT=std_logic_vector

## Ports
## Global Ports
PORT OPB_Clk = "", DIR = I, SIGIS = Clk, BUS = MSOPB
PORT OPB_Rst = OPB_Rst, DIR = I, SIGIS = Rst, BUS = MSOPB

## OPB Slave Output Signals
PORT Sl_DBus = Sl_DBus, DIR = O, VEC = [0:(C_OPB_DWIDTH-1)], BUS = MSOPB
PORT Sl_errAck = Sl_errAck, DIR = O, BUS = MSOPB
PORT Sl_retry = Sl_retry, DIR = O, BUS = MSOPB
PORT Sl_toutSup = Sl_toutSup, DIR = O, BUS = MSOPB
PORT Sl_xferAck = Sl_xferAck, DIR = O, BUS = MSOPB

## OPB Master/Slave Input Signals
PORT OPB_ABus = OPB_ABus, DIR = I, VEC = [0:(C_OPB_AWIDTH-1)], BUS = MSOPB
PORT OPB_BE = OPB_BE, DIR = I, VEC = [0:((C_OPB_DWIDTH/8)-1)], BUS = MSOPB
PORT OPB_DBus = OPB_DBus, DIR = I, VEC = [0:(C_OPB_DWIDTH-1)], BUS = MSOPB
PORT OPB_RNW = OPB_RNW, DIR = I, BUS = MSOPB
PORT OPB_select = OPB_select, DIR = I, BUS = MSOPB
PORT OPB_seqAddr = OPB_seqAddr, DIR = I, BUS = MSOPB

## OPB Master Output Signals
PORT M_ABus = M_ABus, DIR = O, VEC = [0:(C_OPB_AWIDTH-1)], BUS = MSOPB
PORT M_BE = M_BE, DIR = O, VEC = [0:((C_OPB_DWIDTH/8)-1)], BUS = MSOPB
PORT M_busLock = M_busLock, DIR = O, BUS = MSOPB
PORT M_request = M_request, DIR = O, BUS = MSOPB
PORT M_RNW = M_RNW, DIR = O, BUS = MSOPB
PORT M_select = M_select, DIR = O, BUS = MSOPB
PORT M_seqAddr = M_seqAddr, DIR = O, BUS = MSOPB

## OPB Master Input Signals
PORT OPB_errAck = OPB_errAck, DIR = I, BUS = MSOPB
PORT OPB_MGrant = OPB_MGrant, DIR = I, BUS = MSOPB
PORT OPB_retry = OPB_retry, DIR = I, BUS = MSOPB
PORT OPB_timeout = OPB_timeout, DIR = I, BUS = MSOPB
PORT OPB_xferAck = OPB_xferAck, DIR = I, BUS = MSOPB

#####################################################################

PORT FSL0_S_Read    = FSL_S_Read,    DIR=O,               BUS=SFSL0
PORT FSL0_S_Data    = FSL_S_Data,    DIR=I, VEC=[0:31],   BUS=SFSL0
PORT FSL0_S_Exists  = FSL_S_Exists,  DIR=I,               BUS=SFSL0

PORT FSL1_S_Read    = FSL_S_Read,    DIR=O,               BUS=SFSL1
PORT FSL1_S_Data    = FSL_S_Data,    DIR=I, VEC=[0:31],   BUS=SFSL1
PORT FSL1_S_Exists  = FSL_S_Exists,  DIR=I,               BUS=SFSL1

PORT FSL2_S_Read    = FSL_S_Read,    DIR=O,               BUS=SFSL2
PORT FSL2_S_Data    = FSL_S_Data,    DIR=I, VEC=[0:31],   BUS=SFSL2
PORT FSL2_S_Exists  = FSL_S_Exists,  DIR=I,               BUS=SFSL2


#####################################################################
PORT FSL0_M_Write   = FSL_M_Write,   DIR=O,               BUS=MFSL0
PORT FSL0_M_Data    = FSL_M_Data,    DIR=O, VEC=[0:31],   BUS=MFSL0
PORT FSL0_M_Full    = FSL_M_Full,    DIR=I,               BUS=MFSL0

PORT FSL1_M_Write   = FSL_M_Write,   DIR=O,               BUS=MFSL1
PORT FSL1_M_Data    = FSL_M_Data,    DIR=O, VEC=[0:31],   BUS=MFSL1
PORT FSL1_M_Full    = FSL_M_Full,    DIR=I,               BUS=MFSL1



PORT    OPBintrfc2thrd_value   =OPBintrfc2thrd_value    , DIR = O , VEC = [0:31]
PORT    OPBintrfc2thrd_function=OPBintrfc2thrd_function , DIR = O , VEC = [0:15] 
PORT    OPBintrfc2thrd_goWait  =OPBintrfc2thrd_goWait   , DIR = O 
PORT    OPBthrd2intrfc_address =OPBthrd2intrfc_address  , DIR = O , VEC = [0:31] 
PORT    OPBthrd2intrfc_value   =OPBthrd2intrfc_value    , DIR = O , VEC = [0:31] 
PORT    OPBthrd2intrfc_function=OPBthrd2intrfc_function , DIR = O , VEC = [0:15] 
PORT    OPBthrd2intrfc_opcode  =OPBthrd2intrfc_opcode   , DIR = O , VEC = [0:5]      
PORT    OPBtimer=OPBtimer , DIR = O , VEC = [0:31] 

PORT    OPBM_ABus=OPBM_ABus       , DIR = O , VEC = [0:31] 
PORT    OPBM_request=OPBM_request , DIR = O  
PORT    OPBM_MGrant= OPBM_MGrant  , DIR =O 
PORT    OPBM_xferAck= OPBM_xferAck  , DIR =O 
PORT    OPBM_select= OPBM_select  , DIR =O 

          

END
