#     XILINX IS PROVIDING THIS DESIGN, CODE, OR INFORMATION "AS IS"
#     SOLELY FOR USE IN DEVELOPING PROGRAMS AND SOLUTIONS FOR
#     XILINX DEVICES.  BY PROVIDING THIS DESIGN, CODE, OR INFORMATION
#     AS ONE POSSIBLE IMPLEMENTATION OF THIS FEATURE, APPLICATION
#     OR STANDARD, XILINX IS MAKING NO REPRESENTATION THAT THIS
#     IMPLEMENTATION IS FREE FROM ANY CLAIMS OF INFRINGEMENT,
#     AND YOU ARE RESPONSIBLE FOR OBTAINING ANY RIGHTS YOU MAY REQUIRE
#     FOR YOUR IMPLEMENTATION.  XILINX EXPRESSLY DISCLAIMS ANY
#     WARRANTY WHATSOEVER WITH RESPECT TO THE ADEQUACY OF THE
#     IMPLEMENTATION, INCLUDING BUT NOT LIMITED TO ANY WARRANTIES OR
#     REPRESENTATIONS THAT THIS IMPLEMENTATION IS FREE FROM CLAIMS OF
#     INFRINGEMENT, IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
#     FOR A PARTICULAR PURPOSE.
#     
#     (c) Copyright 2004 Xilinx, Inc.
#     All rights reserved.

OPTION psf_version = 2.1;

BEGIN driver ps2_ref

  OPTION supported_peripherals = (opb_ps2_ref, opb_ps2_dual_ref);

  PARAM name = level, desc = "Driver Level", type = int, default = 0, range = (0, 1);

  BEGIN BLOCK, dep = (level = 0)
    OPTION depends = (common_v1_00_a);
    OPTION copyfiles = (xps2_l.c xps2_l.h Makefile);

    BEGIN ARRAY interrupt_handler
      PROPERTY desc = "Interrupt Handler Information";
      PROPERTY size = 1, permit = none;
      PARAM name = int_handler, default = XIntc_DefaultHandler, desc = "Name of Interrupt Handler", type = string;
      PARAM name = int_port, default = IP2INTC_Irpt, desc = "Interrupt pin associated with the interrupt handler", permit = none;
    END ARRAY
  END BLOCK

  BEGIN BLOCK, dep = (level = 1)
    OPTION depends = (common_v1_00_a);
    OPTION copyfiles = all;

    BEGIN ARRAY interrupt_handler
      PROPERTY desc = "Interrupt Handler Information";
      PROPERTY size = 1, permit = none;
      PARAM name = int_handler, default = XPs2_InterruptHandler, desc = "Name of Interrupt Handler", type = string;
      PARAM name = int_port, default = IP2INTC_Irpt, desc = "Interrupt pin associated with the interrupt handler", permit = none;
    END ARRAY
  END BLOCK

 BEGIN INTERFACE linux
 END INTERFACE

END driver
