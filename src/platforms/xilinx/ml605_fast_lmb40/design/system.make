#################################################################
# Makefile generated by Xilinx Platform Studio 
# Project:/home/eugene/homogeneous_port/src/platforms/xilinx/ml605_fast_lmb40/design/system.xmp
#
# WARNING : This file will be re-generated every time a command
# to run a make target is invoked. So, any changes made to this  
# file manually, will be lost when make is invoked next. 
#################################################################

# Name of the Microprocessor system
# The hardware specification of the system is in file :
# /home/eugene/homogeneous_port/src/platforms/xilinx/ml605_fast_lmb40/design/system.mhs
# The software specification of the system is in file :
# /home/eugene/homogeneous_port/src/platforms/xilinx/ml605_fast_lmb40/design/system.mss

include system_incl.make

#################################################################
# PHONY TARGETS
#################################################################
.PHONY: dummy
.PHONY: netlistclean
.PHONY: bitsclean
.PHONY: simclean
.PHONY: exporttosdk

#################################################################
# EXTERNAL TARGETS
#################################################################
all:
	@echo "Makefile to build a Microprocessor system :"
	@echo "Run make with any of the following targets"
	@echo " "
	@echo "  netlist  : Generates the netlist for the given MHS "
	@echo "  bits     : Runs Implementation tools to generate the bitstream"
	@echo "  exporttosdk: Export files to SDK"
	@echo " "
	@echo "  libs     : Configures the sw libraries for this system"
	@echo "  program  : Compiles the program sources for all the processor instances"
	@echo "  initprogram  : Compiles the program sources for the application that is marked for BRAM initialization"
	@echo " "
	@echo "  init_bram: Initializes bitstream with BRAM data"
	@echo "  ace      : Generate ace file from bitstream and elf"
	@echo "  download : Downloads the bitstream onto the board"
	@echo " "
	@echo "  sim      : Generates HDL simulation models and runs simulator for chosen simulation mode"
	@echo "  simmodel : Generates HDL simulation models for chosen simulation mode"
	@echo "  behavioral_model : Generates behavioral HDL models with BRAM initialization"
	@echo "  structural_model : Generates structural simulation HDL models with BRAM initialization"
	@echo "  timing   : Generates timing simulation HDL models with BRAM initialization"
	@echo " "
	@echo "  netlistclean: Deletes netlist"
	@echo "  bitsclean: Deletes bit, ncd, bmm files"
	@echo "  hwclean  : Deletes implementation dir"
	@echo "  libsclean: Deletes sw libraries"
	@echo "  programclean: Deletes compiled ELF files"
	@echo "  swclean  : Deletes sw libraries and ELF files"
	@echo "  simclean : Deletes simulation dir"
	@echo "  clean    : Deletes all generated files/directories"
	@echo " "
	@echo "  make <target> : (Default)"
	@echo "      Creates a Microprocessor system using default initializations"
	@echo "      specified for each processor in MSS file"


bits: $(SYSTEM_BIT)

ace: $(SYSTEM_ACE)

exporttosdk: $(SYSTEM_HW_HANDOFF_DEP)

netlist: $(POSTSYN_NETLIST)

libs: $(LIBRARIES)

program: $(ALL_USER_ELF_FILES)

initprogram: $(BRAMINIT_ELF_FILES)

download: $(DOWNLOAD_BIT) dummy
	@echo "*********************************************"
	@echo "Downloading Bitstream onto the target board"
	@echo "*********************************************"
	impact -batch etc/download.cmd

init_bram: $(DOWNLOAD_BIT)

sim: $(DEFAULT_SIM_SCRIPT)
	cd simulation/behavioral; \
	$(SIM_CMD) -gui -do $(^F) &

simmodel: $(DEFAULT_SIM_SCRIPT)

behavioral_model: $(BEHAVIORAL_SIM_SCRIPT)

structural_model: $(STRUCTURAL_SIM_SCRIPT)

clean: hwclean swclean simclean
	rm -f _impact.cmd

hwclean: netlistclean bitsclean
	rm -rf implementation synthesis xst hdl
	rm -rf xst.srp $(SYSTEM).srp
	rm -f __xps/ise/_xmsgs/bitinit.xmsgs

netlistclean:
	rm -f $(POSTSYN_NETLIST)
	rm -f platgen.log
	rm -f __xps/ise/_xmsgs/platgen.xmsgs
	rm -f $(BMM_FILE)

bitsclean:
	rm -f $(SYSTEM_BIT)
	rm -f implementation/$(SYSTEM).ncd
	rm -f implementation/$(SYSTEM)_bd.bmm 
	rm -f implementation/$(SYSTEM)_map.ncd 
	rm -f __xps/$(SYSTEM)_routed

simclean: 
	rm -rf simulation/behavioral
	rm -f simgen.log
	rm -f __xps/ise/_xmsgs/simgen.xmsgs

swclean: libsclean programclean

libsclean: $(LIBSCLEAN_TARGETS)
	rm -f libgen.log
	rm -f __xps/ise/_xmsgs/libgen.xmsgs

programclean: $(PROGRAMCLEAN_TARGETS)

#################################################################
# SOFTWARE PLATFORM FLOW
#################################################################


$(LIBRARIES): $(MHSFILE) $(MSSFILE) __xps/libgen.opt
	@echo "*********************************************"
	@echo "Creating software libraries..."
	@echo "*********************************************"
	libgen $(LIBGEN_OPTIONS) $(MSSFILE)


microblaze_0_libsclean:
	rm -rf microblaze_0/

microblaze_1_libsclean:
	rm -rf microblaze_1/

microblaze_2_libsclean:
	rm -rf microblaze_2/

microblaze_3_libsclean:
	rm -rf microblaze_3/

microblaze_4_libsclean:
	rm -rf microblaze_4/

microblaze_5_libsclean:
	rm -rf microblaze_5/

microblaze_6_libsclean:
	rm -rf microblaze_6/

microblaze_7_libsclean:
	rm -rf microblaze_7/

microblaze_8_libsclean:
	rm -rf microblaze_8/

microblaze_9_libsclean:
	rm -rf microblaze_9/

microblaze_10_libsclean:
	rm -rf microblaze_10/

microblaze_11_libsclean:
	rm -rf microblaze_11/

microblaze_12_libsclean:
	rm -rf microblaze_12/

microblaze_13_libsclean:
	rm -rf microblaze_13/

microblaze_14_libsclean:
	rm -rf microblaze_14/

microblaze_15_libsclean:
	rm -rf microblaze_15/

microblaze_16_libsclean:
	rm -rf microblaze_16/

microblaze_17_libsclean:
	rm -rf microblaze_17/

microblaze_18_libsclean:
	rm -rf microblaze_18/

microblaze_19_libsclean:
	rm -rf microblaze_19/

microblaze_20_libsclean:
	rm -rf microblaze_20/

microblaze_21_libsclean:
	rm -rf microblaze_21/

microblaze_22_libsclean:
	rm -rf microblaze_22/

microblaze_23_libsclean:
	rm -rf microblaze_23/

microblaze_24_libsclean:
	rm -rf microblaze_24/

microblaze_25_libsclean:
	rm -rf microblaze_25/

microblaze_26_libsclean:
	rm -rf microblaze_26/

microblaze_27_libsclean:
	rm -rf microblaze_27/

microblaze_28_libsclean:
	rm -rf microblaze_28/

microblaze_29_libsclean:
	rm -rf microblaze_29/

microblaze_30_libsclean:
	rm -rf microblaze_30/

microblaze_31_libsclean:
	rm -rf microblaze_31/

microblaze_32_libsclean:
	rm -rf microblaze_32/

microblaze_33_libsclean:
	rm -rf microblaze_33/

microblaze_34_libsclean:
	rm -rf microblaze_34/

microblaze_35_libsclean:
	rm -rf microblaze_35/

microblaze_36_libsclean:
	rm -rf microblaze_36/

microblaze_37_libsclean:
	rm -rf microblaze_37/

microblaze_38_libsclean:
	rm -rf microblaze_38/

microblaze_39_libsclean:
	rm -rf microblaze_39/

#################################################################
# SOFTWARE APPLICATION CORETEST
#################################################################

CoreTest_program: $(CORETEST_OUTPUT) 

$(CORETEST_OUTPUT) : $(CORETEST_SOURCES) $(CORETEST_HEADERS) $(CORETEST_LINKER_SCRIPT) \
                    $(LIBRARIES) __xps/coretest_compiler.opt
	@mkdir -p $(CORETEST_OUTPUT_DIR) 
	$(CORETEST_CC) $(CORETEST_CC_OPT) $(CORETEST_SOURCES) -o $(CORETEST_OUTPUT) \
	$(CORETEST_OTHER_CC_FLAGS) $(CORETEST_INCLUDES) $(CORETEST_LIBPATH) \
	$(CORETEST_CFLAGS) $(CORETEST_LFLAGS) 
	$(CORETEST_CC_SIZE) $(CORETEST_OUTPUT) 
	@echo ""

CoreTest_programclean:
	rm -f $(CORETEST_OUTPUT) 

#################################################################
# SOFTWARE APPLICATION MB_HWT1
#################################################################

MB_HWT1_program: $(MB_HWT1_OUTPUT) 

$(MB_HWT1_OUTPUT) : $(MB_HWT1_SOURCES) $(MB_HWT1_HEADERS) $(MB_HWT1_LINKER_SCRIPT) \
                    $(LIBRARIES) __xps/mb_hwt1_compiler.opt
	@mkdir -p $(MB_HWT1_OUTPUT_DIR) 
	$(MB_HWT1_CC) $(MB_HWT1_CC_OPT) $(MB_HWT1_SOURCES) -o $(MB_HWT1_OUTPUT) \
	$(MB_HWT1_OTHER_CC_FLAGS) $(MB_HWT1_INCLUDES) $(MB_HWT1_LIBPATH) \
	$(MB_HWT1_CFLAGS) $(MB_HWT1_LFLAGS) 
	$(MB_HWT1_CC_SIZE) $(MB_HWT1_OUTPUT) 
	@echo ""

MB_HWT1_programclean:
	rm -f $(MB_HWT1_OUTPUT) 

#################################################################
# SOFTWARE APPLICATION MB_HWT2
#################################################################

MB_HWT2_program: $(MB_HWT2_OUTPUT) 

$(MB_HWT2_OUTPUT) : $(MB_HWT2_SOURCES) $(MB_HWT2_HEADERS) $(MB_HWT2_LINKER_SCRIPT) \
                    $(LIBRARIES) __xps/mb_hwt2_compiler.opt
	@mkdir -p $(MB_HWT2_OUTPUT_DIR) 
	$(MB_HWT2_CC) $(MB_HWT2_CC_OPT) $(MB_HWT2_SOURCES) -o $(MB_HWT2_OUTPUT) \
	$(MB_HWT2_OTHER_CC_FLAGS) $(MB_HWT2_INCLUDES) $(MB_HWT2_LIBPATH) \
	$(MB_HWT2_CFLAGS) $(MB_HWT2_LFLAGS) 
	$(MB_HWT2_CC_SIZE) $(MB_HWT2_OUTPUT) 
	@echo ""

MB_HWT2_programclean:
	rm -f $(MB_HWT2_OUTPUT) 

#################################################################
# SOFTWARE APPLICATION MB_HWT3
#################################################################

MB_HWT3_program: $(MB_HWT3_OUTPUT) 

$(MB_HWT3_OUTPUT) : $(MB_HWT3_SOURCES) $(MB_HWT3_HEADERS) $(MB_HWT3_LINKER_SCRIPT) \
                    $(LIBRARIES) __xps/mb_hwt3_compiler.opt
	@mkdir -p $(MB_HWT3_OUTPUT_DIR) 
	$(MB_HWT3_CC) $(MB_HWT3_CC_OPT) $(MB_HWT3_SOURCES) -o $(MB_HWT3_OUTPUT) \
	$(MB_HWT3_OTHER_CC_FLAGS) $(MB_HWT3_INCLUDES) $(MB_HWT3_LIBPATH) \
	$(MB_HWT3_CFLAGS) $(MB_HWT3_LFLAGS) 
	$(MB_HWT3_CC_SIZE) $(MB_HWT3_OUTPUT) 
	@echo ""

MB_HWT3_programclean:
	rm -f $(MB_HWT3_OUTPUT) 

#################################################################
# SOFTWARE APPLICATION MB_HWT4
#################################################################

MB_HWT4_program: $(MB_HWT4_OUTPUT) 

$(MB_HWT4_OUTPUT) : $(MB_HWT4_SOURCES) $(MB_HWT4_HEADERS) $(MB_HWT4_LINKER_SCRIPT) \
                    $(LIBRARIES) __xps/mb_hwt4_compiler.opt
	@mkdir -p $(MB_HWT4_OUTPUT_DIR) 
	$(MB_HWT4_CC) $(MB_HWT4_CC_OPT) $(MB_HWT4_SOURCES) -o $(MB_HWT4_OUTPUT) \
	$(MB_HWT4_OTHER_CC_FLAGS) $(MB_HWT4_INCLUDES) $(MB_HWT4_LIBPATH) \
	$(MB_HWT4_CFLAGS) $(MB_HWT4_LFLAGS) 
	$(MB_HWT4_CC_SIZE) $(MB_HWT4_OUTPUT) 
	@echo ""

MB_HWT4_programclean:
	rm -f $(MB_HWT4_OUTPUT) 

#################################################################
# SOFTWARE APPLICATION MB_HWT5
#################################################################

MB_HWT5_program: $(MB_HWT5_OUTPUT) 

$(MB_HWT5_OUTPUT) : $(MB_HWT5_SOURCES) $(MB_HWT5_HEADERS) $(MB_HWT5_LINKER_SCRIPT) \
                    $(LIBRARIES) __xps/mb_hwt5_compiler.opt
	@mkdir -p $(MB_HWT5_OUTPUT_DIR) 
	$(MB_HWT5_CC) $(MB_HWT5_CC_OPT) $(MB_HWT5_SOURCES) -o $(MB_HWT5_OUTPUT) \
	$(MB_HWT5_OTHER_CC_FLAGS) $(MB_HWT5_INCLUDES) $(MB_HWT5_LIBPATH) \
	$(MB_HWT5_CFLAGS) $(MB_HWT5_LFLAGS) 
	$(MB_HWT5_CC_SIZE) $(MB_HWT5_OUTPUT) 
	@echo ""

MB_HWT5_programclean:
	rm -f $(MB_HWT5_OUTPUT) 

#################################################################
# SOFTWARE APPLICATION MB_HWT6
#################################################################

MB_HWT6_program: $(MB_HWT6_OUTPUT) 

$(MB_HWT6_OUTPUT) : $(MB_HWT6_SOURCES) $(MB_HWT6_HEADERS) $(MB_HWT6_LINKER_SCRIPT) \
                    $(LIBRARIES) __xps/mb_hwt6_compiler.opt
	@mkdir -p $(MB_HWT6_OUTPUT_DIR) 
	$(MB_HWT6_CC) $(MB_HWT6_CC_OPT) $(MB_HWT6_SOURCES) -o $(MB_HWT6_OUTPUT) \
	$(MB_HWT6_OTHER_CC_FLAGS) $(MB_HWT6_INCLUDES) $(MB_HWT6_LIBPATH) \
	$(MB_HWT6_CFLAGS) $(MB_HWT6_LFLAGS) 
	$(MB_HWT6_CC_SIZE) $(MB_HWT6_OUTPUT) 
	@echo ""

MB_HWT6_programclean:
	rm -f $(MB_HWT6_OUTPUT) 

#################################################################
# SOFTWARE APPLICATION MB_HWT7
#################################################################

MB_HWT7_program: $(MB_HWT7_OUTPUT) 

$(MB_HWT7_OUTPUT) : $(MB_HWT7_SOURCES) $(MB_HWT7_HEADERS) $(MB_HWT7_LINKER_SCRIPT) \
                    $(LIBRARIES) __xps/mb_hwt7_compiler.opt
	@mkdir -p $(MB_HWT7_OUTPUT_DIR) 
	$(MB_HWT7_CC) $(MB_HWT7_CC_OPT) $(MB_HWT7_SOURCES) -o $(MB_HWT7_OUTPUT) \
	$(MB_HWT7_OTHER_CC_FLAGS) $(MB_HWT7_INCLUDES) $(MB_HWT7_LIBPATH) \
	$(MB_HWT7_CFLAGS) $(MB_HWT7_LFLAGS) 
	$(MB_HWT7_CC_SIZE) $(MB_HWT7_OUTPUT) 
	@echo ""

MB_HWT7_programclean:
	rm -f $(MB_HWT7_OUTPUT) 

#################################################################
# SOFTWARE APPLICATION MB_HWT8
#################################################################

MB_HWT8_program: $(MB_HWT8_OUTPUT) 

$(MB_HWT8_OUTPUT) : $(MB_HWT8_SOURCES) $(MB_HWT8_HEADERS) $(MB_HWT8_LINKER_SCRIPT) \
                    $(LIBRARIES) __xps/mb_hwt8_compiler.opt
	@mkdir -p $(MB_HWT8_OUTPUT_DIR) 
	$(MB_HWT8_CC) $(MB_HWT8_CC_OPT) $(MB_HWT8_SOURCES) -o $(MB_HWT8_OUTPUT) \
	$(MB_HWT8_OTHER_CC_FLAGS) $(MB_HWT8_INCLUDES) $(MB_HWT8_LIBPATH) \
	$(MB_HWT8_CFLAGS) $(MB_HWT8_LFLAGS) 
	$(MB_HWT8_CC_SIZE) $(MB_HWT8_OUTPUT) 
	@echo ""

MB_HWT8_programclean:
	rm -f $(MB_HWT8_OUTPUT) 

#################################################################
# SOFTWARE APPLICATION MB_HWT9
#################################################################

MB_HWT9_program: $(MB_HWT9_OUTPUT) 

$(MB_HWT9_OUTPUT) : $(MB_HWT9_SOURCES) $(MB_HWT9_HEADERS) $(MB_HWT9_LINKER_SCRIPT) \
                    $(LIBRARIES) __xps/mb_hwt9_compiler.opt
	@mkdir -p $(MB_HWT9_OUTPUT_DIR) 
	$(MB_HWT9_CC) $(MB_HWT9_CC_OPT) $(MB_HWT9_SOURCES) -o $(MB_HWT9_OUTPUT) \
	$(MB_HWT9_OTHER_CC_FLAGS) $(MB_HWT9_INCLUDES) $(MB_HWT9_LIBPATH) \
	$(MB_HWT9_CFLAGS) $(MB_HWT9_LFLAGS) 
	$(MB_HWT9_CC_SIZE) $(MB_HWT9_OUTPUT) 
	@echo ""

MB_HWT9_programclean:
	rm -f $(MB_HWT9_OUTPUT) 

#################################################################
# SOFTWARE APPLICATION MB_HWT10
#################################################################

MB_HWT10_program: $(MB_HWT10_OUTPUT) 

$(MB_HWT10_OUTPUT) : $(MB_HWT10_SOURCES) $(MB_HWT10_HEADERS) $(MB_HWT10_LINKER_SCRIPT) \
                    $(LIBRARIES) __xps/mb_hwt10_compiler.opt
	@mkdir -p $(MB_HWT10_OUTPUT_DIR) 
	$(MB_HWT10_CC) $(MB_HWT10_CC_OPT) $(MB_HWT10_SOURCES) -o $(MB_HWT10_OUTPUT) \
	$(MB_HWT10_OTHER_CC_FLAGS) $(MB_HWT10_INCLUDES) $(MB_HWT10_LIBPATH) \
	$(MB_HWT10_CFLAGS) $(MB_HWT10_LFLAGS) 
	$(MB_HWT10_CC_SIZE) $(MB_HWT10_OUTPUT) 
	@echo ""

MB_HWT10_programclean:
	rm -f $(MB_HWT10_OUTPUT) 

#################################################################
# SOFTWARE APPLICATION MB_HWT11
#################################################################

MB_HWT11_program: $(MB_HWT11_OUTPUT) 

$(MB_HWT11_OUTPUT) : $(MB_HWT11_SOURCES) $(MB_HWT11_HEADERS) $(MB_HWT11_LINKER_SCRIPT) \
                    $(LIBRARIES) __xps/mb_hwt11_compiler.opt
	@mkdir -p $(MB_HWT11_OUTPUT_DIR) 
	$(MB_HWT11_CC) $(MB_HWT11_CC_OPT) $(MB_HWT11_SOURCES) -o $(MB_HWT11_OUTPUT) \
	$(MB_HWT11_OTHER_CC_FLAGS) $(MB_HWT11_INCLUDES) $(MB_HWT11_LIBPATH) \
	$(MB_HWT11_CFLAGS) $(MB_HWT11_LFLAGS) 
	$(MB_HWT11_CC_SIZE) $(MB_HWT11_OUTPUT) 
	@echo ""

MB_HWT11_programclean:
	rm -f $(MB_HWT11_OUTPUT) 

#################################################################
# SOFTWARE APPLICATION MB_HWT12
#################################################################

MB_HWT12_program: $(MB_HWT12_OUTPUT) 

$(MB_HWT12_OUTPUT) : $(MB_HWT12_SOURCES) $(MB_HWT12_HEADERS) $(MB_HWT12_LINKER_SCRIPT) \
                    $(LIBRARIES) __xps/mb_hwt12_compiler.opt
	@mkdir -p $(MB_HWT12_OUTPUT_DIR) 
	$(MB_HWT12_CC) $(MB_HWT12_CC_OPT) $(MB_HWT12_SOURCES) -o $(MB_HWT12_OUTPUT) \
	$(MB_HWT12_OTHER_CC_FLAGS) $(MB_HWT12_INCLUDES) $(MB_HWT12_LIBPATH) \
	$(MB_HWT12_CFLAGS) $(MB_HWT12_LFLAGS) 
	$(MB_HWT12_CC_SIZE) $(MB_HWT12_OUTPUT) 
	@echo ""

MB_HWT12_programclean:
	rm -f $(MB_HWT12_OUTPUT) 

#################################################################
# SOFTWARE APPLICATION MB_HWT13
#################################################################

MB_HWT13_program: $(MB_HWT13_OUTPUT) 

$(MB_HWT13_OUTPUT) : $(MB_HWT13_SOURCES) $(MB_HWT13_HEADERS) $(MB_HWT13_LINKER_SCRIPT) \
                    $(LIBRARIES) __xps/mb_hwt13_compiler.opt
	@mkdir -p $(MB_HWT13_OUTPUT_DIR) 
	$(MB_HWT13_CC) $(MB_HWT13_CC_OPT) $(MB_HWT13_SOURCES) -o $(MB_HWT13_OUTPUT) \
	$(MB_HWT13_OTHER_CC_FLAGS) $(MB_HWT13_INCLUDES) $(MB_HWT13_LIBPATH) \
	$(MB_HWT13_CFLAGS) $(MB_HWT13_LFLAGS) 
	$(MB_HWT13_CC_SIZE) $(MB_HWT13_OUTPUT) 
	@echo ""

MB_HWT13_programclean:
	rm -f $(MB_HWT13_OUTPUT) 

#################################################################
# SOFTWARE APPLICATION MB_HWT14
#################################################################

MB_HWT14_program: $(MB_HWT14_OUTPUT) 

$(MB_HWT14_OUTPUT) : $(MB_HWT14_SOURCES) $(MB_HWT14_HEADERS) $(MB_HWT14_LINKER_SCRIPT) \
                    $(LIBRARIES) __xps/mb_hwt14_compiler.opt
	@mkdir -p $(MB_HWT14_OUTPUT_DIR) 
	$(MB_HWT14_CC) $(MB_HWT14_CC_OPT) $(MB_HWT14_SOURCES) -o $(MB_HWT14_OUTPUT) \
	$(MB_HWT14_OTHER_CC_FLAGS) $(MB_HWT14_INCLUDES) $(MB_HWT14_LIBPATH) \
	$(MB_HWT14_CFLAGS) $(MB_HWT14_LFLAGS) 
	$(MB_HWT14_CC_SIZE) $(MB_HWT14_OUTPUT) 
	@echo ""

MB_HWT14_programclean:
	rm -f $(MB_HWT14_OUTPUT) 

#################################################################
# SOFTWARE APPLICATION MB_HWT15
#################################################################

MB_HWT15_program: $(MB_HWT15_OUTPUT) 

$(MB_HWT15_OUTPUT) : $(MB_HWT15_SOURCES) $(MB_HWT15_HEADERS) $(MB_HWT15_LINKER_SCRIPT) \
                    $(LIBRARIES) __xps/mb_hwt15_compiler.opt
	@mkdir -p $(MB_HWT15_OUTPUT_DIR) 
	$(MB_HWT15_CC) $(MB_HWT15_CC_OPT) $(MB_HWT15_SOURCES) -o $(MB_HWT15_OUTPUT) \
	$(MB_HWT15_OTHER_CC_FLAGS) $(MB_HWT15_INCLUDES) $(MB_HWT15_LIBPATH) \
	$(MB_HWT15_CFLAGS) $(MB_HWT15_LFLAGS) 
	$(MB_HWT15_CC_SIZE) $(MB_HWT15_OUTPUT) 
	@echo ""

MB_HWT15_programclean:
	rm -f $(MB_HWT15_OUTPUT) 

#################################################################
# SOFTWARE APPLICATION MB_HWT16
#################################################################

MB_HWT16_program: $(MB_HWT16_OUTPUT) 

$(MB_HWT16_OUTPUT) : $(MB_HWT16_SOURCES) $(MB_HWT16_HEADERS) $(MB_HWT16_LINKER_SCRIPT) \
                    $(LIBRARIES) __xps/mb_hwt16_compiler.opt
	@mkdir -p $(MB_HWT16_OUTPUT_DIR) 
	$(MB_HWT16_CC) $(MB_HWT16_CC_OPT) $(MB_HWT16_SOURCES) -o $(MB_HWT16_OUTPUT) \
	$(MB_HWT16_OTHER_CC_FLAGS) $(MB_HWT16_INCLUDES) $(MB_HWT16_LIBPATH) \
	$(MB_HWT16_CFLAGS) $(MB_HWT16_LFLAGS) 
	$(MB_HWT16_CC_SIZE) $(MB_HWT16_OUTPUT) 
	@echo ""

MB_HWT16_programclean:
	rm -f $(MB_HWT16_OUTPUT) 

#################################################################
# SOFTWARE APPLICATION MB_HWT17
#################################################################

MB_HWT17_program: $(MB_HWT17_OUTPUT) 

$(MB_HWT17_OUTPUT) : $(MB_HWT17_SOURCES) $(MB_HWT17_HEADERS) $(MB_HWT17_LINKER_SCRIPT) \
                    $(LIBRARIES) __xps/mb_hwt17_compiler.opt
	@mkdir -p $(MB_HWT17_OUTPUT_DIR) 
	$(MB_HWT17_CC) $(MB_HWT17_CC_OPT) $(MB_HWT17_SOURCES) -o $(MB_HWT17_OUTPUT) \
	$(MB_HWT17_OTHER_CC_FLAGS) $(MB_HWT17_INCLUDES) $(MB_HWT17_LIBPATH) \
	$(MB_HWT17_CFLAGS) $(MB_HWT17_LFLAGS) 
	$(MB_HWT17_CC_SIZE) $(MB_HWT17_OUTPUT) 
	@echo ""

MB_HWT17_programclean:
	rm -f $(MB_HWT17_OUTPUT) 

#################################################################
# SOFTWARE APPLICATION MB_HWT18
#################################################################

MB_HWT18_program: $(MB_HWT18_OUTPUT) 

$(MB_HWT18_OUTPUT) : $(MB_HWT18_SOURCES) $(MB_HWT18_HEADERS) $(MB_HWT18_LINKER_SCRIPT) \
                    $(LIBRARIES) __xps/mb_hwt18_compiler.opt
	@mkdir -p $(MB_HWT18_OUTPUT_DIR) 
	$(MB_HWT18_CC) $(MB_HWT18_CC_OPT) $(MB_HWT18_SOURCES) -o $(MB_HWT18_OUTPUT) \
	$(MB_HWT18_OTHER_CC_FLAGS) $(MB_HWT18_INCLUDES) $(MB_HWT18_LIBPATH) \
	$(MB_HWT18_CFLAGS) $(MB_HWT18_LFLAGS) 
	$(MB_HWT18_CC_SIZE) $(MB_HWT18_OUTPUT) 
	@echo ""

MB_HWT18_programclean:
	rm -f $(MB_HWT18_OUTPUT) 

#################################################################
# SOFTWARE APPLICATION MB_HWT19
#################################################################

MB_HWT19_program: $(MB_HWT19_OUTPUT) 

$(MB_HWT19_OUTPUT) : $(MB_HWT19_SOURCES) $(MB_HWT19_HEADERS) $(MB_HWT19_LINKER_SCRIPT) \
                    $(LIBRARIES) __xps/mb_hwt19_compiler.opt
	@mkdir -p $(MB_HWT19_OUTPUT_DIR) 
	$(MB_HWT19_CC) $(MB_HWT19_CC_OPT) $(MB_HWT19_SOURCES) -o $(MB_HWT19_OUTPUT) \
	$(MB_HWT19_OTHER_CC_FLAGS) $(MB_HWT19_INCLUDES) $(MB_HWT19_LIBPATH) \
	$(MB_HWT19_CFLAGS) $(MB_HWT19_LFLAGS) 
	$(MB_HWT19_CC_SIZE) $(MB_HWT19_OUTPUT) 
	@echo ""

MB_HWT19_programclean:
	rm -f $(MB_HWT19_OUTPUT) 

#################################################################
# SOFTWARE APPLICATION MB_HWT20
#################################################################

MB_HWT20_program: $(MB_HWT20_OUTPUT) 

$(MB_HWT20_OUTPUT) : $(MB_HWT20_SOURCES) $(MB_HWT20_HEADERS) $(MB_HWT20_LINKER_SCRIPT) \
                    $(LIBRARIES) __xps/mb_hwt20_compiler.opt
	@mkdir -p $(MB_HWT20_OUTPUT_DIR) 
	$(MB_HWT20_CC) $(MB_HWT20_CC_OPT) $(MB_HWT20_SOURCES) -o $(MB_HWT20_OUTPUT) \
	$(MB_HWT20_OTHER_CC_FLAGS) $(MB_HWT20_INCLUDES) $(MB_HWT20_LIBPATH) \
	$(MB_HWT20_CFLAGS) $(MB_HWT20_LFLAGS) 
	$(MB_HWT20_CC_SIZE) $(MB_HWT20_OUTPUT) 
	@echo ""

MB_HWT20_programclean:
	rm -f $(MB_HWT20_OUTPUT) 

#################################################################
# SOFTWARE APPLICATION MB_HWT21
#################################################################

MB_HWT21_program: $(MB_HWT21_OUTPUT) 

$(MB_HWT21_OUTPUT) : $(MB_HWT21_SOURCES) $(MB_HWT21_HEADERS) $(MB_HWT21_LINKER_SCRIPT) \
                    $(LIBRARIES) __xps/mb_hwt21_compiler.opt
	@mkdir -p $(MB_HWT21_OUTPUT_DIR) 
	$(MB_HWT21_CC) $(MB_HWT21_CC_OPT) $(MB_HWT21_SOURCES) -o $(MB_HWT21_OUTPUT) \
	$(MB_HWT21_OTHER_CC_FLAGS) $(MB_HWT21_INCLUDES) $(MB_HWT21_LIBPATH) \
	$(MB_HWT21_CFLAGS) $(MB_HWT21_LFLAGS) 
	$(MB_HWT21_CC_SIZE) $(MB_HWT21_OUTPUT) 
	@echo ""

MB_HWT21_programclean:
	rm -f $(MB_HWT21_OUTPUT) 

#################################################################
# SOFTWARE APPLICATION MB_HWT22
#################################################################

MB_HWT22_program: $(MB_HWT22_OUTPUT) 

$(MB_HWT22_OUTPUT) : $(MB_HWT22_SOURCES) $(MB_HWT22_HEADERS) $(MB_HWT22_LINKER_SCRIPT) \
                    $(LIBRARIES) __xps/mb_hwt22_compiler.opt
	@mkdir -p $(MB_HWT22_OUTPUT_DIR) 
	$(MB_HWT22_CC) $(MB_HWT22_CC_OPT) $(MB_HWT22_SOURCES) -o $(MB_HWT22_OUTPUT) \
	$(MB_HWT22_OTHER_CC_FLAGS) $(MB_HWT22_INCLUDES) $(MB_HWT22_LIBPATH) \
	$(MB_HWT22_CFLAGS) $(MB_HWT22_LFLAGS) 
	$(MB_HWT22_CC_SIZE) $(MB_HWT22_OUTPUT) 
	@echo ""

MB_HWT22_programclean:
	rm -f $(MB_HWT22_OUTPUT) 

#################################################################
# SOFTWARE APPLICATION MB_HWT23
#################################################################

MB_HWT23_program: $(MB_HWT23_OUTPUT) 

$(MB_HWT23_OUTPUT) : $(MB_HWT23_SOURCES) $(MB_HWT23_HEADERS) $(MB_HWT23_LINKER_SCRIPT) \
                    $(LIBRARIES) __xps/mb_hwt23_compiler.opt
	@mkdir -p $(MB_HWT23_OUTPUT_DIR) 
	$(MB_HWT23_CC) $(MB_HWT23_CC_OPT) $(MB_HWT23_SOURCES) -o $(MB_HWT23_OUTPUT) \
	$(MB_HWT23_OTHER_CC_FLAGS) $(MB_HWT23_INCLUDES) $(MB_HWT23_LIBPATH) \
	$(MB_HWT23_CFLAGS) $(MB_HWT23_LFLAGS) 
	$(MB_HWT23_CC_SIZE) $(MB_HWT23_OUTPUT) 
	@echo ""

MB_HWT23_programclean:
	rm -f $(MB_HWT23_OUTPUT) 

#################################################################
# SOFTWARE APPLICATION MB_HWT24
#################################################################

MB_HWT24_program: $(MB_HWT24_OUTPUT) 

$(MB_HWT24_OUTPUT) : $(MB_HWT24_SOURCES) $(MB_HWT24_HEADERS) $(MB_HWT24_LINKER_SCRIPT) \
                    $(LIBRARIES) __xps/mb_hwt24_compiler.opt
	@mkdir -p $(MB_HWT24_OUTPUT_DIR) 
	$(MB_HWT24_CC) $(MB_HWT24_CC_OPT) $(MB_HWT24_SOURCES) -o $(MB_HWT24_OUTPUT) \
	$(MB_HWT24_OTHER_CC_FLAGS) $(MB_HWT24_INCLUDES) $(MB_HWT24_LIBPATH) \
	$(MB_HWT24_CFLAGS) $(MB_HWT24_LFLAGS) 
	$(MB_HWT24_CC_SIZE) $(MB_HWT24_OUTPUT) 
	@echo ""

MB_HWT24_programclean:
	rm -f $(MB_HWT24_OUTPUT) 

#################################################################
# SOFTWARE APPLICATION MB_HWT25
#################################################################

MB_HWT25_program: $(MB_HWT25_OUTPUT) 

$(MB_HWT25_OUTPUT) : $(MB_HWT25_SOURCES) $(MB_HWT25_HEADERS) $(MB_HWT25_LINKER_SCRIPT) \
                    $(LIBRARIES) __xps/mb_hwt25_compiler.opt
	@mkdir -p $(MB_HWT25_OUTPUT_DIR) 
	$(MB_HWT25_CC) $(MB_HWT25_CC_OPT) $(MB_HWT25_SOURCES) -o $(MB_HWT25_OUTPUT) \
	$(MB_HWT25_OTHER_CC_FLAGS) $(MB_HWT25_INCLUDES) $(MB_HWT25_LIBPATH) \
	$(MB_HWT25_CFLAGS) $(MB_HWT25_LFLAGS) 
	$(MB_HWT25_CC_SIZE) $(MB_HWT25_OUTPUT) 
	@echo ""

MB_HWT25_programclean:
	rm -f $(MB_HWT25_OUTPUT) 

#################################################################
# SOFTWARE APPLICATION MB_HWT26
#################################################################

MB_HWT26_program: $(MB_HWT26_OUTPUT) 

$(MB_HWT26_OUTPUT) : $(MB_HWT26_SOURCES) $(MB_HWT26_HEADERS) $(MB_HWT26_LINKER_SCRIPT) \
                    $(LIBRARIES) __xps/mb_hwt26_compiler.opt
	@mkdir -p $(MB_HWT26_OUTPUT_DIR) 
	$(MB_HWT26_CC) $(MB_HWT26_CC_OPT) $(MB_HWT26_SOURCES) -o $(MB_HWT26_OUTPUT) \
	$(MB_HWT26_OTHER_CC_FLAGS) $(MB_HWT26_INCLUDES) $(MB_HWT26_LIBPATH) \
	$(MB_HWT26_CFLAGS) $(MB_HWT26_LFLAGS) 
	$(MB_HWT26_CC_SIZE) $(MB_HWT26_OUTPUT) 
	@echo ""

MB_HWT26_programclean:
	rm -f $(MB_HWT26_OUTPUT) 

#################################################################
# SOFTWARE APPLICATION MB_HWT27
#################################################################

MB_HWT27_program: $(MB_HWT27_OUTPUT) 

$(MB_HWT27_OUTPUT) : $(MB_HWT27_SOURCES) $(MB_HWT27_HEADERS) $(MB_HWT27_LINKER_SCRIPT) \
                    $(LIBRARIES) __xps/mb_hwt27_compiler.opt
	@mkdir -p $(MB_HWT27_OUTPUT_DIR) 
	$(MB_HWT27_CC) $(MB_HWT27_CC_OPT) $(MB_HWT27_SOURCES) -o $(MB_HWT27_OUTPUT) \
	$(MB_HWT27_OTHER_CC_FLAGS) $(MB_HWT27_INCLUDES) $(MB_HWT27_LIBPATH) \
	$(MB_HWT27_CFLAGS) $(MB_HWT27_LFLAGS) 
	$(MB_HWT27_CC_SIZE) $(MB_HWT27_OUTPUT) 
	@echo ""

MB_HWT27_programclean:
	rm -f $(MB_HWT27_OUTPUT) 

#################################################################
# SOFTWARE APPLICATION MB_HWT28
#################################################################

MB_HWT28_program: $(MB_HWT28_OUTPUT) 

$(MB_HWT28_OUTPUT) : $(MB_HWT28_SOURCES) $(MB_HWT28_HEADERS) $(MB_HWT28_LINKER_SCRIPT) \
                    $(LIBRARIES) __xps/mb_hwt28_compiler.opt
	@mkdir -p $(MB_HWT28_OUTPUT_DIR) 
	$(MB_HWT28_CC) $(MB_HWT28_CC_OPT) $(MB_HWT28_SOURCES) -o $(MB_HWT28_OUTPUT) \
	$(MB_HWT28_OTHER_CC_FLAGS) $(MB_HWT28_INCLUDES) $(MB_HWT28_LIBPATH) \
	$(MB_HWT28_CFLAGS) $(MB_HWT28_LFLAGS) 
	$(MB_HWT28_CC_SIZE) $(MB_HWT28_OUTPUT) 
	@echo ""

MB_HWT28_programclean:
	rm -f $(MB_HWT28_OUTPUT) 

#################################################################
# SOFTWARE APPLICATION MB_HWT29
#################################################################

MB_HWT29_program: $(MB_HWT29_OUTPUT) 

$(MB_HWT29_OUTPUT) : $(MB_HWT29_SOURCES) $(MB_HWT29_HEADERS) $(MB_HWT29_LINKER_SCRIPT) \
                    $(LIBRARIES) __xps/mb_hwt29_compiler.opt
	@mkdir -p $(MB_HWT29_OUTPUT_DIR) 
	$(MB_HWT29_CC) $(MB_HWT29_CC_OPT) $(MB_HWT29_SOURCES) -o $(MB_HWT29_OUTPUT) \
	$(MB_HWT29_OTHER_CC_FLAGS) $(MB_HWT29_INCLUDES) $(MB_HWT29_LIBPATH) \
	$(MB_HWT29_CFLAGS) $(MB_HWT29_LFLAGS) 
	$(MB_HWT29_CC_SIZE) $(MB_HWT29_OUTPUT) 
	@echo ""

MB_HWT29_programclean:
	rm -f $(MB_HWT29_OUTPUT) 

#################################################################
# SOFTWARE APPLICATION MB_HWT30
#################################################################

MB_HWT30_program: $(MB_HWT30_OUTPUT) 

$(MB_HWT30_OUTPUT) : $(MB_HWT30_SOURCES) $(MB_HWT30_HEADERS) $(MB_HWT30_LINKER_SCRIPT) \
                    $(LIBRARIES) __xps/mb_hwt30_compiler.opt
	@mkdir -p $(MB_HWT30_OUTPUT_DIR) 
	$(MB_HWT30_CC) $(MB_HWT30_CC_OPT) $(MB_HWT30_SOURCES) -o $(MB_HWT30_OUTPUT) \
	$(MB_HWT30_OTHER_CC_FLAGS) $(MB_HWT30_INCLUDES) $(MB_HWT30_LIBPATH) \
	$(MB_HWT30_CFLAGS) $(MB_HWT30_LFLAGS) 
	$(MB_HWT30_CC_SIZE) $(MB_HWT30_OUTPUT) 
	@echo ""

MB_HWT30_programclean:
	rm -f $(MB_HWT30_OUTPUT) 

#################################################################
# SOFTWARE APPLICATION MB_HWT31
#################################################################

MB_HWT31_program: $(MB_HWT31_OUTPUT) 

$(MB_HWT31_OUTPUT) : $(MB_HWT31_SOURCES) $(MB_HWT31_HEADERS) $(MB_HWT31_LINKER_SCRIPT) \
                    $(LIBRARIES) __xps/mb_hwt31_compiler.opt
	@mkdir -p $(MB_HWT31_OUTPUT_DIR) 
	$(MB_HWT31_CC) $(MB_HWT31_CC_OPT) $(MB_HWT31_SOURCES) -o $(MB_HWT31_OUTPUT) \
	$(MB_HWT31_OTHER_CC_FLAGS) $(MB_HWT31_INCLUDES) $(MB_HWT31_LIBPATH) \
	$(MB_HWT31_CFLAGS) $(MB_HWT31_LFLAGS) 
	$(MB_HWT31_CC_SIZE) $(MB_HWT31_OUTPUT) 
	@echo ""

MB_HWT31_programclean:
	rm -f $(MB_HWT31_OUTPUT) 

#################################################################
# SOFTWARE APPLICATION MB_HWT32
#################################################################

MB_HWT32_program: $(MB_HWT32_OUTPUT) 

$(MB_HWT32_OUTPUT) : $(MB_HWT32_SOURCES) $(MB_HWT32_HEADERS) $(MB_HWT32_LINKER_SCRIPT) \
                    $(LIBRARIES) __xps/mb_hwt32_compiler.opt
	@mkdir -p $(MB_HWT32_OUTPUT_DIR) 
	$(MB_HWT32_CC) $(MB_HWT32_CC_OPT) $(MB_HWT32_SOURCES) -o $(MB_HWT32_OUTPUT) \
	$(MB_HWT32_OTHER_CC_FLAGS) $(MB_HWT32_INCLUDES) $(MB_HWT32_LIBPATH) \
	$(MB_HWT32_CFLAGS) $(MB_HWT32_LFLAGS) 
	$(MB_HWT32_CC_SIZE) $(MB_HWT32_OUTPUT) 
	@echo ""

MB_HWT32_programclean:
	rm -f $(MB_HWT32_OUTPUT) 

#################################################################
# SOFTWARE APPLICATION MB_HWT33
#################################################################

MB_HWT33_program: $(MB_HWT33_OUTPUT) 

$(MB_HWT33_OUTPUT) : $(MB_HWT33_SOURCES) $(MB_HWT33_HEADERS) $(MB_HWT33_LINKER_SCRIPT) \
                    $(LIBRARIES) __xps/mb_hwt33_compiler.opt
	@mkdir -p $(MB_HWT33_OUTPUT_DIR) 
	$(MB_HWT33_CC) $(MB_HWT33_CC_OPT) $(MB_HWT33_SOURCES) -o $(MB_HWT33_OUTPUT) \
	$(MB_HWT33_OTHER_CC_FLAGS) $(MB_HWT33_INCLUDES) $(MB_HWT33_LIBPATH) \
	$(MB_HWT33_CFLAGS) $(MB_HWT33_LFLAGS) 
	$(MB_HWT33_CC_SIZE) $(MB_HWT33_OUTPUT) 
	@echo ""

MB_HWT33_programclean:
	rm -f $(MB_HWT33_OUTPUT) 

#################################################################
# SOFTWARE APPLICATION MB_HWT34
#################################################################

MB_HWT34_program: $(MB_HWT34_OUTPUT) 

$(MB_HWT34_OUTPUT) : $(MB_HWT34_SOURCES) $(MB_HWT34_HEADERS) $(MB_HWT34_LINKER_SCRIPT) \
                    $(LIBRARIES) __xps/mb_hwt34_compiler.opt
	@mkdir -p $(MB_HWT34_OUTPUT_DIR) 
	$(MB_HWT34_CC) $(MB_HWT34_CC_OPT) $(MB_HWT34_SOURCES) -o $(MB_HWT34_OUTPUT) \
	$(MB_HWT34_OTHER_CC_FLAGS) $(MB_HWT34_INCLUDES) $(MB_HWT34_LIBPATH) \
	$(MB_HWT34_CFLAGS) $(MB_HWT34_LFLAGS) 
	$(MB_HWT34_CC_SIZE) $(MB_HWT34_OUTPUT) 
	@echo ""

MB_HWT34_programclean:
	rm -f $(MB_HWT34_OUTPUT) 

#################################################################
# SOFTWARE APPLICATION MB_HWT35
#################################################################

MB_HWT35_program: $(MB_HWT35_OUTPUT) 

$(MB_HWT35_OUTPUT) : $(MB_HWT35_SOURCES) $(MB_HWT35_HEADERS) $(MB_HWT35_LINKER_SCRIPT) \
                    $(LIBRARIES) __xps/mb_hwt35_compiler.opt
	@mkdir -p $(MB_HWT35_OUTPUT_DIR) 
	$(MB_HWT35_CC) $(MB_HWT35_CC_OPT) $(MB_HWT35_SOURCES) -o $(MB_HWT35_OUTPUT) \
	$(MB_HWT35_OTHER_CC_FLAGS) $(MB_HWT35_INCLUDES) $(MB_HWT35_LIBPATH) \
	$(MB_HWT35_CFLAGS) $(MB_HWT35_LFLAGS) 
	$(MB_HWT35_CC_SIZE) $(MB_HWT35_OUTPUT) 
	@echo ""

MB_HWT35_programclean:
	rm -f $(MB_HWT35_OUTPUT) 

#################################################################
# SOFTWARE APPLICATION MB_HWT36
#################################################################

MB_HWT36_program: $(MB_HWT36_OUTPUT) 

$(MB_HWT36_OUTPUT) : $(MB_HWT36_SOURCES) $(MB_HWT36_HEADERS) $(MB_HWT36_LINKER_SCRIPT) \
                    $(LIBRARIES) __xps/mb_hwt36_compiler.opt
	@mkdir -p $(MB_HWT36_OUTPUT_DIR) 
	$(MB_HWT36_CC) $(MB_HWT36_CC_OPT) $(MB_HWT36_SOURCES) -o $(MB_HWT36_OUTPUT) \
	$(MB_HWT36_OTHER_CC_FLAGS) $(MB_HWT36_INCLUDES) $(MB_HWT36_LIBPATH) \
	$(MB_HWT36_CFLAGS) $(MB_HWT36_LFLAGS) 
	$(MB_HWT36_CC_SIZE) $(MB_HWT36_OUTPUT) 
	@echo ""

MB_HWT36_programclean:
	rm -f $(MB_HWT36_OUTPUT) 

#################################################################
# SOFTWARE APPLICATION MB_HWT37
#################################################################

MB_HWT37_program: $(MB_HWT37_OUTPUT) 

$(MB_HWT37_OUTPUT) : $(MB_HWT37_SOURCES) $(MB_HWT37_HEADERS) $(MB_HWT37_LINKER_SCRIPT) \
                    $(LIBRARIES) __xps/mb_hwt37_compiler.opt
	@mkdir -p $(MB_HWT37_OUTPUT_DIR) 
	$(MB_HWT37_CC) $(MB_HWT37_CC_OPT) $(MB_HWT37_SOURCES) -o $(MB_HWT37_OUTPUT) \
	$(MB_HWT37_OTHER_CC_FLAGS) $(MB_HWT37_INCLUDES) $(MB_HWT37_LIBPATH) \
	$(MB_HWT37_CFLAGS) $(MB_HWT37_LFLAGS) 
	$(MB_HWT37_CC_SIZE) $(MB_HWT37_OUTPUT) 
	@echo ""

MB_HWT37_programclean:
	rm -f $(MB_HWT37_OUTPUT) 

#################################################################
# SOFTWARE APPLICATION MB_HWT38
#################################################################

MB_HWT38_program: $(MB_HWT38_OUTPUT) 

$(MB_HWT38_OUTPUT) : $(MB_HWT38_SOURCES) $(MB_HWT38_HEADERS) $(MB_HWT38_LINKER_SCRIPT) \
                    $(LIBRARIES) __xps/mb_hwt38_compiler.opt
	@mkdir -p $(MB_HWT38_OUTPUT_DIR) 
	$(MB_HWT38_CC) $(MB_HWT38_CC_OPT) $(MB_HWT38_SOURCES) -o $(MB_HWT38_OUTPUT) \
	$(MB_HWT38_OTHER_CC_FLAGS) $(MB_HWT38_INCLUDES) $(MB_HWT38_LIBPATH) \
	$(MB_HWT38_CFLAGS) $(MB_HWT38_LFLAGS) 
	$(MB_HWT38_CC_SIZE) $(MB_HWT38_OUTPUT) 
	@echo ""

MB_HWT38_programclean:
	rm -f $(MB_HWT38_OUTPUT) 

#################################################################
# SOFTWARE APPLICATION MB_HWT39
#################################################################

MB_HWT39_program: $(MB_HWT39_OUTPUT) 

$(MB_HWT39_OUTPUT) : $(MB_HWT39_SOURCES) $(MB_HWT39_HEADERS) $(MB_HWT39_LINKER_SCRIPT) \
                    $(LIBRARIES) __xps/mb_hwt39_compiler.opt
	@mkdir -p $(MB_HWT39_OUTPUT_DIR) 
	$(MB_HWT39_CC) $(MB_HWT39_CC_OPT) $(MB_HWT39_SOURCES) -o $(MB_HWT39_OUTPUT) \
	$(MB_HWT39_OTHER_CC_FLAGS) $(MB_HWT39_INCLUDES) $(MB_HWT39_LIBPATH) \
	$(MB_HWT39_CFLAGS) $(MB_HWT39_LFLAGS) 
	$(MB_HWT39_CC_SIZE) $(MB_HWT39_OUTPUT) 
	@echo ""

MB_HWT39_programclean:
	rm -f $(MB_HWT39_OUTPUT) 

#################################################################
# BOOTLOOP ELF FILES
#################################################################



$(MICROBLAZE_0_BOOTLOOP): $(MICROBLAZE_BOOTLOOP)
	@mkdir -p $(BOOTLOOP_DIR)
	cp -f $(MICROBLAZE_BOOTLOOP) $(MICROBLAZE_0_BOOTLOOP)

$(MICROBLAZE_1_BOOTLOOP): $(MICROBLAZE_BOOTLOOP)
	@mkdir -p $(BOOTLOOP_DIR)
	cp -f $(MICROBLAZE_BOOTLOOP) $(MICROBLAZE_1_BOOTLOOP)

$(MICROBLAZE_2_BOOTLOOP): $(MICROBLAZE_BOOTLOOP)
	@mkdir -p $(BOOTLOOP_DIR)
	cp -f $(MICROBLAZE_BOOTLOOP) $(MICROBLAZE_2_BOOTLOOP)

$(MICROBLAZE_3_BOOTLOOP): $(MICROBLAZE_BOOTLOOP)
	@mkdir -p $(BOOTLOOP_DIR)
	cp -f $(MICROBLAZE_BOOTLOOP) $(MICROBLAZE_3_BOOTLOOP)

$(MICROBLAZE_4_BOOTLOOP): $(MICROBLAZE_BOOTLOOP)
	@mkdir -p $(BOOTLOOP_DIR)
	cp -f $(MICROBLAZE_BOOTLOOP) $(MICROBLAZE_4_BOOTLOOP)

$(MICROBLAZE_5_BOOTLOOP): $(MICROBLAZE_BOOTLOOP)
	@mkdir -p $(BOOTLOOP_DIR)
	cp -f $(MICROBLAZE_BOOTLOOP) $(MICROBLAZE_5_BOOTLOOP)

$(MICROBLAZE_6_BOOTLOOP): $(MICROBLAZE_BOOTLOOP)
	@mkdir -p $(BOOTLOOP_DIR)
	cp -f $(MICROBLAZE_BOOTLOOP) $(MICROBLAZE_6_BOOTLOOP)

$(MICROBLAZE_7_BOOTLOOP): $(MICROBLAZE_BOOTLOOP)
	@mkdir -p $(BOOTLOOP_DIR)
	cp -f $(MICROBLAZE_BOOTLOOP) $(MICROBLAZE_7_BOOTLOOP)

$(MICROBLAZE_8_BOOTLOOP): $(MICROBLAZE_BOOTLOOP)
	@mkdir -p $(BOOTLOOP_DIR)
	cp -f $(MICROBLAZE_BOOTLOOP) $(MICROBLAZE_8_BOOTLOOP)

$(MICROBLAZE_9_BOOTLOOP): $(MICROBLAZE_BOOTLOOP)
	@mkdir -p $(BOOTLOOP_DIR)
	cp -f $(MICROBLAZE_BOOTLOOP) $(MICROBLAZE_9_BOOTLOOP)

$(MICROBLAZE_10_BOOTLOOP): $(MICROBLAZE_BOOTLOOP)
	@mkdir -p $(BOOTLOOP_DIR)
	cp -f $(MICROBLAZE_BOOTLOOP) $(MICROBLAZE_10_BOOTLOOP)

$(MICROBLAZE_11_BOOTLOOP): $(MICROBLAZE_BOOTLOOP)
	@mkdir -p $(BOOTLOOP_DIR)
	cp -f $(MICROBLAZE_BOOTLOOP) $(MICROBLAZE_11_BOOTLOOP)

$(MICROBLAZE_12_BOOTLOOP): $(MICROBLAZE_BOOTLOOP)
	@mkdir -p $(BOOTLOOP_DIR)
	cp -f $(MICROBLAZE_BOOTLOOP) $(MICROBLAZE_12_BOOTLOOP)

$(MICROBLAZE_13_BOOTLOOP): $(MICROBLAZE_BOOTLOOP)
	@mkdir -p $(BOOTLOOP_DIR)
	cp -f $(MICROBLAZE_BOOTLOOP) $(MICROBLAZE_13_BOOTLOOP)

$(MICROBLAZE_14_BOOTLOOP): $(MICROBLAZE_BOOTLOOP)
	@mkdir -p $(BOOTLOOP_DIR)
	cp -f $(MICROBLAZE_BOOTLOOP) $(MICROBLAZE_14_BOOTLOOP)

$(MICROBLAZE_15_BOOTLOOP): $(MICROBLAZE_BOOTLOOP)
	@mkdir -p $(BOOTLOOP_DIR)
	cp -f $(MICROBLAZE_BOOTLOOP) $(MICROBLAZE_15_BOOTLOOP)

$(MICROBLAZE_16_BOOTLOOP): $(MICROBLAZE_BOOTLOOP)
	@mkdir -p $(BOOTLOOP_DIR)
	cp -f $(MICROBLAZE_BOOTLOOP) $(MICROBLAZE_16_BOOTLOOP)

$(MICROBLAZE_17_BOOTLOOP): $(MICROBLAZE_BOOTLOOP)
	@mkdir -p $(BOOTLOOP_DIR)
	cp -f $(MICROBLAZE_BOOTLOOP) $(MICROBLAZE_17_BOOTLOOP)

$(MICROBLAZE_18_BOOTLOOP): $(MICROBLAZE_BOOTLOOP)
	@mkdir -p $(BOOTLOOP_DIR)
	cp -f $(MICROBLAZE_BOOTLOOP) $(MICROBLAZE_18_BOOTLOOP)

$(MICROBLAZE_19_BOOTLOOP): $(MICROBLAZE_BOOTLOOP)
	@mkdir -p $(BOOTLOOP_DIR)
	cp -f $(MICROBLAZE_BOOTLOOP) $(MICROBLAZE_19_BOOTLOOP)

$(MICROBLAZE_20_BOOTLOOP): $(MICROBLAZE_BOOTLOOP)
	@mkdir -p $(BOOTLOOP_DIR)
	cp -f $(MICROBLAZE_BOOTLOOP) $(MICROBLAZE_20_BOOTLOOP)

$(MICROBLAZE_21_BOOTLOOP): $(MICROBLAZE_BOOTLOOP)
	@mkdir -p $(BOOTLOOP_DIR)
	cp -f $(MICROBLAZE_BOOTLOOP) $(MICROBLAZE_21_BOOTLOOP)

$(MICROBLAZE_22_BOOTLOOP): $(MICROBLAZE_BOOTLOOP)
	@mkdir -p $(BOOTLOOP_DIR)
	cp -f $(MICROBLAZE_BOOTLOOP) $(MICROBLAZE_22_BOOTLOOP)

$(MICROBLAZE_23_BOOTLOOP): $(MICROBLAZE_BOOTLOOP)
	@mkdir -p $(BOOTLOOP_DIR)
	cp -f $(MICROBLAZE_BOOTLOOP) $(MICROBLAZE_23_BOOTLOOP)

$(MICROBLAZE_24_BOOTLOOP): $(MICROBLAZE_BOOTLOOP)
	@mkdir -p $(BOOTLOOP_DIR)
	cp -f $(MICROBLAZE_BOOTLOOP) $(MICROBLAZE_24_BOOTLOOP)

$(MICROBLAZE_25_BOOTLOOP): $(MICROBLAZE_BOOTLOOP)
	@mkdir -p $(BOOTLOOP_DIR)
	cp -f $(MICROBLAZE_BOOTLOOP) $(MICROBLAZE_25_BOOTLOOP)

$(MICROBLAZE_26_BOOTLOOP): $(MICROBLAZE_BOOTLOOP)
	@mkdir -p $(BOOTLOOP_DIR)
	cp -f $(MICROBLAZE_BOOTLOOP) $(MICROBLAZE_26_BOOTLOOP)

$(MICROBLAZE_27_BOOTLOOP): $(MICROBLAZE_BOOTLOOP)
	@mkdir -p $(BOOTLOOP_DIR)
	cp -f $(MICROBLAZE_BOOTLOOP) $(MICROBLAZE_27_BOOTLOOP)

$(MICROBLAZE_28_BOOTLOOP): $(MICROBLAZE_BOOTLOOP)
	@mkdir -p $(BOOTLOOP_DIR)
	cp -f $(MICROBLAZE_BOOTLOOP) $(MICROBLAZE_28_BOOTLOOP)

$(MICROBLAZE_29_BOOTLOOP): $(MICROBLAZE_BOOTLOOP)
	@mkdir -p $(BOOTLOOP_DIR)
	cp -f $(MICROBLAZE_BOOTLOOP) $(MICROBLAZE_29_BOOTLOOP)

$(MICROBLAZE_30_BOOTLOOP): $(MICROBLAZE_BOOTLOOP)
	@mkdir -p $(BOOTLOOP_DIR)
	cp -f $(MICROBLAZE_BOOTLOOP) $(MICROBLAZE_30_BOOTLOOP)

$(MICROBLAZE_31_BOOTLOOP): $(MICROBLAZE_BOOTLOOP)
	@mkdir -p $(BOOTLOOP_DIR)
	cp -f $(MICROBLAZE_BOOTLOOP) $(MICROBLAZE_31_BOOTLOOP)

$(MICROBLAZE_32_BOOTLOOP): $(MICROBLAZE_BOOTLOOP)
	@mkdir -p $(BOOTLOOP_DIR)
	cp -f $(MICROBLAZE_BOOTLOOP) $(MICROBLAZE_32_BOOTLOOP)

$(MICROBLAZE_33_BOOTLOOP): $(MICROBLAZE_BOOTLOOP)
	@mkdir -p $(BOOTLOOP_DIR)
	cp -f $(MICROBLAZE_BOOTLOOP) $(MICROBLAZE_33_BOOTLOOP)

$(MICROBLAZE_34_BOOTLOOP): $(MICROBLAZE_BOOTLOOP)
	@mkdir -p $(BOOTLOOP_DIR)
	cp -f $(MICROBLAZE_BOOTLOOP) $(MICROBLAZE_34_BOOTLOOP)

$(MICROBLAZE_35_BOOTLOOP): $(MICROBLAZE_BOOTLOOP)
	@mkdir -p $(BOOTLOOP_DIR)
	cp -f $(MICROBLAZE_BOOTLOOP) $(MICROBLAZE_35_BOOTLOOP)

$(MICROBLAZE_36_BOOTLOOP): $(MICROBLAZE_BOOTLOOP)
	@mkdir -p $(BOOTLOOP_DIR)
	cp -f $(MICROBLAZE_BOOTLOOP) $(MICROBLAZE_36_BOOTLOOP)

$(MICROBLAZE_37_BOOTLOOP): $(MICROBLAZE_BOOTLOOP)
	@mkdir -p $(BOOTLOOP_DIR)
	cp -f $(MICROBLAZE_BOOTLOOP) $(MICROBLAZE_37_BOOTLOOP)

$(MICROBLAZE_38_BOOTLOOP): $(MICROBLAZE_BOOTLOOP)
	@mkdir -p $(BOOTLOOP_DIR)
	cp -f $(MICROBLAZE_BOOTLOOP) $(MICROBLAZE_38_BOOTLOOP)

$(MICROBLAZE_39_BOOTLOOP): $(MICROBLAZE_BOOTLOOP)
	@mkdir -p $(BOOTLOOP_DIR)
	cp -f $(MICROBLAZE_BOOTLOOP) $(MICROBLAZE_39_BOOTLOOP)

#################################################################
# HARDWARE IMPLEMENTATION FLOW
#################################################################


$(BMM_FILE) \
$(WRAPPER_NGC_FILES): $(MHSFILE) __xps/platgen.opt \
                      $(CORE_STATE_DEVELOPMENT_FILES)
	@echo "****************************************************"
	@echo "Creating system netlist for hardware specification.."
	@echo "****************************************************"
	platgen $(PLATGEN_OPTIONS) $(MHSFILE)

$(POSTSYN_NETLIST): $(WRAPPER_NGC_FILES)
	@echo "Running synthesis..."
	bash -c "cd synthesis; ./synthesis.sh"

__xps/$(SYSTEM)_routed: $(FPGA_IMP_DEPENDENCY)
	@echo "*********************************************"
	@echo "Running Xilinx Implementation tools.."
	@echo "*********************************************"
	@cp -f $(UCF_FILE) implementation/$(SYSTEM).ucf
	@cp -f etc/fast_runtime.opt implementation/xflow.opt
	xflow -wd implementation -p $(DEVICE) -implement xflow.opt $(SYSTEM).ngc
	touch __xps/$(SYSTEM)_routed

$(SYSTEM_BIT): __xps/$(SYSTEM)_routed $(BITGEN_UT_FILE)
	xilperl $(NON_CYG_XILINX_EDK_DIR)/data/fpga_impl/observe_par.pl $(OBSERVE_PAR_OPTIONS) implementation/$(SYSTEM).par
	@echo "*********************************************"
	@echo "Running Bitgen.."
	@echo "*********************************************"
	@cp -f $(BITGEN_UT_FILE) implementation/bitgen.ut
	cd implementation; bitgen -w -f bitgen.ut $(SYSTEM); cd ..

$(DOWNLOAD_BIT): $(SYSTEM_BIT) $(BRAMINIT_ELF_FILES) __xps/bitinit.opt
	@cp -f implementation/$(SYSTEM)_bd.bmm .
	@echo "*********************************************"
	@echo "Initializing BRAM contents of the bitstream"
	@echo "*********************************************"
	bitinit -p $(DEVICE) $(MHSFILE) $(SEARCHPATHOPT) $(BRAMINIT_ELF_FILE_ARGS) \
	-bt $(SYSTEM_BIT) -o $(DOWNLOAD_BIT)
	@rm -f $(SYSTEM)_bd.bmm

$(SYSTEM_ACE):
	@echo "In order to generate ace file, you must have:-"
	@echo "- exactly one processor."
	@echo "- opb_mdm, if using microblaze."

#################################################################
# EXPORT_TO_SDK FLOW
#################################################################


$(CYG_SYSTEM_HW_HANDOFF): $(MHSFILE) __xps/platgen.opt
	mkdir -p $(SDK_EXPORT_DIR)
	psf2Edward -inp $(SYSTEM).xmp -edwver 1.2 -xml $(SDK_EXPORT_DIR)/$(SYSTEM).xml $(GLOBAL_SEARCHPATHOPT)
	xdsgen -inp $(SYSTEM).xmp -report $(SDK_EXPORT_DIR)/$(SYSTEM).html $(GLOBAL_SEARCHPATHOPT) -make_docs_local

$(CYG_SYSTEM_HW_HANDOFF_BIT): $(SYSTEM_BIT)
	@rm -rf $(SYSTEM_HW_HANDOFF_BIT)
	@cp -f $(SYSTEM_BIT) $(SDK_EXPORT_DIR)/

$(CYG_SYSTEM_HW_HANDOFF_BMM): implementation/$(SYSTEM)_bd.bmm
	@rm -rf $(SYSTEM_HW_HANDOFF_BMM)
	@cp -f implementation/$(SYSTEM)_bd.bmm $(SDK_EXPORT_DIR)/

#################################################################
# SIMULATION FLOW
#################################################################


################## BEHAVIORAL SIMULATION ##################

$(BEHAVIORAL_SIM_SCRIPT): $(MHSFILE) __xps/simgen.opt \
                          $(BRAMINIT_ELF_FILES)
	@echo "*********************************************"
	@echo "Creating behavioral simulation models..."
	@echo "*********************************************"
	simgen $(SIMGEN_OPTIONS) -m behavioral $(MHSFILE)

################## STRUCTURAL SIMULATION ##################

$(STRUCTURAL_SIM_SCRIPT): $(WRAPPER_NGC_FILES) __xps/simgen.opt \
                          $(BRAMINIT_ELF_FILES)
	@echo "*********************************************"
	@echo "Creating structural simulation models..."
	@echo "*********************************************"
	simgen $(SIMGEN_OPTIONS) -sd implementation -m structural $(MHSFILE)


################## TIMING SIMULATION ##################

implementation/$(SYSTEM).ncd: __xps/$(SYSTEM)_routed

$(TIMING_SIM_SCRIPT): implementation/$(SYSTEM).ncd __xps/simgen.opt \
                      $(BRAMINIT_ELF_FILES)
	@echo "*********************************************"
	@echo "Creating timing simulation models..."
	@echo "*********************************************"
	simgen $(SIMGEN_OPTIONS) -sd implementation -m timing $(MHSFILE)

dummy:
	@echo ""

