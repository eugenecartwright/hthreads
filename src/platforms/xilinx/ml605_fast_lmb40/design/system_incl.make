#################################################################
# Makefile generated by Xilinx Platform Studio 
# Project:/home/eugene/homogeneous_port/src/platforms/xilinx/ml605_fast_lmb40/design/system.xmp
#
# WARNING : This file will be re-generated every time a command
# to run a make target is invoked. So, any changes made to this  
# file manually, will be lost when make is invoked next. 
#################################################################

XILINX_EDK_DIR = /opt/Xilinx/latest/ISE_DS/EDK
NON_CYG_XILINX_EDK_DIR = /opt/Xilinx/latest/ISE_DS/EDK

SYSTEM = system

MHSFILE = system.mhs

MSSFILE = system.mss

FPGA_ARCH = virtex6

DEVICE = xc6vlx240tff1156-1

LANGUAGE = vhdl
GLOBAL_SEARCHPATHOPT = 
PROJECT_SEARCHPATHOPT =  -lp /home/eugene/homogeneous_port/src/hardware/

SEARCHPATHOPT = $(PROJECT_SEARCHPATHOPT) $(GLOBAL_SEARCHPATHOPT)

SUBMODULE_OPT = 

PLATGEN_OPTIONS = -p $(DEVICE) -lang $(LANGUAGE) $(SEARCHPATHOPT) $(SUBMODULE_OPT) -msg __xps/ise/xmsgprops.lst

LIBGEN_OPTIONS = -mhs $(MHSFILE) -p $(DEVICE) $(SEARCHPATHOPT) -msg __xps/ise/xmsgprops.lst \
                   $(MICROBLAZE_0_LIBG_OPT) \
                   $(MICROBLAZE_1_LIBG_OPT) \
                   $(MICROBLAZE_2_LIBG_OPT) \
                   $(MICROBLAZE_3_LIBG_OPT) \
                   $(MICROBLAZE_4_LIBG_OPT) \
                   $(MICROBLAZE_5_LIBG_OPT) \
                   $(MICROBLAZE_6_LIBG_OPT) \
                   $(MICROBLAZE_7_LIBG_OPT) \
                   $(MICROBLAZE_8_LIBG_OPT) \
                   $(MICROBLAZE_9_LIBG_OPT) \
                   $(MICROBLAZE_10_LIBG_OPT) \
                   $(MICROBLAZE_11_LIBG_OPT) \
                   $(MICROBLAZE_12_LIBG_OPT) \
                   $(MICROBLAZE_13_LIBG_OPT) \
                   $(MICROBLAZE_14_LIBG_OPT) \
                   $(MICROBLAZE_15_LIBG_OPT) \
                   $(MICROBLAZE_16_LIBG_OPT) \
                   $(MICROBLAZE_17_LIBG_OPT) \
                   $(MICROBLAZE_18_LIBG_OPT) \
                   $(MICROBLAZE_19_LIBG_OPT) \
                   $(MICROBLAZE_20_LIBG_OPT) \
                   $(MICROBLAZE_21_LIBG_OPT) \
                   $(MICROBLAZE_22_LIBG_OPT) \
                   $(MICROBLAZE_23_LIBG_OPT) \
                   $(MICROBLAZE_24_LIBG_OPT) \
                   $(MICROBLAZE_25_LIBG_OPT) \
                   $(MICROBLAZE_26_LIBG_OPT) \
                   $(MICROBLAZE_27_LIBG_OPT) \
                   $(MICROBLAZE_28_LIBG_OPT) \
                   $(MICROBLAZE_29_LIBG_OPT) \
                   $(MICROBLAZE_30_LIBG_OPT) \
                   $(MICROBLAZE_31_LIBG_OPT) \
                   $(MICROBLAZE_32_LIBG_OPT) \
                   $(MICROBLAZE_33_LIBG_OPT) \
                   $(MICROBLAZE_34_LIBG_OPT) \
                   $(MICROBLAZE_35_LIBG_OPT) \
                   $(MICROBLAZE_36_LIBG_OPT) \
                   $(MICROBLAZE_37_LIBG_OPT) \
                   $(MICROBLAZE_38_LIBG_OPT) \
                   $(MICROBLAZE_39_LIBG_OPT)

OBSERVE_PAR_OPTIONS = -error yes

CORETEST_OUTPUT_DIR = CoreTest
CORETEST_OUTPUT = $(CORETEST_OUTPUT_DIR)/executable.elf
CYG_CORETEST_OUTPUT_DIR = CoreTest
CYG_CORETEST_OUTPUT = $(CYG_CORETEST_OUTPUT_DIR)/executable.elf

MB_HWT1_OUTPUT_DIR = MB_HWT1
MB_HWT1_OUTPUT = $(MB_HWT1_OUTPUT_DIR)/executable.elf
CYG_MB_HWT1_OUTPUT_DIR = MB_HWT1
CYG_MB_HWT1_OUTPUT = $(CYG_MB_HWT1_OUTPUT_DIR)/executable.elf

MB_HWT2_OUTPUT_DIR = MB_HWT2
MB_HWT2_OUTPUT = $(MB_HWT2_OUTPUT_DIR)/executable.elf
CYG_MB_HWT2_OUTPUT_DIR = MB_HWT2
CYG_MB_HWT2_OUTPUT = $(CYG_MB_HWT2_OUTPUT_DIR)/executable.elf

MB_HWT3_OUTPUT_DIR = MB_HWT3
MB_HWT3_OUTPUT = $(MB_HWT3_OUTPUT_DIR)/executable.elf
CYG_MB_HWT3_OUTPUT_DIR = MB_HWT3
CYG_MB_HWT3_OUTPUT = $(CYG_MB_HWT3_OUTPUT_DIR)/executable.elf

MB_HWT4_OUTPUT_DIR = MB_HWT4
MB_HWT4_OUTPUT = $(MB_HWT4_OUTPUT_DIR)/executable.elf
CYG_MB_HWT4_OUTPUT_DIR = MB_HWT4
CYG_MB_HWT4_OUTPUT = $(CYG_MB_HWT4_OUTPUT_DIR)/executable.elf

MB_HWT5_OUTPUT_DIR = MB_HWT5
MB_HWT5_OUTPUT = $(MB_HWT5_OUTPUT_DIR)/executable.elf
CYG_MB_HWT5_OUTPUT_DIR = MB_HWT5
CYG_MB_HWT5_OUTPUT = $(CYG_MB_HWT5_OUTPUT_DIR)/executable.elf

MB_HWT6_OUTPUT_DIR = MB_HWT6
MB_HWT6_OUTPUT = $(MB_HWT6_OUTPUT_DIR)/executable.elf
CYG_MB_HWT6_OUTPUT_DIR = MB_HWT6
CYG_MB_HWT6_OUTPUT = $(CYG_MB_HWT6_OUTPUT_DIR)/executable.elf

MB_HWT7_OUTPUT_DIR = MB_HWT7
MB_HWT7_OUTPUT = $(MB_HWT7_OUTPUT_DIR)/executable.elf
CYG_MB_HWT7_OUTPUT_DIR = MB_HWT7
CYG_MB_HWT7_OUTPUT = $(CYG_MB_HWT7_OUTPUT_DIR)/executable.elf

MB_HWT8_OUTPUT_DIR = MB_HWT8
MB_HWT8_OUTPUT = $(MB_HWT8_OUTPUT_DIR)/executable.elf
CYG_MB_HWT8_OUTPUT_DIR = MB_HWT8
CYG_MB_HWT8_OUTPUT = $(CYG_MB_HWT8_OUTPUT_DIR)/executable.elf

MB_HWT9_OUTPUT_DIR = MB_HWT9
MB_HWT9_OUTPUT = $(MB_HWT9_OUTPUT_DIR)/executable.elf
CYG_MB_HWT9_OUTPUT_DIR = MB_HWT9
CYG_MB_HWT9_OUTPUT = $(CYG_MB_HWT9_OUTPUT_DIR)/executable.elf

MB_HWT10_OUTPUT_DIR = MB_HWT10
MB_HWT10_OUTPUT = $(MB_HWT10_OUTPUT_DIR)/executable.elf
CYG_MB_HWT10_OUTPUT_DIR = MB_HWT10
CYG_MB_HWT10_OUTPUT = $(CYG_MB_HWT10_OUTPUT_DIR)/executable.elf

MB_HWT11_OUTPUT_DIR = MB_HWT11
MB_HWT11_OUTPUT = $(MB_HWT11_OUTPUT_DIR)/executable.elf
CYG_MB_HWT11_OUTPUT_DIR = MB_HWT11
CYG_MB_HWT11_OUTPUT = $(CYG_MB_HWT11_OUTPUT_DIR)/executable.elf

MB_HWT12_OUTPUT_DIR = MB_HWT12
MB_HWT12_OUTPUT = $(MB_HWT12_OUTPUT_DIR)/executable.elf
CYG_MB_HWT12_OUTPUT_DIR = MB_HWT12
CYG_MB_HWT12_OUTPUT = $(CYG_MB_HWT12_OUTPUT_DIR)/executable.elf

MB_HWT13_OUTPUT_DIR = MB_HWT13
MB_HWT13_OUTPUT = $(MB_HWT13_OUTPUT_DIR)/executable.elf
CYG_MB_HWT13_OUTPUT_DIR = MB_HWT13
CYG_MB_HWT13_OUTPUT = $(CYG_MB_HWT13_OUTPUT_DIR)/executable.elf

MB_HWT14_OUTPUT_DIR = MB_HWT14
MB_HWT14_OUTPUT = $(MB_HWT14_OUTPUT_DIR)/executable.elf
CYG_MB_HWT14_OUTPUT_DIR = MB_HWT14
CYG_MB_HWT14_OUTPUT = $(CYG_MB_HWT14_OUTPUT_DIR)/executable.elf

MB_HWT15_OUTPUT_DIR = MB_HWT15
MB_HWT15_OUTPUT = $(MB_HWT15_OUTPUT_DIR)/executable.elf
CYG_MB_HWT15_OUTPUT_DIR = MB_HWT15
CYG_MB_HWT15_OUTPUT = $(CYG_MB_HWT15_OUTPUT_DIR)/executable.elf

MB_HWT16_OUTPUT_DIR = MB_HWT16
MB_HWT16_OUTPUT = $(MB_HWT16_OUTPUT_DIR)/executable.elf
CYG_MB_HWT16_OUTPUT_DIR = MB_HWT16
CYG_MB_HWT16_OUTPUT = $(CYG_MB_HWT16_OUTPUT_DIR)/executable.elf

MB_HWT17_OUTPUT_DIR = MB_HWT17
MB_HWT17_OUTPUT = $(MB_HWT17_OUTPUT_DIR)/executable.elf
CYG_MB_HWT17_OUTPUT_DIR = MB_HWT17
CYG_MB_HWT17_OUTPUT = $(CYG_MB_HWT17_OUTPUT_DIR)/executable.elf

MB_HWT18_OUTPUT_DIR = MB_HWT18
MB_HWT18_OUTPUT = $(MB_HWT18_OUTPUT_DIR)/executable.elf
CYG_MB_HWT18_OUTPUT_DIR = MB_HWT18
CYG_MB_HWT18_OUTPUT = $(CYG_MB_HWT18_OUTPUT_DIR)/executable.elf

MB_HWT19_OUTPUT_DIR = MB_HWT19
MB_HWT19_OUTPUT = $(MB_HWT19_OUTPUT_DIR)/executable.elf
CYG_MB_HWT19_OUTPUT_DIR = MB_HWT19
CYG_MB_HWT19_OUTPUT = $(CYG_MB_HWT19_OUTPUT_DIR)/executable.elf

MB_HWT20_OUTPUT_DIR = MB_HWT20
MB_HWT20_OUTPUT = $(MB_HWT20_OUTPUT_DIR)/executable.elf
CYG_MB_HWT20_OUTPUT_DIR = MB_HWT20
CYG_MB_HWT20_OUTPUT = $(CYG_MB_HWT20_OUTPUT_DIR)/executable.elf

MB_HWT21_OUTPUT_DIR = MB_HWT21
MB_HWT21_OUTPUT = $(MB_HWT21_OUTPUT_DIR)/executable.elf
CYG_MB_HWT21_OUTPUT_DIR = MB_HWT21
CYG_MB_HWT21_OUTPUT = $(CYG_MB_HWT21_OUTPUT_DIR)/executable.elf

MB_HWT22_OUTPUT_DIR = MB_HWT22
MB_HWT22_OUTPUT = $(MB_HWT22_OUTPUT_DIR)/executable.elf
CYG_MB_HWT22_OUTPUT_DIR = MB_HWT22
CYG_MB_HWT22_OUTPUT = $(CYG_MB_HWT22_OUTPUT_DIR)/executable.elf

MB_HWT23_OUTPUT_DIR = MB_HWT23
MB_HWT23_OUTPUT = $(MB_HWT23_OUTPUT_DIR)/executable.elf
CYG_MB_HWT23_OUTPUT_DIR = MB_HWT23
CYG_MB_HWT23_OUTPUT = $(CYG_MB_HWT23_OUTPUT_DIR)/executable.elf

MB_HWT24_OUTPUT_DIR = MB_HWT24
MB_HWT24_OUTPUT = $(MB_HWT24_OUTPUT_DIR)/executable.elf
CYG_MB_HWT24_OUTPUT_DIR = MB_HWT24
CYG_MB_HWT24_OUTPUT = $(CYG_MB_HWT24_OUTPUT_DIR)/executable.elf

MB_HWT25_OUTPUT_DIR = MB_HWT25
MB_HWT25_OUTPUT = $(MB_HWT25_OUTPUT_DIR)/executable.elf
CYG_MB_HWT25_OUTPUT_DIR = MB_HWT25
CYG_MB_HWT25_OUTPUT = $(CYG_MB_HWT25_OUTPUT_DIR)/executable.elf

MB_HWT26_OUTPUT_DIR = MB_HWT26
MB_HWT26_OUTPUT = $(MB_HWT26_OUTPUT_DIR)/executable.elf
CYG_MB_HWT26_OUTPUT_DIR = MB_HWT26
CYG_MB_HWT26_OUTPUT = $(CYG_MB_HWT26_OUTPUT_DIR)/executable.elf

MB_HWT27_OUTPUT_DIR = MB_HWT27
MB_HWT27_OUTPUT = $(MB_HWT27_OUTPUT_DIR)/executable.elf
CYG_MB_HWT27_OUTPUT_DIR = MB_HWT27
CYG_MB_HWT27_OUTPUT = $(CYG_MB_HWT27_OUTPUT_DIR)/executable.elf

MB_HWT28_OUTPUT_DIR = MB_HWT28
MB_HWT28_OUTPUT = $(MB_HWT28_OUTPUT_DIR)/executable.elf
CYG_MB_HWT28_OUTPUT_DIR = MB_HWT28
CYG_MB_HWT28_OUTPUT = $(CYG_MB_HWT28_OUTPUT_DIR)/executable.elf

MB_HWT29_OUTPUT_DIR = MB_HWT29
MB_HWT29_OUTPUT = $(MB_HWT29_OUTPUT_DIR)/executable.elf
CYG_MB_HWT29_OUTPUT_DIR = MB_HWT29
CYG_MB_HWT29_OUTPUT = $(CYG_MB_HWT29_OUTPUT_DIR)/executable.elf

MB_HWT30_OUTPUT_DIR = MB_HWT30
MB_HWT30_OUTPUT = $(MB_HWT30_OUTPUT_DIR)/executable.elf
CYG_MB_HWT30_OUTPUT_DIR = MB_HWT30
CYG_MB_HWT30_OUTPUT = $(CYG_MB_HWT30_OUTPUT_DIR)/executable.elf

MB_HWT31_OUTPUT_DIR = MB_HWT31
MB_HWT31_OUTPUT = $(MB_HWT31_OUTPUT_DIR)/executable.elf
CYG_MB_HWT31_OUTPUT_DIR = MB_HWT31
CYG_MB_HWT31_OUTPUT = $(CYG_MB_HWT31_OUTPUT_DIR)/executable.elf

MB_HWT32_OUTPUT_DIR = MB_HWT32
MB_HWT32_OUTPUT = $(MB_HWT32_OUTPUT_DIR)/executable.elf
CYG_MB_HWT32_OUTPUT_DIR = MB_HWT32
CYG_MB_HWT32_OUTPUT = $(CYG_MB_HWT32_OUTPUT_DIR)/executable.elf

MB_HWT33_OUTPUT_DIR = MB_HWT33
MB_HWT33_OUTPUT = $(MB_HWT33_OUTPUT_DIR)/executable.elf
CYG_MB_HWT33_OUTPUT_DIR = MB_HWT33
CYG_MB_HWT33_OUTPUT = $(CYG_MB_HWT33_OUTPUT_DIR)/executable.elf

MB_HWT34_OUTPUT_DIR = MB_HWT34
MB_HWT34_OUTPUT = $(MB_HWT34_OUTPUT_DIR)/executable.elf
CYG_MB_HWT34_OUTPUT_DIR = MB_HWT34
CYG_MB_HWT34_OUTPUT = $(CYG_MB_HWT34_OUTPUT_DIR)/executable.elf

MB_HWT35_OUTPUT_DIR = MB_HWT35
MB_HWT35_OUTPUT = $(MB_HWT35_OUTPUT_DIR)/executable.elf
CYG_MB_HWT35_OUTPUT_DIR = MB_HWT35
CYG_MB_HWT35_OUTPUT = $(CYG_MB_HWT35_OUTPUT_DIR)/executable.elf

MB_HWT36_OUTPUT_DIR = MB_HWT36
MB_HWT36_OUTPUT = $(MB_HWT36_OUTPUT_DIR)/executable.elf
CYG_MB_HWT36_OUTPUT_DIR = MB_HWT36
CYG_MB_HWT36_OUTPUT = $(CYG_MB_HWT36_OUTPUT_DIR)/executable.elf

MB_HWT37_OUTPUT_DIR = MB_HWT37
MB_HWT37_OUTPUT = $(MB_HWT37_OUTPUT_DIR)/executable.elf
CYG_MB_HWT37_OUTPUT_DIR = MB_HWT37
CYG_MB_HWT37_OUTPUT = $(CYG_MB_HWT37_OUTPUT_DIR)/executable.elf

MB_HWT38_OUTPUT_DIR = MB_HWT38
MB_HWT38_OUTPUT = $(MB_HWT38_OUTPUT_DIR)/executable.elf
CYG_MB_HWT38_OUTPUT_DIR = MB_HWT38
CYG_MB_HWT38_OUTPUT = $(CYG_MB_HWT38_OUTPUT_DIR)/executable.elf

MB_HWT39_OUTPUT_DIR = MB_HWT39
MB_HWT39_OUTPUT = $(MB_HWT39_OUTPUT_DIR)/executable.elf
CYG_MB_HWT39_OUTPUT_DIR = MB_HWT39
CYG_MB_HWT39_OUTPUT = $(CYG_MB_HWT39_OUTPUT_DIR)/executable.elf

MICROBLAZE_BOOTLOOP = $(XILINX_EDK_DIR)/sw/lib/microblaze/mb_bootloop.elf
MICROBLAZE_BOOTLOOP_LE = $(XILINX_EDK_DIR)/sw/lib/microblaze/mb_bootloop_le.elf
PPC405_BOOTLOOP = $(XILINX_EDK_DIR)/sw/lib/ppc405/ppc_bootloop.elf
PPC440_BOOTLOOP = $(XILINX_EDK_DIR)/sw/lib/ppc440/ppc440_bootloop.elf
BOOTLOOP_DIR = bootloops

MICROBLAZE_0_BOOTLOOP = $(BOOTLOOP_DIR)/microblaze_0.elf
MICROBLAZE_0_XMDSTUB = microblaze_0/code/xmdstub.elf

MICROBLAZE_1_BOOTLOOP = $(BOOTLOOP_DIR)/microblaze_1.elf
MICROBLAZE_1_XMDSTUB = microblaze_1/code/xmdstub.elf

MICROBLAZE_2_BOOTLOOP = $(BOOTLOOP_DIR)/microblaze_2.elf
MICROBLAZE_2_XMDSTUB = microblaze_2/code/xmdstub.elf

MICROBLAZE_3_BOOTLOOP = $(BOOTLOOP_DIR)/microblaze_3.elf
MICROBLAZE_3_XMDSTUB = microblaze_3/code/xmdstub.elf

MICROBLAZE_4_BOOTLOOP = $(BOOTLOOP_DIR)/microblaze_4.elf
MICROBLAZE_4_XMDSTUB = microblaze_4/code/xmdstub.elf

MICROBLAZE_5_BOOTLOOP = $(BOOTLOOP_DIR)/microblaze_5.elf
MICROBLAZE_5_XMDSTUB = microblaze_5/code/xmdstub.elf

MICROBLAZE_6_BOOTLOOP = $(BOOTLOOP_DIR)/microblaze_6.elf
MICROBLAZE_6_XMDSTUB = microblaze_6/code/xmdstub.elf

MICROBLAZE_7_BOOTLOOP = $(BOOTLOOP_DIR)/microblaze_7.elf
MICROBLAZE_7_XMDSTUB = microblaze_7/code/xmdstub.elf

MICROBLAZE_8_BOOTLOOP = $(BOOTLOOP_DIR)/microblaze_8.elf
MICROBLAZE_8_XMDSTUB = microblaze_8/code/xmdstub.elf

MICROBLAZE_9_BOOTLOOP = $(BOOTLOOP_DIR)/microblaze_9.elf
MICROBLAZE_9_XMDSTUB = microblaze_9/code/xmdstub.elf

MICROBLAZE_10_BOOTLOOP = $(BOOTLOOP_DIR)/microblaze_10.elf
MICROBLAZE_10_XMDSTUB = microblaze_10/code/xmdstub.elf

MICROBLAZE_11_BOOTLOOP = $(BOOTLOOP_DIR)/microblaze_11.elf
MICROBLAZE_11_XMDSTUB = microblaze_11/code/xmdstub.elf

MICROBLAZE_12_BOOTLOOP = $(BOOTLOOP_DIR)/microblaze_12.elf
MICROBLAZE_12_XMDSTUB = microblaze_12/code/xmdstub.elf

MICROBLAZE_13_BOOTLOOP = $(BOOTLOOP_DIR)/microblaze_13.elf
MICROBLAZE_13_XMDSTUB = microblaze_13/code/xmdstub.elf

MICROBLAZE_14_BOOTLOOP = $(BOOTLOOP_DIR)/microblaze_14.elf
MICROBLAZE_14_XMDSTUB = microblaze_14/code/xmdstub.elf

MICROBLAZE_15_BOOTLOOP = $(BOOTLOOP_DIR)/microblaze_15.elf
MICROBLAZE_15_XMDSTUB = microblaze_15/code/xmdstub.elf

MICROBLAZE_16_BOOTLOOP = $(BOOTLOOP_DIR)/microblaze_16.elf
MICROBLAZE_16_XMDSTUB = microblaze_16/code/xmdstub.elf

MICROBLAZE_17_BOOTLOOP = $(BOOTLOOP_DIR)/microblaze_17.elf
MICROBLAZE_17_XMDSTUB = microblaze_17/code/xmdstub.elf

MICROBLAZE_18_BOOTLOOP = $(BOOTLOOP_DIR)/microblaze_18.elf
MICROBLAZE_18_XMDSTUB = microblaze_18/code/xmdstub.elf

MICROBLAZE_19_BOOTLOOP = $(BOOTLOOP_DIR)/microblaze_19.elf
MICROBLAZE_19_XMDSTUB = microblaze_19/code/xmdstub.elf

MICROBLAZE_20_BOOTLOOP = $(BOOTLOOP_DIR)/microblaze_20.elf
MICROBLAZE_20_XMDSTUB = microblaze_20/code/xmdstub.elf

MICROBLAZE_21_BOOTLOOP = $(BOOTLOOP_DIR)/microblaze_21.elf
MICROBLAZE_21_XMDSTUB = microblaze_21/code/xmdstub.elf

MICROBLAZE_22_BOOTLOOP = $(BOOTLOOP_DIR)/microblaze_22.elf
MICROBLAZE_22_XMDSTUB = microblaze_22/code/xmdstub.elf

MICROBLAZE_23_BOOTLOOP = $(BOOTLOOP_DIR)/microblaze_23.elf
MICROBLAZE_23_XMDSTUB = microblaze_23/code/xmdstub.elf

MICROBLAZE_24_BOOTLOOP = $(BOOTLOOP_DIR)/microblaze_24.elf
MICROBLAZE_24_XMDSTUB = microblaze_24/code/xmdstub.elf

MICROBLAZE_25_BOOTLOOP = $(BOOTLOOP_DIR)/microblaze_25.elf
MICROBLAZE_25_XMDSTUB = microblaze_25/code/xmdstub.elf

MICROBLAZE_26_BOOTLOOP = $(BOOTLOOP_DIR)/microblaze_26.elf
MICROBLAZE_26_XMDSTUB = microblaze_26/code/xmdstub.elf

MICROBLAZE_27_BOOTLOOP = $(BOOTLOOP_DIR)/microblaze_27.elf
MICROBLAZE_27_XMDSTUB = microblaze_27/code/xmdstub.elf

MICROBLAZE_28_BOOTLOOP = $(BOOTLOOP_DIR)/microblaze_28.elf
MICROBLAZE_28_XMDSTUB = microblaze_28/code/xmdstub.elf

MICROBLAZE_29_BOOTLOOP = $(BOOTLOOP_DIR)/microblaze_29.elf
MICROBLAZE_29_XMDSTUB = microblaze_29/code/xmdstub.elf

MICROBLAZE_30_BOOTLOOP = $(BOOTLOOP_DIR)/microblaze_30.elf
MICROBLAZE_30_XMDSTUB = microblaze_30/code/xmdstub.elf

MICROBLAZE_31_BOOTLOOP = $(BOOTLOOP_DIR)/microblaze_31.elf
MICROBLAZE_31_XMDSTUB = microblaze_31/code/xmdstub.elf

MICROBLAZE_32_BOOTLOOP = $(BOOTLOOP_DIR)/microblaze_32.elf
MICROBLAZE_32_XMDSTUB = microblaze_32/code/xmdstub.elf

MICROBLAZE_33_BOOTLOOP = $(BOOTLOOP_DIR)/microblaze_33.elf
MICROBLAZE_33_XMDSTUB = microblaze_33/code/xmdstub.elf

MICROBLAZE_34_BOOTLOOP = $(BOOTLOOP_DIR)/microblaze_34.elf
MICROBLAZE_34_XMDSTUB = microblaze_34/code/xmdstub.elf

MICROBLAZE_35_BOOTLOOP = $(BOOTLOOP_DIR)/microblaze_35.elf
MICROBLAZE_35_XMDSTUB = microblaze_35/code/xmdstub.elf

MICROBLAZE_36_BOOTLOOP = $(BOOTLOOP_DIR)/microblaze_36.elf
MICROBLAZE_36_XMDSTUB = microblaze_36/code/xmdstub.elf

MICROBLAZE_37_BOOTLOOP = $(BOOTLOOP_DIR)/microblaze_37.elf
MICROBLAZE_37_XMDSTUB = microblaze_37/code/xmdstub.elf

MICROBLAZE_38_BOOTLOOP = $(BOOTLOOP_DIR)/microblaze_38.elf
MICROBLAZE_38_XMDSTUB = microblaze_38/code/xmdstub.elf

MICROBLAZE_39_BOOTLOOP = $(BOOTLOOP_DIR)/microblaze_39.elf
MICROBLAZE_39_XMDSTUB = microblaze_39/code/xmdstub.elf

BRAMINIT_ELF_FILES =  $(CORETEST_OUTPUT) $(MB_HWT1_OUTPUT) $(MB_HWT2_OUTPUT) $(MB_HWT3_OUTPUT) $(MB_HWT4_OUTPUT) $(MB_HWT5_OUTPUT) $(MB_HWT6_OUTPUT) $(MB_HWT7_OUTPUT) $(MB_HWT8_OUTPUT) $(MB_HWT9_OUTPUT) $(MB_HWT10_OUTPUT) $(MB_HWT11_OUTPUT) $(MB_HWT12_OUTPUT) $(MB_HWT13_OUTPUT) $(MB_HWT14_OUTPUT) $(MB_HWT15_OUTPUT) $(MB_HWT16_OUTPUT) $(MB_HWT17_OUTPUT) $(MB_HWT18_OUTPUT) $(MB_HWT19_OUTPUT) $(MB_HWT20_OUTPUT) $(MB_HWT21_OUTPUT) $(MB_HWT22_OUTPUT) $(MB_HWT23_OUTPUT) $(MB_HWT24_OUTPUT) $(MB_HWT25_OUTPUT) $(MB_HWT26_OUTPUT) $(MB_HWT27_OUTPUT) $(MB_HWT28_OUTPUT) $(MB_HWT29_OUTPUT) $(MB_HWT30_OUTPUT) $(MB_HWT31_OUTPUT) $(MB_HWT32_OUTPUT) $(MB_HWT33_OUTPUT) $(MB_HWT34_OUTPUT) $(MB_HWT35_OUTPUT) $(MB_HWT36_OUTPUT) $(MB_HWT37_OUTPUT) $(MB_HWT38_OUTPUT) $(MB_HWT39_OUTPUT) 
BRAMINIT_ELF_FILE_ARGS =   -pe microblaze_0 $(CORETEST_OUTPUT)  -pe microblaze_1 $(MB_HWT1_OUTPUT)  -pe microblaze_2 $(MB_HWT2_OUTPUT)  -pe microblaze_3 $(MB_HWT3_OUTPUT)  -pe microblaze_4 $(MB_HWT4_OUTPUT)  -pe microblaze_5 $(MB_HWT5_OUTPUT)  -pe microblaze_6 $(MB_HWT6_OUTPUT)  -pe microblaze_7 $(MB_HWT7_OUTPUT)  -pe microblaze_8 $(MB_HWT8_OUTPUT)  -pe microblaze_9 $(MB_HWT9_OUTPUT)  -pe microblaze_10 $(MB_HWT10_OUTPUT)  -pe microblaze_11 $(MB_HWT11_OUTPUT)  -pe microblaze_12 $(MB_HWT12_OUTPUT)  -pe microblaze_13 $(MB_HWT13_OUTPUT)  -pe microblaze_14 $(MB_HWT14_OUTPUT)  -pe microblaze_15 $(MB_HWT15_OUTPUT)  -pe microblaze_16 $(MB_HWT16_OUTPUT)  -pe microblaze_17 $(MB_HWT17_OUTPUT)  -pe microblaze_18 $(MB_HWT18_OUTPUT)  -pe microblaze_19 $(MB_HWT19_OUTPUT)  -pe microblaze_20 $(MB_HWT20_OUTPUT)  -pe microblaze_21 $(MB_HWT21_OUTPUT)  -pe microblaze_22 $(MB_HWT22_OUTPUT)  -pe microblaze_23 $(MB_HWT23_OUTPUT)  -pe microblaze_24 $(MB_HWT24_OUTPUT)  -pe microblaze_25 $(MB_HWT25_OUTPUT)  -pe microblaze_26 $(MB_HWT26_OUTPUT)  -pe microblaze_27 $(MB_HWT27_OUTPUT)  -pe microblaze_28 $(MB_HWT28_OUTPUT)  -pe microblaze_29 $(MB_HWT29_OUTPUT)  -pe microblaze_30 $(MB_HWT30_OUTPUT)  -pe microblaze_31 $(MB_HWT31_OUTPUT)  -pe microblaze_32 $(MB_HWT32_OUTPUT)  -pe microblaze_33 $(MB_HWT33_OUTPUT)  -pe microblaze_34 $(MB_HWT34_OUTPUT)  -pe microblaze_35 $(MB_HWT35_OUTPUT)  -pe microblaze_36 $(MB_HWT36_OUTPUT)  -pe microblaze_37 $(MB_HWT37_OUTPUT)  -pe microblaze_38 $(MB_HWT38_OUTPUT)  -pe microblaze_39 $(MB_HWT39_OUTPUT) 

ALL_USER_ELF_FILES = $(CORETEST_OUTPUT) $(MB_HWT1_OUTPUT) $(MB_HWT2_OUTPUT) $(MB_HWT3_OUTPUT) $(MB_HWT4_OUTPUT) $(MB_HWT5_OUTPUT) $(MB_HWT6_OUTPUT) $(MB_HWT7_OUTPUT) $(MB_HWT8_OUTPUT) $(MB_HWT9_OUTPUT) $(MB_HWT10_OUTPUT) $(MB_HWT11_OUTPUT) $(MB_HWT12_OUTPUT) $(MB_HWT13_OUTPUT) $(MB_HWT14_OUTPUT) $(MB_HWT15_OUTPUT) $(MB_HWT16_OUTPUT) $(MB_HWT17_OUTPUT) $(MB_HWT18_OUTPUT) $(MB_HWT19_OUTPUT) $(MB_HWT20_OUTPUT) $(MB_HWT21_OUTPUT) $(MB_HWT22_OUTPUT) $(MB_HWT23_OUTPUT) $(MB_HWT24_OUTPUT) $(MB_HWT25_OUTPUT) $(MB_HWT26_OUTPUT) $(MB_HWT27_OUTPUT) $(MB_HWT28_OUTPUT) $(MB_HWT29_OUTPUT) $(MB_HWT30_OUTPUT) $(MB_HWT31_OUTPUT) $(MB_HWT32_OUTPUT) $(MB_HWT33_OUTPUT) $(MB_HWT34_OUTPUT) $(MB_HWT35_OUTPUT) $(MB_HWT36_OUTPUT) $(MB_HWT37_OUTPUT) $(MB_HWT38_OUTPUT) $(MB_HWT39_OUTPUT) 

SIM_CMD = vsim

BEHAVIORAL_SIM_SCRIPT = simulation/behavioral/$(SYSTEM)_setup.do

STRUCTURAL_SIM_SCRIPT = simulation/structural/$(SYSTEM)_setup.do

TIMING_SIM_SCRIPT = simulation/timing/$(SYSTEM)_setup.do

DEFAULT_SIM_SCRIPT = $(BEHAVIORAL_SIM_SCRIPT)

MIX_LANG_SIM_OPT = -mixed yes

SIMGEN_OPTIONS = -p $(DEVICE) -lang $(LANGUAGE) $(SEARCHPATHOPT) $(BRAMINIT_ELF_FILE_ARGS) $(MIX_LANG_SIM_OPT) -msg __xps/ise/xmsgprops.lst -s mti -X /opt/Xilinx/12.3/ISE_DS/ISE


LIBRARIES =  \
       microblaze_0/lib/libxil.a  \
       microblaze_1/lib/libxil.a  \
       microblaze_2/lib/libxil.a  \
       microblaze_3/lib/libxil.a  \
       microblaze_4/lib/libxil.a  \
       microblaze_5/lib/libxil.a  \
       microblaze_6/lib/libxil.a  \
       microblaze_7/lib/libxil.a  \
       microblaze_8/lib/libxil.a  \
       microblaze_9/lib/libxil.a  \
       microblaze_10/lib/libxil.a  \
       microblaze_11/lib/libxil.a  \
       microblaze_12/lib/libxil.a  \
       microblaze_13/lib/libxil.a  \
       microblaze_14/lib/libxil.a  \
       microblaze_15/lib/libxil.a  \
       microblaze_16/lib/libxil.a  \
       microblaze_17/lib/libxil.a  \
       microblaze_18/lib/libxil.a  \
       microblaze_19/lib/libxil.a  \
       microblaze_20/lib/libxil.a  \
       microblaze_21/lib/libxil.a  \
       microblaze_22/lib/libxil.a  \
       microblaze_23/lib/libxil.a  \
       microblaze_24/lib/libxil.a  \
       microblaze_25/lib/libxil.a  \
       microblaze_26/lib/libxil.a  \
       microblaze_27/lib/libxil.a  \
       microblaze_28/lib/libxil.a  \
       microblaze_29/lib/libxil.a  \
       microblaze_30/lib/libxil.a  \
       microblaze_31/lib/libxil.a  \
       microblaze_32/lib/libxil.a  \
       microblaze_33/lib/libxil.a  \
       microblaze_34/lib/libxil.a  \
       microblaze_35/lib/libxil.a  \
       microblaze_36/lib/libxil.a  \
       microblaze_37/lib/libxil.a  \
       microblaze_38/lib/libxil.a  \
       microblaze_39/lib/libxil.a 

LIBSCLEAN_TARGETS = microblaze_0_libsclean microblaze_1_libsclean microblaze_2_libsclean microblaze_3_libsclean microblaze_4_libsclean microblaze_5_libsclean microblaze_6_libsclean microblaze_7_libsclean microblaze_8_libsclean microblaze_9_libsclean microblaze_10_libsclean microblaze_11_libsclean microblaze_12_libsclean microblaze_13_libsclean microblaze_14_libsclean microblaze_15_libsclean microblaze_16_libsclean microblaze_17_libsclean microblaze_18_libsclean microblaze_19_libsclean microblaze_20_libsclean microblaze_21_libsclean microblaze_22_libsclean microblaze_23_libsclean microblaze_24_libsclean microblaze_25_libsclean microblaze_26_libsclean microblaze_27_libsclean microblaze_28_libsclean microblaze_29_libsclean microblaze_30_libsclean microblaze_31_libsclean microblaze_32_libsclean microblaze_33_libsclean microblaze_34_libsclean microblaze_35_libsclean microblaze_36_libsclean microblaze_37_libsclean microblaze_38_libsclean microblaze_39_libsclean 

PROGRAMCLEAN_TARGETS = CoreTest_programclean MB_HWT1_programclean MB_HWT2_programclean MB_HWT3_programclean MB_HWT4_programclean MB_HWT5_programclean MB_HWT6_programclean MB_HWT7_programclean MB_HWT8_programclean MB_HWT9_programclean MB_HWT10_programclean MB_HWT11_programclean MB_HWT12_programclean MB_HWT13_programclean MB_HWT14_programclean MB_HWT15_programclean MB_HWT16_programclean MB_HWT17_programclean MB_HWT18_programclean MB_HWT19_programclean MB_HWT20_programclean MB_HWT21_programclean MB_HWT22_programclean MB_HWT23_programclean MB_HWT24_programclean MB_HWT25_programclean MB_HWT26_programclean MB_HWT27_programclean MB_HWT28_programclean MB_HWT29_programclean MB_HWT30_programclean MB_HWT31_programclean MB_HWT32_programclean MB_HWT33_programclean MB_HWT34_programclean MB_HWT35_programclean MB_HWT36_programclean MB_HWT37_programclean MB_HWT38_programclean MB_HWT39_programclean 

CORE_STATE_DEVELOPMENT_FILES = /opt/Xilinx/latest/ISE_DS/EDK/hw/XilinxProcessorIPLib/pcores/proc_common_v3_00_a/hdl/vhdl/proc_common_pkg.vhd \
/opt/Xilinx/latest/ISE_DS/EDK/hw/XilinxProcessorIPLib/pcores/proc_common_v3_00_a/hdl/vhdl/ipif_pkg.vhd \
/opt/Xilinx/latest/ISE_DS/EDK/hw/XilinxProcessorIPLib/pcores/proc_common_v3_00_a/hdl/vhdl/or_muxcy.vhd \
/opt/Xilinx/latest/ISE_DS/EDK/hw/XilinxProcessorIPLib/pcores/proc_common_v3_00_a/hdl/vhdl/or_gate128.vhd \
/opt/Xilinx/latest/ISE_DS/EDK/hw/XilinxProcessorIPLib/pcores/proc_common_v3_00_a/hdl/vhdl/family_support.vhd \
/opt/Xilinx/latest/ISE_DS/EDK/hw/XilinxProcessorIPLib/pcores/proc_common_v3_00_a/hdl/vhdl/pselect_f.vhd \
/opt/Xilinx/latest/ISE_DS/EDK/hw/XilinxProcessorIPLib/pcores/proc_common_v3_00_a/hdl/vhdl/counter_f.vhd \
/opt/Xilinx/latest/ISE_DS/EDK/hw/XilinxProcessorIPLib/pcores/proc_common_v3_00_a/hdl/vhdl/cntr_incr_decr_addn_f.vhd \
/opt/Xilinx/latest/ISE_DS/EDK/hw/XilinxProcessorIPLib/pcores/proc_common_v3_00_a/hdl/vhdl/muxf_struct_f.vhd \
/opt/Xilinx/latest/ISE_DS/EDK/hw/XilinxProcessorIPLib/pcores/proc_common_v3_00_a/hdl/vhdl/dynshreg_f.vhd \
/opt/Xilinx/latest/ISE_DS/EDK/hw/XilinxProcessorIPLib/pcores/proc_common_v3_00_a/hdl/vhdl/srl_fifo_rbu_f.vhd \
/opt/Xilinx/latest/ISE_DS/EDK/hw/XilinxProcessorIPLib/pcores/proc_common_v3_00_a/hdl/vhdl/srl_fifo_f.vhd \
/opt/Xilinx/latest/ISE_DS/EDK/hw/XilinxProcessorIPLib/pcores/proc_common_v3_00_a/hdl/vhdl/soft_reset.vhd \
/opt/Xilinx/latest/ISE_DS/EDK/hw/XilinxProcessorIPLib/pcores/plbv46_slave_single_v1_01_a/hdl/vhdl/plb_address_decoder.vhd \
/opt/Xilinx/latest/ISE_DS/EDK/hw/XilinxProcessorIPLib/pcores/plbv46_slave_single_v1_01_a/hdl/vhdl/plb_slave_attachment.vhd \
/opt/Xilinx/latest/ISE_DS/EDK/hw/XilinxProcessorIPLib/pcores/plbv46_slave_single_v1_01_a/hdl/vhdl/plbv46_slave_single.vhd \
/opt/Xilinx/latest/ISE_DS/EDK/hw/XilinxProcessorIPLib/pcores/plbv46_master_single_v1_01_a/hdl/vhdl/data_width_adapter.vhd \
/opt/Xilinx/latest/ISE_DS/EDK/hw/XilinxProcessorIPLib/pcores/plbv46_master_single_v1_01_a/hdl/vhdl/data_mirror_128.vhd \
/opt/Xilinx/latest/ISE_DS/EDK/hw/XilinxProcessorIPLib/pcores/plbv46_master_single_v1_01_a/hdl/vhdl/plbv46_master_single.vhd \
/opt/Xilinx/latest/ISE_DS/EDK/hw/XilinxProcessorIPLib/pcores/fsl_v20_v2_11_c/hdl/vhdl/async_fifo_bram.vhd \
/opt/Xilinx/latest/ISE_DS/EDK/hw/XilinxProcessorIPLib/pcores/fsl_v20_v2_11_c/hdl/vhdl/async_fifo.vhd \
/opt/Xilinx/latest/ISE_DS/EDK/hw/XilinxProcessorIPLib/pcores/fsl_v20_v2_11_c/hdl/vhdl/gen_srlfifo.vhd \
/opt/Xilinx/latest/ISE_DS/EDK/hw/XilinxProcessorIPLib/pcores/fsl_v20_v2_11_c/hdl/vhdl/gen_sync_bram.vhd \
/opt/Xilinx/latest/ISE_DS/EDK/hw/XilinxProcessorIPLib/pcores/fsl_v20_v2_11_c/hdl/vhdl/gen_sync_dpram.vhd \
/opt/Xilinx/latest/ISE_DS/EDK/hw/XilinxProcessorIPLib/pcores/fsl_v20_v2_11_c/hdl/vhdl/sync_fifo.vhd \
/opt/Xilinx/latest/ISE_DS/EDK/hw/XilinxProcessorIPLib/pcores/fsl_v20_v2_11_c/hdl/vhdl/fsl_v20.vhd \
/home/eugene/homogeneous_port/src/hardware/MyRepository/pcores/plb_cond_vars_v1_00_a/hdl/vhdl/condvar.vhd \
/home/eugene/homogeneous_port/src/hardware/MyRepository/pcores/plb_cond_vars_v1_00_a/hdl/vhdl/user_logic.vhd \
/home/eugene/homogeneous_port/src/hardware/MyRepository/pcores/plb_cond_vars_v1_00_a/hdl/vhdl/plb_cond_vars.vhd \
/home/eugene/homogeneous_port/src/hardware/MyRepository/pcores/plb_scheduler_v1_00_a/hdl/vhdl/infer_bram.vhd \
/home/eugene/homogeneous_port/src/hardware/MyRepository/pcores/plb_scheduler_v1_00_a/hdl/vhdl/parallel.vhd \
/home/eugene/homogeneous_port/src/hardware/MyRepository/pcores/plb_scheduler_v1_00_a/hdl/vhdl/user_logic.vhd \
/home/eugene/homogeneous_port/src/hardware/MyRepository/pcores/plb_scheduler_v1_00_a/hdl/vhdl/plb_scheduler.vhd \
/home/eugene/homogeneous_port/src/hardware/MyRepository/pcores/plb_sync_manager_v1_00_a/hdl/vhdl/common.vhd \
/home/eugene/homogeneous_port/src/hardware/MyRepository/pcores/plb_sync_manager_v1_00_a/hdl/vhdl/lock_fsm.vhd \
/home/eugene/homogeneous_port/src/hardware/MyRepository/pcores/plb_sync_manager_v1_00_a/hdl/vhdl/unlock_fsm.vhd \
/home/eugene/homogeneous_port/src/hardware/MyRepository/pcores/plb_sync_manager_v1_00_a/hdl/vhdl/trylock_fsm.vhd \
/home/eugene/homogeneous_port/src/hardware/MyRepository/pcores/plb_sync_manager_v1_00_a/hdl/vhdl/owner_fsm.vhd \
/home/eugene/homogeneous_port/src/hardware/MyRepository/pcores/plb_sync_manager_v1_00_a/hdl/vhdl/kind_fsm.vhd \
/home/eugene/homogeneous_port/src/hardware/MyRepository/pcores/plb_sync_manager_v1_00_a/hdl/vhdl/count_fsm.vhd \
/home/eugene/homogeneous_port/src/hardware/MyRepository/pcores/plb_sync_manager_v1_00_a/hdl/vhdl/result_fsm.vhd \
/home/eugene/homogeneous_port/src/hardware/MyRepository/pcores/plb_sync_manager_v1_00_a/hdl/vhdl/mutex_store.vhd \
/home/eugene/homogeneous_port/src/hardware/MyRepository/pcores/plb_sync_manager_v1_00_a/hdl/vhdl/thread_store.vhd \
/home/eugene/homogeneous_port/src/hardware/MyRepository/pcores/plb_sync_manager_v1_00_a/hdl/vhdl/send_store.vhd \
/home/eugene/homogeneous_port/src/hardware/MyRepository/pcores/plb_sync_manager_v1_00_a/hdl/vhdl/slave.vhd \
/home/eugene/homogeneous_port/src/hardware/MyRepository/pcores/plb_sync_manager_v1_00_a/hdl/vhdl/master.vhd \
/home/eugene/homogeneous_port/src/hardware/MyRepository/pcores/plb_sync_manager_v1_00_a/hdl/vhdl/user_logic.vhd \
/home/eugene/homogeneous_port/src/hardware/MyRepository/pcores/plb_sync_manager_v1_00_a/hdl/vhdl/plb_sync_manager.vhd \
/home/eugene/homogeneous_port/src/hardware/MyRepository/pcores/plb_thread_manager_v1_00_a/hdl/vhdl/infer_bram_dual_port.vhd \
/home/eugene/homogeneous_port/src/hardware/MyRepository/pcores/plb_thread_manager_v1_00_a/hdl/vhdl/user_logic.vhd \
/home/eugene/homogeneous_port/src/hardware/MyRepository/pcores/plb_thread_manager_v1_00_a/hdl/vhdl/plb_thread_manager.vhd \
/home/eugene/homogeneous_port/src/hardware/MyRepository/pcores/plb_hthread_reset_core_v1_00_a/hdl/vhdl/user_logic.vhd \
/home/eugene/homogeneous_port/src/hardware/MyRepository/pcores/plb_hthread_reset_core_v1_00_a/hdl/vhdl/plb_hthread_reset_core.vhd \
/home/eugene/homogeneous_port/src/hardware/MyRepository/pcores/plb_hthreads_timer_v1_00_a/hdl/vhdl/user_logic.vhd \
/home/eugene/homogeneous_port/src/hardware/MyRepository/pcores/plb_hthreads_timer_v1_00_a/hdl/vhdl/plb_hthreads_timer.vhd

WRAPPER_NGC_FILES = implementation/microblaze_0_wrapper.ngc \
implementation/ilmb_wrapper.ngc \
implementation/dlmb_wrapper.ngc \
implementation/dlmb_cntlr_wrapper.ngc \
implementation/ilmb_cntlr_wrapper.ngc \
implementation/lmb_bram_wrapper.ngc \
implementation/main_bus_wrapper.ngc \
implementation/host_bus_wrapper.ngc \
implementation/data_instr_bus_wrapper.ngc \
implementation/data_instr_bus_1_wrapper.ngc \
implementation/data_instr_bus_2_wrapper.ngc \
implementation/data_instr_bus_3_wrapper.ngc \
implementation/data_instr_bus_4_wrapper.ngc \
implementation/group1_bus_wrapper.ngc \
implementation/group2_bus_wrapper.ngc \
implementation/group3_bus_wrapper.ngc \
implementation/group4_bus_wrapper.ngc \
implementation/group5_bus_wrapper.ngc \
implementation/microblaze_1_wrapper.ngc \
implementation/ilmb_1_wrapper.ngc \
implementation/dlmb_1_wrapper.ngc \
implementation/dlmb_cntlr_1_wrapper.ngc \
implementation/dplb_cntlr_1_wrapper.ngc \
implementation/ilmb_cntlr_1_wrapper.ngc \
implementation/iplb_cntlr_1_wrapper.ngc \
implementation/ilmb_bram_1_wrapper.ngc \
implementation/dlmb_bram_1_wrapper.ngc \
implementation/microblaze_2_wrapper.ngc \
implementation/ilmb_2_wrapper.ngc \
implementation/dlmb_2_wrapper.ngc \
implementation/dlmb_cntlr_2_wrapper.ngc \
implementation/dplb_cntlr_2_wrapper.ngc \
implementation/ilmb_cntlr_2_wrapper.ngc \
implementation/iplb_cntlr_2_wrapper.ngc \
implementation/ilmb_bram_2_wrapper.ngc \
implementation/dlmb_bram_2_wrapper.ngc \
implementation/microblaze_3_wrapper.ngc \
implementation/ilmb_3_wrapper.ngc \
implementation/dlmb_3_wrapper.ngc \
implementation/dlmb_cntlr_3_wrapper.ngc \
implementation/dplb_cntlr_3_wrapper.ngc \
implementation/ilmb_cntlr_3_wrapper.ngc \
implementation/iplb_cntlr_3_wrapper.ngc \
implementation/ilmb_bram_3_wrapper.ngc \
implementation/dlmb_bram_3_wrapper.ngc \
implementation/microblaze_4_wrapper.ngc \
implementation/ilmb_4_wrapper.ngc \
implementation/dlmb_4_wrapper.ngc \
implementation/dlmb_cntlr_4_wrapper.ngc \
implementation/dplb_cntlr_4_wrapper.ngc \
implementation/ilmb_cntlr_4_wrapper.ngc \
implementation/iplb_cntlr_4_wrapper.ngc \
implementation/ilmb_bram_4_wrapper.ngc \
implementation/dlmb_bram_4_wrapper.ngc \
implementation/microblaze_5_wrapper.ngc \
implementation/ilmb_5_wrapper.ngc \
implementation/dlmb_5_wrapper.ngc \
implementation/dlmb_cntlr_5_wrapper.ngc \
implementation/dplb_cntlr_5_wrapper.ngc \
implementation/ilmb_cntlr_5_wrapper.ngc \
implementation/iplb_cntlr_5_wrapper.ngc \
implementation/ilmb_bram_5_wrapper.ngc \
implementation/dlmb_bram_5_wrapper.ngc \
implementation/microblaze_6_wrapper.ngc \
implementation/ilmb_6_wrapper.ngc \
implementation/dlmb_6_wrapper.ngc \
implementation/dlmb_cntlr_6_wrapper.ngc \
implementation/dplb_cntlr_6_wrapper.ngc \
implementation/ilmb_cntlr_6_wrapper.ngc \
implementation/iplb_cntlr_6_wrapper.ngc \
implementation/ilmb_bram_6_wrapper.ngc \
implementation/dlmb_bram_6_wrapper.ngc \
implementation/microblaze_7_wrapper.ngc \
implementation/ilmb_7_wrapper.ngc \
implementation/dlmb_7_wrapper.ngc \
implementation/dlmb_cntlr_7_wrapper.ngc \
implementation/dplb_cntlr_7_wrapper.ngc \
implementation/ilmb_cntlr_7_wrapper.ngc \
implementation/iplb_cntlr_7_wrapper.ngc \
implementation/ilmb_bram_7_wrapper.ngc \
implementation/dlmb_bram_7_wrapper.ngc \
implementation/microblaze_8_wrapper.ngc \
implementation/ilmb_8_wrapper.ngc \
implementation/dlmb_8_wrapper.ngc \
implementation/dlmb_cntlr_8_wrapper.ngc \
implementation/dplb_cntlr_8_wrapper.ngc \
implementation/ilmb_cntlr_8_wrapper.ngc \
implementation/iplb_cntlr_8_wrapper.ngc \
implementation/ilmb_bram_8_wrapper.ngc \
implementation/dlmb_bram_8_wrapper.ngc \
implementation/extra_bram_cntlr_local1_wrapper.ngc \
implementation/extra_bram_cntlr_global1_wrapper.ngc \
implementation/extra_bram_block1_wrapper.ngc \
implementation/microblaze_9_wrapper.ngc \
implementation/ilmb_9_wrapper.ngc \
implementation/dlmb_9_wrapper.ngc \
implementation/dlmb_cntlr_9_wrapper.ngc \
implementation/dplb_cntlr_9_wrapper.ngc \
implementation/ilmb_cntlr_9_wrapper.ngc \
implementation/iplb_cntlr_9_wrapper.ngc \
implementation/ilmb_bram_9_wrapper.ngc \
implementation/dlmb_bram_9_wrapper.ngc \
implementation/microblaze_10_wrapper.ngc \
implementation/ilmb_10_wrapper.ngc \
implementation/dlmb_10_wrapper.ngc \
implementation/dlmb_cntlr_10_wrapper.ngc \
implementation/dplb_cntlr_10_wrapper.ngc \
implementation/ilmb_cntlr_10_wrapper.ngc \
implementation/iplb_cntlr_10_wrapper.ngc \
implementation/ilmb_bram_10_wrapper.ngc \
implementation/dlmb_bram_10_wrapper.ngc \
implementation/microblaze_11_wrapper.ngc \
implementation/ilmb_11_wrapper.ngc \
implementation/dlmb_11_wrapper.ngc \
implementation/dlmb_cntlr_11_wrapper.ngc \
implementation/dplb_cntlr_11_wrapper.ngc \
implementation/ilmb_cntlr_11_wrapper.ngc \
implementation/iplb_cntlr_11_wrapper.ngc \
implementation/ilmb_bram_11_wrapper.ngc \
implementation/dlmb_bram_11_wrapper.ngc \
implementation/microblaze_12_wrapper.ngc \
implementation/ilmb_12_wrapper.ngc \
implementation/dlmb_12_wrapper.ngc \
implementation/dlmb_cntlr_12_wrapper.ngc \
implementation/dplb_cntlr_12_wrapper.ngc \
implementation/ilmb_cntlr_12_wrapper.ngc \
implementation/iplb_cntlr_12_wrapper.ngc \
implementation/ilmb_bram_12_wrapper.ngc \
implementation/dlmb_bram_12_wrapper.ngc \
implementation/microblaze_13_wrapper.ngc \
implementation/ilmb_13_wrapper.ngc \
implementation/dlmb_13_wrapper.ngc \
implementation/dlmb_cntlr_13_wrapper.ngc \
implementation/dplb_cntlr_13_wrapper.ngc \
implementation/ilmb_cntlr_13_wrapper.ngc \
implementation/iplb_cntlr_13_wrapper.ngc \
implementation/ilmb_bram_13_wrapper.ngc \
implementation/dlmb_bram_13_wrapper.ngc \
implementation/microblaze_14_wrapper.ngc \
implementation/ilmb_14_wrapper.ngc \
implementation/dlmb_14_wrapper.ngc \
implementation/dlmb_cntlr_14_wrapper.ngc \
implementation/dplb_cntlr_14_wrapper.ngc \
implementation/ilmb_cntlr_14_wrapper.ngc \
implementation/iplb_cntlr_14_wrapper.ngc \
implementation/ilmb_bram_14_wrapper.ngc \
implementation/dlmb_bram_14_wrapper.ngc \
implementation/microblaze_15_wrapper.ngc \
implementation/ilmb_15_wrapper.ngc \
implementation/dlmb_15_wrapper.ngc \
implementation/dlmb_cntlr_15_wrapper.ngc \
implementation/dplb_cntlr_15_wrapper.ngc \
implementation/ilmb_cntlr_15_wrapper.ngc \
implementation/iplb_cntlr_15_wrapper.ngc \
implementation/ilmb_bram_15_wrapper.ngc \
implementation/dlmb_bram_15_wrapper.ngc \
implementation/microblaze_16_wrapper.ngc \
implementation/ilmb_16_wrapper.ngc \
implementation/dlmb_16_wrapper.ngc \
implementation/dlmb_cntlr_16_wrapper.ngc \
implementation/dplb_cntlr_16_wrapper.ngc \
implementation/ilmb_cntlr_16_wrapper.ngc \
implementation/iplb_cntlr_16_wrapper.ngc \
implementation/ilmb_bram_16_wrapper.ngc \
implementation/dlmb_bram_16_wrapper.ngc \
implementation/extra_bram_cntlr_local2_wrapper.ngc \
implementation/extra_bram_cntlr_global2_wrapper.ngc \
implementation/extra_bram_block2_wrapper.ngc \
implementation/microblaze_17_wrapper.ngc \
implementation/ilmb_17_wrapper.ngc \
implementation/dlmb_17_wrapper.ngc \
implementation/dlmb_cntlr_17_wrapper.ngc \
implementation/dplb_cntlr_17_wrapper.ngc \
implementation/ilmb_cntlr_17_wrapper.ngc \
implementation/iplb_cntlr_17_wrapper.ngc \
implementation/ilmb_bram_17_wrapper.ngc \
implementation/dlmb_bram_17_wrapper.ngc \
implementation/microblaze_18_wrapper.ngc \
implementation/ilmb_18_wrapper.ngc \
implementation/dlmb_18_wrapper.ngc \
implementation/dlmb_cntlr_18_wrapper.ngc \
implementation/dplb_cntlr_18_wrapper.ngc \
implementation/ilmb_cntlr_18_wrapper.ngc \
implementation/iplb_cntlr_18_wrapper.ngc \
implementation/ilmb_bram_18_wrapper.ngc \
implementation/dlmb_bram_18_wrapper.ngc \
implementation/microblaze_19_wrapper.ngc \
implementation/ilmb_19_wrapper.ngc \
implementation/dlmb_19_wrapper.ngc \
implementation/dlmb_cntlr_19_wrapper.ngc \
implementation/dplb_cntlr_19_wrapper.ngc \
implementation/ilmb_cntlr_19_wrapper.ngc \
implementation/iplb_cntlr_19_wrapper.ngc \
implementation/ilmb_bram_19_wrapper.ngc \
implementation/dlmb_bram_19_wrapper.ngc \
implementation/microblaze_20_wrapper.ngc \
implementation/ilmb_20_wrapper.ngc \
implementation/dlmb_20_wrapper.ngc \
implementation/dlmb_cntlr_20_wrapper.ngc \
implementation/dplb_cntlr_20_wrapper.ngc \
implementation/ilmb_cntlr_20_wrapper.ngc \
implementation/iplb_cntlr_20_wrapper.ngc \
implementation/ilmb_bram_20_wrapper.ngc \
implementation/dlmb_bram_20_wrapper.ngc \
implementation/microblaze_21_wrapper.ngc \
implementation/ilmb_21_wrapper.ngc \
implementation/dlmb_21_wrapper.ngc \
implementation/dlmb_cntlr_21_wrapper.ngc \
implementation/dplb_cntlr_21_wrapper.ngc \
implementation/ilmb_cntlr_21_wrapper.ngc \
implementation/iplb_cntlr_21_wrapper.ngc \
implementation/ilmb_bram_21_wrapper.ngc \
implementation/dlmb_bram_21_wrapper.ngc \
implementation/microblaze_22_wrapper.ngc \
implementation/ilmb_22_wrapper.ngc \
implementation/dlmb_22_wrapper.ngc \
implementation/dlmb_cntlr_22_wrapper.ngc \
implementation/dplb_cntlr_22_wrapper.ngc \
implementation/ilmb_cntlr_22_wrapper.ngc \
implementation/iplb_cntlr_22_wrapper.ngc \
implementation/ilmb_bram_22_wrapper.ngc \
implementation/dlmb_bram_22_wrapper.ngc \
implementation/microblaze_23_wrapper.ngc \
implementation/ilmb_23_wrapper.ngc \
implementation/dlmb_23_wrapper.ngc \
implementation/dlmb_cntlr_23_wrapper.ngc \
implementation/dplb_cntlr_23_wrapper.ngc \
implementation/ilmb_cntlr_23_wrapper.ngc \
implementation/iplb_cntlr_23_wrapper.ngc \
implementation/ilmb_bram_23_wrapper.ngc \
implementation/dlmb_bram_23_wrapper.ngc \
implementation/microblaze_24_wrapper.ngc \
implementation/ilmb_24_wrapper.ngc \
implementation/dlmb_24_wrapper.ngc \
implementation/dlmb_cntlr_24_wrapper.ngc \
implementation/dplb_cntlr_24_wrapper.ngc \
implementation/ilmb_cntlr_24_wrapper.ngc \
implementation/iplb_cntlr_24_wrapper.ngc \
implementation/ilmb_bram_24_wrapper.ngc \
implementation/dlmb_bram_24_wrapper.ngc \
implementation/extra_bram_cntlr_local3_wrapper.ngc \
implementation/extra_bram_cntlr_global3_wrapper.ngc \
implementation/extra_bram_block3_wrapper.ngc \
implementation/microblaze_25_wrapper.ngc \
implementation/ilmb_25_wrapper.ngc \
implementation/dlmb_25_wrapper.ngc \
implementation/dlmb_cntlr_25_wrapper.ngc \
implementation/dplb_cntlr_25_wrapper.ngc \
implementation/ilmb_cntlr_25_wrapper.ngc \
implementation/iplb_cntlr_25_wrapper.ngc \
implementation/ilmb_bram_25_wrapper.ngc \
implementation/dlmb_bram_25_wrapper.ngc \
implementation/microblaze_26_wrapper.ngc \
implementation/ilmb_26_wrapper.ngc \
implementation/dlmb_26_wrapper.ngc \
implementation/dlmb_cntlr_26_wrapper.ngc \
implementation/dplb_cntlr_26_wrapper.ngc \
implementation/ilmb_cntlr_26_wrapper.ngc \
implementation/iplb_cntlr_26_wrapper.ngc \
implementation/ilmb_bram_26_wrapper.ngc \
implementation/dlmb_bram_26_wrapper.ngc \
implementation/microblaze_27_wrapper.ngc \
implementation/ilmb_27_wrapper.ngc \
implementation/dlmb_27_wrapper.ngc \
implementation/dlmb_cntlr_27_wrapper.ngc \
implementation/dplb_cntlr_27_wrapper.ngc \
implementation/ilmb_cntlr_27_wrapper.ngc \
implementation/iplb_cntlr_27_wrapper.ngc \
implementation/ilmb_bram_27_wrapper.ngc \
implementation/dlmb_bram_27_wrapper.ngc \
implementation/microblaze_28_wrapper.ngc \
implementation/ilmb_28_wrapper.ngc \
implementation/dlmb_28_wrapper.ngc \
implementation/dlmb_cntlr_28_wrapper.ngc \
implementation/dplb_cntlr_28_wrapper.ngc \
implementation/ilmb_cntlr_28_wrapper.ngc \
implementation/iplb_cntlr_28_wrapper.ngc \
implementation/ilmb_bram_28_wrapper.ngc \
implementation/dlmb_bram_28_wrapper.ngc \
implementation/microblaze_29_wrapper.ngc \
implementation/ilmb_29_wrapper.ngc \
implementation/dlmb_29_wrapper.ngc \
implementation/dlmb_cntlr_29_wrapper.ngc \
implementation/dplb_cntlr_29_wrapper.ngc \
implementation/ilmb_cntlr_29_wrapper.ngc \
implementation/iplb_cntlr_29_wrapper.ngc \
implementation/ilmb_bram_29_wrapper.ngc \
implementation/dlmb_bram_29_wrapper.ngc \
implementation/microblaze_30_wrapper.ngc \
implementation/ilmb_30_wrapper.ngc \
implementation/dlmb_30_wrapper.ngc \
implementation/dlmb_cntlr_30_wrapper.ngc \
implementation/dplb_cntlr_30_wrapper.ngc \
implementation/ilmb_cntlr_30_wrapper.ngc \
implementation/iplb_cntlr_30_wrapper.ngc \
implementation/ilmb_bram_30_wrapper.ngc \
implementation/dlmb_bram_30_wrapper.ngc \
implementation/microblaze_31_wrapper.ngc \
implementation/ilmb_31_wrapper.ngc \
implementation/dlmb_31_wrapper.ngc \
implementation/dlmb_cntlr_31_wrapper.ngc \
implementation/dplb_cntlr_31_wrapper.ngc \
implementation/ilmb_cntlr_31_wrapper.ngc \
implementation/iplb_cntlr_31_wrapper.ngc \
implementation/ilmb_bram_31_wrapper.ngc \
implementation/dlmb_bram_31_wrapper.ngc \
implementation/microblaze_32_wrapper.ngc \
implementation/ilmb_32_wrapper.ngc \
implementation/dlmb_32_wrapper.ngc \
implementation/dlmb_cntlr_32_wrapper.ngc \
implementation/dplb_cntlr_32_wrapper.ngc \
implementation/ilmb_cntlr_32_wrapper.ngc \
implementation/iplb_cntlr_32_wrapper.ngc \
implementation/ilmb_bram_32_wrapper.ngc \
implementation/dlmb_bram_32_wrapper.ngc \
implementation/extra_bram_cntlr_local4_wrapper.ngc \
implementation/extra_bram_cntlr_global4_wrapper.ngc \
implementation/extra_bram_block4_wrapper.ngc \
implementation/microblaze_33_wrapper.ngc \
implementation/ilmb_33_wrapper.ngc \
implementation/dlmb_33_wrapper.ngc \
implementation/dlmb_cntlr_33_wrapper.ngc \
implementation/dplb_cntlr_33_wrapper.ngc \
implementation/ilmb_cntlr_33_wrapper.ngc \
implementation/iplb_cntlr_33_wrapper.ngc \
implementation/ilmb_bram_33_wrapper.ngc \
implementation/dlmb_bram_33_wrapper.ngc \
implementation/microblaze_34_wrapper.ngc \
implementation/ilmb_34_wrapper.ngc \
implementation/dlmb_34_wrapper.ngc \
implementation/dlmb_cntlr_34_wrapper.ngc \
implementation/dplb_cntlr_34_wrapper.ngc \
implementation/ilmb_cntlr_34_wrapper.ngc \
implementation/iplb_cntlr_34_wrapper.ngc \
implementation/ilmb_bram_34_wrapper.ngc \
implementation/dlmb_bram_34_wrapper.ngc \
implementation/microblaze_35_wrapper.ngc \
implementation/ilmb_35_wrapper.ngc \
implementation/dlmb_35_wrapper.ngc \
implementation/dlmb_cntlr_35_wrapper.ngc \
implementation/dplb_cntlr_35_wrapper.ngc \
implementation/ilmb_cntlr_35_wrapper.ngc \
implementation/iplb_cntlr_35_wrapper.ngc \
implementation/ilmb_bram_35_wrapper.ngc \
implementation/dlmb_bram_35_wrapper.ngc \
implementation/microblaze_36_wrapper.ngc \
implementation/ilmb_36_wrapper.ngc \
implementation/dlmb_36_wrapper.ngc \
implementation/dlmb_cntlr_36_wrapper.ngc \
implementation/dplb_cntlr_36_wrapper.ngc \
implementation/ilmb_cntlr_36_wrapper.ngc \
implementation/iplb_cntlr_36_wrapper.ngc \
implementation/ilmb_bram_36_wrapper.ngc \
implementation/dlmb_bram_36_wrapper.ngc \
implementation/microblaze_37_wrapper.ngc \
implementation/ilmb_37_wrapper.ngc \
implementation/dlmb_37_wrapper.ngc \
implementation/dlmb_cntlr_37_wrapper.ngc \
implementation/dplb_cntlr_37_wrapper.ngc \
implementation/ilmb_cntlr_37_wrapper.ngc \
implementation/iplb_cntlr_37_wrapper.ngc \
implementation/ilmb_bram_37_wrapper.ngc \
implementation/dlmb_bram_37_wrapper.ngc \
implementation/microblaze_38_wrapper.ngc \
implementation/ilmb_38_wrapper.ngc \
implementation/dlmb_38_wrapper.ngc \
implementation/dlmb_cntlr_38_wrapper.ngc \
implementation/dplb_cntlr_38_wrapper.ngc \
implementation/ilmb_cntlr_38_wrapper.ngc \
implementation/iplb_cntlr_38_wrapper.ngc \
implementation/ilmb_bram_38_wrapper.ngc \
implementation/dlmb_bram_38_wrapper.ngc \
implementation/microblaze_39_wrapper.ngc \
implementation/ilmb_39_wrapper.ngc \
implementation/dlmb_39_wrapper.ngc \
implementation/dlmb_cntlr_39_wrapper.ngc \
implementation/dplb_cntlr_39_wrapper.ngc \
implementation/ilmb_cntlr_39_wrapper.ngc \
implementation/iplb_cntlr_39_wrapper.ngc \
implementation/ilmb_bram_39_wrapper.ngc \
implementation/dlmb_bram_39_wrapper.ngc \
implementation/extra_bram_cntlr_local5_wrapper.ngc \
implementation/extra_bram_cntlr_global5_wrapper.ngc \
implementation/extra_bram_block5_wrapper.ngc \
implementation/rs232_uart_1_wrapper.ngc \
implementation/ddr3_sdram_wrapper.ngc \
implementation/clock_generator_0_wrapper.ngc \
implementation/mdm_0_wrapper.ngc \
implementation/proc_sys_reset_0_wrapper.ngc \
implementation/host_main_bridge_wrapper.ngc \
implementation/host_core_bridge_wrapper.ngc \
implementation/group1_main_bridge_wrapper.ngc \
implementation/group2_main_bridge_wrapper.ngc \
implementation/group3_main_bridge_wrapper.ngc \
implementation/group4_main_bridge_wrapper.ngc \
implementation/group5_main_bridge_wrapper.ngc \
implementation/main_data_instr_bridge_wrapper.ngc \
implementation/main_data_instr_bridge_1_wrapper.ngc \
implementation/main_data_instr_bridge_2_wrapper.ngc \
implementation/main_data_instr_bridge_3_wrapper.ngc \
implementation/main_data_instr_bridge_4_wrapper.ngc \
implementation/xps_central_dma_0_wrapper.ngc \
implementation/cond_vars_wrapper.ngc \
implementation/core_bus_wrapper.ngc \
implementation/main_core_bridge_wrapper.ngc \
implementation/core_main_bridge_wrapper.ngc \
implementation/scheduler_wrapper.ngc \
implementation/sync_manager_wrapper.ngc \
implementation/thread_manager_wrapper.ngc \
implementation/plb_hthread_reset_core_0_wrapper.ngc \
implementation/plb_hthreads_timer_0_wrapper.ngc \
implementation/xps_timer_0_wrapper.ngc \
implementation/xps_intc_0_wrapper.ngc

POSTSYN_NETLIST = implementation/$(SYSTEM).ngc

SYSTEM_BIT = implementation/$(SYSTEM).bit

DOWNLOAD_BIT = implementation/download.bit

SYSTEM_ACE = implementation/$(SYSTEM).ace

UCF_FILE = data/system.ucf

BMM_FILE = implementation/$(SYSTEM).bmm

BITGEN_UT_FILE = etc/bitgen.ut

XFLOW_OPT_FILE = etc/fast_runtime.opt
XFLOW_DEPENDENCY = __xps/xpsxflow.opt $(XFLOW_OPT_FILE)

XPLORER_DEPENDENCY = __xps/xplorer.opt
XPLORER_OPTIONS = -p $(DEVICE) -uc $(SYSTEM).ucf -bm $(SYSTEM).bmm -max_runs 7

FPGA_IMP_DEPENDENCY = $(BMM_FILE) $(POSTSYN_NETLIST) $(UCF_FILE) $(XFLOW_DEPENDENCY)

# cygwin path for windows
SDK_EXPORT_DIR = SDK/SDK_Export/hw
CYG_SDK_EXPORT_DIR = SDK/SDK_Export/hw
SYSTEM_HW_HANDOFF = $(SDK_EXPORT_DIR)/$(SYSTEM).xml
CYG_SYSTEM_HW_HANDOFF = $(CYG_SDK_EXPORT_DIR)/$(SYSTEM).xml
SYSTEM_HW_HANDOFF_BIT = $(SDK_EXPORT_DIR)/$(SYSTEM).bit
CYG_SYSTEM_HW_HANDOFF_BIT = $(CYG_SDK_EXPORT_DIR)/$(SYSTEM).bit
SYSTEM_HW_HANDOFF_BMM = $(SDK_EXPORT_DIR)/$(SYSTEM)_bd.bmm
CYG_SYSTEM_HW_HANDOFF_BMM = $(CYG_SDK_EXPORT_DIR)/$(SYSTEM)_bd.bmm
SYSTEM_HW_HANDOFF_DEP = $(CYG_SYSTEM_HW_HANDOFF) $(CYG_SYSTEM_HW_HANDOFF_BIT) $(CYG_SYSTEM_HW_HANDOFF_BMM)

#################################################################
# SOFTWARE APPLICATION CORETEST
#################################################################

CORETEST_SOURCES = CoreTest.c 

CORETEST_HEADERS = 

CORETEST_CC = mb-gcc
CORETEST_CC_SIZE = mb-size
CORETEST_CC_OPT = -O2
CORETEST_CFLAGS = 
CORETEST_CC_SEARCH = # -B
CORETEST_LIBPATH = -L./microblaze_0/lib/ # -L
CORETEST_INCLUDES = -I./microblaze_0/include/ # -I
CORETEST_LFLAGS = # -l
CORETEST_LINKER_SCRIPT = 
CORETEST_LINKER_SCRIPT_FLAG = #-T $(CORETEST_LINKER_SCRIPT) 
CORETEST_CC_DEBUG_FLAG =  -g 
CORETEST_CC_PROFILE_FLAG = # -pg
CORETEST_CC_GLOBPTR_FLAG= # -mxl-gp-opt
CORETEST_MODE = executable
CORETEST_LIBG_OPT = -$(CORETEST_MODE) microblaze_0
CORETEST_CC_INFERRED_FLAGS= -mno-xl-soft-mul -mhard-float -mxl-barrel-shift -mno-xl-soft-div -mcpu=v8.00.a 
CORETEST_CC_START_ADDR_FLAG=  # -Wl,-defsym -Wl,_TEXT_START_ADDR=
CORETEST_CC_STACK_SIZE_FLAG=  # -Wl,-defsym -Wl,_STACK_SIZE=
CORETEST_CC_HEAP_SIZE_FLAG=  # -Wl,-defsym -Wl,_HEAP_SIZE=
CORETEST_OTHER_CC_FLAGS= $(CORETEST_CC_GLOBPTR_FLAG)  \
                  $(CORETEST_CC_START_ADDR_FLAG) $(CORETEST_CC_STACK_SIZE_FLAG) $(CORETEST_CC_HEAP_SIZE_FLAG)  \
                  $(CORETEST_CC_INFERRED_FLAGS)  \
                  $(CORETEST_LINKER_SCRIPT_FLAG) $(CORETEST_CC_DEBUG_FLAG) $(CORETEST_CC_PROFILE_FLAG) 

#################################################################
# SOFTWARE APPLICATION MB_HWT1
#################################################################

MB_HWT1_SOURCES = my_sw/hw_thread.c my_sw/proc_hw_thread.c 

MB_HWT1_HEADERS = my_sw/proc_hw_thread.h 

MB_HWT1_CC = mb-gcc
MB_HWT1_CC_SIZE = mb-size
MB_HWT1_CC_OPT = -O2
MB_HWT1_CFLAGS = 
MB_HWT1_CC_SEARCH = # -B
MB_HWT1_LIBPATH = -L./microblaze_1/lib/ # -L
MB_HWT1_INCLUDES = -I./microblaze_1/include/  -Imy_sw/ # -I
MB_HWT1_LFLAGS = # -l
MB_HWT1_LINKER_SCRIPT = my_sw/fast_lmb_linkerscript.ld
MB_HWT1_LINKER_SCRIPT_FLAG = -T $(MB_HWT1_LINKER_SCRIPT) 
MB_HWT1_CC_DEBUG_FLAG =  -g 
MB_HWT1_CC_PROFILE_FLAG = # -pg
MB_HWT1_CC_GLOBPTR_FLAG= # -mxl-gp-opt
MB_HWT1_MODE = executable
MB_HWT1_LIBG_OPT = -$(MB_HWT1_MODE) microblaze_1
MB_HWT1_CC_INFERRED_FLAGS= -mno-xl-soft-mul -mhard-float -mxl-barrel-shift -mno-xl-soft-div -mcpu=v8.00.a 
MB_HWT1_CC_START_ADDR_FLAG=  #  # -Wl,-defsym -Wl,_TEXT_START_ADDR=
MB_HWT1_CC_STACK_SIZE_FLAG=  #  # -Wl,-defsym -Wl,_STACK_SIZE=
MB_HWT1_CC_HEAP_SIZE_FLAG=  #  # -Wl,-defsym -Wl,_HEAP_SIZE=
MB_HWT1_OTHER_CC_FLAGS= $(MB_HWT1_CC_GLOBPTR_FLAG)  \
                  $(MB_HWT1_CC_START_ADDR_FLAG) $(MB_HWT1_CC_STACK_SIZE_FLAG) $(MB_HWT1_CC_HEAP_SIZE_FLAG)  \
                  $(MB_HWT1_CC_INFERRED_FLAGS)  \
                  $(MB_HWT1_LINKER_SCRIPT_FLAG) $(MB_HWT1_CC_DEBUG_FLAG) $(MB_HWT1_CC_PROFILE_FLAG) 

#################################################################
# SOFTWARE APPLICATION MB_HWT2
#################################################################

MB_HWT2_SOURCES = my_sw/hw_thread.c my_sw/proc_hw_thread.c 

MB_HWT2_HEADERS = my_sw/proc_hw_thread.h 

MB_HWT2_CC = mb-gcc
MB_HWT2_CC_SIZE = mb-size
MB_HWT2_CC_OPT = -O2
MB_HWT2_CFLAGS = 
MB_HWT2_CC_SEARCH = # -B
MB_HWT2_LIBPATH = -L./microblaze_2/lib/ # -L
MB_HWT2_INCLUDES = -I./microblaze_2/include/  -Imy_sw/ # -I
MB_HWT2_LFLAGS = # -l
MB_HWT2_LINKER_SCRIPT = my_sw/fast_lmb_linkerscript.ld
MB_HWT2_LINKER_SCRIPT_FLAG = -T $(MB_HWT2_LINKER_SCRIPT) 
MB_HWT2_CC_DEBUG_FLAG =  -g 
MB_HWT2_CC_PROFILE_FLAG = # -pg
MB_HWT2_CC_GLOBPTR_FLAG= # -mxl-gp-opt
MB_HWT2_MODE = executable
MB_HWT2_LIBG_OPT = -$(MB_HWT2_MODE) microblaze_2
MB_HWT2_CC_INFERRED_FLAGS= -mno-xl-soft-mul -mhard-float -mxl-barrel-shift -mno-xl-soft-div -mcpu=v8.00.a 
MB_HWT2_CC_START_ADDR_FLAG=  #  # -Wl,-defsym -Wl,_TEXT_START_ADDR=
MB_HWT2_CC_STACK_SIZE_FLAG=  #  # -Wl,-defsym -Wl,_STACK_SIZE=
MB_HWT2_CC_HEAP_SIZE_FLAG=  #  # -Wl,-defsym -Wl,_HEAP_SIZE=
MB_HWT2_OTHER_CC_FLAGS= $(MB_HWT2_CC_GLOBPTR_FLAG)  \
                  $(MB_HWT2_CC_START_ADDR_FLAG) $(MB_HWT2_CC_STACK_SIZE_FLAG) $(MB_HWT2_CC_HEAP_SIZE_FLAG)  \
                  $(MB_HWT2_CC_INFERRED_FLAGS)  \
                  $(MB_HWT2_LINKER_SCRIPT_FLAG) $(MB_HWT2_CC_DEBUG_FLAG) $(MB_HWT2_CC_PROFILE_FLAG) 

#################################################################
# SOFTWARE APPLICATION MB_HWT3
#################################################################

MB_HWT3_SOURCES = my_sw/proc_hw_thread.c my_sw/hw_thread.c 

MB_HWT3_HEADERS = my_sw/proc_hw_thread.h 

MB_HWT3_CC = mb-gcc
MB_HWT3_CC_SIZE = mb-size
MB_HWT3_CC_OPT = -O2
MB_HWT3_CFLAGS = 
MB_HWT3_CC_SEARCH = # -B
MB_HWT3_LIBPATH = -L./microblaze_3/lib/ # -L
MB_HWT3_INCLUDES = -I./microblaze_3/include/  -Imy_sw/ # -I
MB_HWT3_LFLAGS = # -l
MB_HWT3_LINKER_SCRIPT = my_sw/fast_lmb_linkerscript.ld
MB_HWT3_LINKER_SCRIPT_FLAG = -T $(MB_HWT3_LINKER_SCRIPT) 
MB_HWT3_CC_DEBUG_FLAG =  -g 
MB_HWT3_CC_PROFILE_FLAG = # -pg
MB_HWT3_CC_GLOBPTR_FLAG= # -mxl-gp-opt
MB_HWT3_MODE = executable
MB_HWT3_LIBG_OPT = -$(MB_HWT3_MODE) microblaze_3
MB_HWT3_CC_INFERRED_FLAGS= -mno-xl-soft-mul -mhard-float -mxl-barrel-shift -mno-xl-soft-div -mcpu=v8.00.a 
MB_HWT3_CC_START_ADDR_FLAG=  #  # -Wl,-defsym -Wl,_TEXT_START_ADDR=
MB_HWT3_CC_STACK_SIZE_FLAG=  #  # -Wl,-defsym -Wl,_STACK_SIZE=
MB_HWT3_CC_HEAP_SIZE_FLAG=  #  # -Wl,-defsym -Wl,_HEAP_SIZE=
MB_HWT3_OTHER_CC_FLAGS= $(MB_HWT3_CC_GLOBPTR_FLAG)  \
                  $(MB_HWT3_CC_START_ADDR_FLAG) $(MB_HWT3_CC_STACK_SIZE_FLAG) $(MB_HWT3_CC_HEAP_SIZE_FLAG)  \
                  $(MB_HWT3_CC_INFERRED_FLAGS)  \
                  $(MB_HWT3_LINKER_SCRIPT_FLAG) $(MB_HWT3_CC_DEBUG_FLAG) $(MB_HWT3_CC_PROFILE_FLAG) 

#################################################################
# SOFTWARE APPLICATION MB_HWT4
#################################################################

MB_HWT4_SOURCES = my_sw/hw_thread.c my_sw/proc_hw_thread.c 

MB_HWT4_HEADERS = my_sw/proc_hw_thread.h 

MB_HWT4_CC = mb-gcc
MB_HWT4_CC_SIZE = mb-size
MB_HWT4_CC_OPT = -O2
MB_HWT4_CFLAGS = 
MB_HWT4_CC_SEARCH = # -B
MB_HWT4_LIBPATH = -L./microblaze_4/lib/ # -L
MB_HWT4_INCLUDES = -I./microblaze_4/include/  -Imy_sw/ # -I
MB_HWT4_LFLAGS = # -l
MB_HWT4_LINKER_SCRIPT = my_sw/fast_lmb_linkerscript.ld
MB_HWT4_LINKER_SCRIPT_FLAG = -T $(MB_HWT4_LINKER_SCRIPT) 
MB_HWT4_CC_DEBUG_FLAG =  -g 
MB_HWT4_CC_PROFILE_FLAG = # -pg
MB_HWT4_CC_GLOBPTR_FLAG= # -mxl-gp-opt
MB_HWT4_MODE = executable
MB_HWT4_LIBG_OPT = -$(MB_HWT4_MODE) microblaze_4
MB_HWT4_CC_INFERRED_FLAGS= -mno-xl-soft-mul -mhard-float -mxl-barrel-shift -mno-xl-soft-div -mcpu=v8.00.a 
MB_HWT4_CC_START_ADDR_FLAG=  #  # -Wl,-defsym -Wl,_TEXT_START_ADDR=
MB_HWT4_CC_STACK_SIZE_FLAG=  #  # -Wl,-defsym -Wl,_STACK_SIZE=
MB_HWT4_CC_HEAP_SIZE_FLAG=  #  # -Wl,-defsym -Wl,_HEAP_SIZE=
MB_HWT4_OTHER_CC_FLAGS= $(MB_HWT4_CC_GLOBPTR_FLAG)  \
                  $(MB_HWT4_CC_START_ADDR_FLAG) $(MB_HWT4_CC_STACK_SIZE_FLAG) $(MB_HWT4_CC_HEAP_SIZE_FLAG)  \
                  $(MB_HWT4_CC_INFERRED_FLAGS)  \
                  $(MB_HWT4_LINKER_SCRIPT_FLAG) $(MB_HWT4_CC_DEBUG_FLAG) $(MB_HWT4_CC_PROFILE_FLAG) 

#################################################################
# SOFTWARE APPLICATION MB_HWT5
#################################################################

MB_HWT5_SOURCES = my_sw/hw_thread.c my_sw/proc_hw_thread.c 

MB_HWT5_HEADERS = my_sw/proc_hw_thread.h 

MB_HWT5_CC = mb-gcc
MB_HWT5_CC_SIZE = mb-size
MB_HWT5_CC_OPT = -O2
MB_HWT5_CFLAGS = 
MB_HWT5_CC_SEARCH = # -B
MB_HWT5_LIBPATH = -L./microblaze_5/lib/ # -L
MB_HWT5_INCLUDES = -I./microblaze_5/include/  -Imy_sw/ # -I
MB_HWT5_LFLAGS = # -l
MB_HWT5_LINKER_SCRIPT = my_sw/fast_lmb_linkerscript.ld
MB_HWT5_LINKER_SCRIPT_FLAG = -T $(MB_HWT5_LINKER_SCRIPT) 
MB_HWT5_CC_DEBUG_FLAG =  -g 
MB_HWT5_CC_PROFILE_FLAG = # -pg
MB_HWT5_CC_GLOBPTR_FLAG= # -mxl-gp-opt
MB_HWT5_MODE = executable
MB_HWT5_LIBG_OPT = -$(MB_HWT5_MODE) microblaze_5
MB_HWT5_CC_INFERRED_FLAGS= -mno-xl-soft-mul -mhard-float -mxl-barrel-shift -mno-xl-soft-div -mcpu=v8.00.a 
MB_HWT5_CC_START_ADDR_FLAG=  #  # -Wl,-defsym -Wl,_TEXT_START_ADDR=
MB_HWT5_CC_STACK_SIZE_FLAG=  #  # -Wl,-defsym -Wl,_STACK_SIZE=
MB_HWT5_CC_HEAP_SIZE_FLAG=  #  # -Wl,-defsym -Wl,_HEAP_SIZE=
MB_HWT5_OTHER_CC_FLAGS= $(MB_HWT5_CC_GLOBPTR_FLAG)  \
                  $(MB_HWT5_CC_START_ADDR_FLAG) $(MB_HWT5_CC_STACK_SIZE_FLAG) $(MB_HWT5_CC_HEAP_SIZE_FLAG)  \
                  $(MB_HWT5_CC_INFERRED_FLAGS)  \
                  $(MB_HWT5_LINKER_SCRIPT_FLAG) $(MB_HWT5_CC_DEBUG_FLAG) $(MB_HWT5_CC_PROFILE_FLAG) 

#################################################################
# SOFTWARE APPLICATION MB_HWT6
#################################################################

MB_HWT6_SOURCES = my_sw/hw_thread.c my_sw/proc_hw_thread.c 

MB_HWT6_HEADERS = my_sw/proc_hw_thread.h 

MB_HWT6_CC = mb-gcc
MB_HWT6_CC_SIZE = mb-size
MB_HWT6_CC_OPT = -O2
MB_HWT6_CFLAGS = 
MB_HWT6_CC_SEARCH = # -B
MB_HWT6_LIBPATH = -L./microblaze_6/lib/ # -L
MB_HWT6_INCLUDES = -I./microblaze_6/include/  -Imy_sw/ # -I
MB_HWT6_LFLAGS = # -l
MB_HWT6_LINKER_SCRIPT = my_sw/fast_lmb_linkerscript.ld
MB_HWT6_LINKER_SCRIPT_FLAG = -T $(MB_HWT6_LINKER_SCRIPT) 
MB_HWT6_CC_DEBUG_FLAG =  -g 
MB_HWT6_CC_PROFILE_FLAG = # -pg
MB_HWT6_CC_GLOBPTR_FLAG= # -mxl-gp-opt
MB_HWT6_MODE = executable
MB_HWT6_LIBG_OPT = -$(MB_HWT6_MODE) microblaze_6
MB_HWT6_CC_INFERRED_FLAGS= -mno-xl-soft-mul -mhard-float -mxl-barrel-shift -mno-xl-soft-div -mcpu=v8.00.a 
MB_HWT6_CC_START_ADDR_FLAG=  #  # -Wl,-defsym -Wl,_TEXT_START_ADDR=
MB_HWT6_CC_STACK_SIZE_FLAG=  #  # -Wl,-defsym -Wl,_STACK_SIZE=
MB_HWT6_CC_HEAP_SIZE_FLAG=  #  # -Wl,-defsym -Wl,_HEAP_SIZE=
MB_HWT6_OTHER_CC_FLAGS= $(MB_HWT6_CC_GLOBPTR_FLAG)  \
                  $(MB_HWT6_CC_START_ADDR_FLAG) $(MB_HWT6_CC_STACK_SIZE_FLAG) $(MB_HWT6_CC_HEAP_SIZE_FLAG)  \
                  $(MB_HWT6_CC_INFERRED_FLAGS)  \
                  $(MB_HWT6_LINKER_SCRIPT_FLAG) $(MB_HWT6_CC_DEBUG_FLAG) $(MB_HWT6_CC_PROFILE_FLAG) 

#################################################################
# SOFTWARE APPLICATION MB_HWT7
#################################################################

MB_HWT7_SOURCES = my_sw/hw_thread.c my_sw/proc_hw_thread.c 

MB_HWT7_HEADERS = my_sw/proc_hw_thread.h 

MB_HWT7_CC = mb-gcc
MB_HWT7_CC_SIZE = mb-size
MB_HWT7_CC_OPT = -O2
MB_HWT7_CFLAGS = 
MB_HWT7_CC_SEARCH = # -B
MB_HWT7_LIBPATH = -L./microblaze_7/lib/ # -L
MB_HWT7_INCLUDES = -I./microblaze_7/include/  -Imy_sw/ # -I
MB_HWT7_LFLAGS = # -l
MB_HWT7_LINKER_SCRIPT = my_sw/fast_lmb_linkerscript.ld
MB_HWT7_LINKER_SCRIPT_FLAG = -T $(MB_HWT7_LINKER_SCRIPT) 
MB_HWT7_CC_DEBUG_FLAG =  -g 
MB_HWT7_CC_PROFILE_FLAG = # -pg
MB_HWT7_CC_GLOBPTR_FLAG= # -mxl-gp-opt
MB_HWT7_MODE = executable
MB_HWT7_LIBG_OPT = -$(MB_HWT7_MODE) microblaze_7
MB_HWT7_CC_INFERRED_FLAGS= -mno-xl-soft-mul -mhard-float -mxl-barrel-shift -mno-xl-soft-div -mcpu=v8.00.a 
MB_HWT7_CC_START_ADDR_FLAG=  #  # -Wl,-defsym -Wl,_TEXT_START_ADDR=
MB_HWT7_CC_STACK_SIZE_FLAG=  #  # -Wl,-defsym -Wl,_STACK_SIZE=
MB_HWT7_CC_HEAP_SIZE_FLAG=  #  # -Wl,-defsym -Wl,_HEAP_SIZE=
MB_HWT7_OTHER_CC_FLAGS= $(MB_HWT7_CC_GLOBPTR_FLAG)  \
                  $(MB_HWT7_CC_START_ADDR_FLAG) $(MB_HWT7_CC_STACK_SIZE_FLAG) $(MB_HWT7_CC_HEAP_SIZE_FLAG)  \
                  $(MB_HWT7_CC_INFERRED_FLAGS)  \
                  $(MB_HWT7_LINKER_SCRIPT_FLAG) $(MB_HWT7_CC_DEBUG_FLAG) $(MB_HWT7_CC_PROFILE_FLAG) 

#################################################################
# SOFTWARE APPLICATION MB_HWT8
#################################################################

MB_HWT8_SOURCES = my_sw/hw_thread.c my_sw/proc_hw_thread.c 

MB_HWT8_HEADERS = my_sw/proc_hw_thread.h 

MB_HWT8_CC = mb-gcc
MB_HWT8_CC_SIZE = mb-size
MB_HWT8_CC_OPT = -O2
MB_HWT8_CFLAGS = 
MB_HWT8_CC_SEARCH = # -B
MB_HWT8_LIBPATH = -L./microblaze_8/lib/ # -L
MB_HWT8_INCLUDES = -I./microblaze_8/include/  -Imy_sw/ # -I
MB_HWT8_LFLAGS = # -l
MB_HWT8_LINKER_SCRIPT = my_sw/fast_lmb_linkerscript.ld
MB_HWT8_LINKER_SCRIPT_FLAG = -T $(MB_HWT8_LINKER_SCRIPT) 
MB_HWT8_CC_DEBUG_FLAG =  -g 
MB_HWT8_CC_PROFILE_FLAG = # -pg
MB_HWT8_CC_GLOBPTR_FLAG= # -mxl-gp-opt
MB_HWT8_MODE = executable
MB_HWT8_LIBG_OPT = -$(MB_HWT8_MODE) microblaze_8
MB_HWT8_CC_INFERRED_FLAGS= -mno-xl-soft-mul -mhard-float -mxl-barrel-shift -mno-xl-soft-div -mcpu=v8.00.a 
MB_HWT8_CC_START_ADDR_FLAG=  #  # -Wl,-defsym -Wl,_TEXT_START_ADDR=
MB_HWT8_CC_STACK_SIZE_FLAG=  #  # -Wl,-defsym -Wl,_STACK_SIZE=
MB_HWT8_CC_HEAP_SIZE_FLAG=  #  # -Wl,-defsym -Wl,_HEAP_SIZE=
MB_HWT8_OTHER_CC_FLAGS= $(MB_HWT8_CC_GLOBPTR_FLAG)  \
                  $(MB_HWT8_CC_START_ADDR_FLAG) $(MB_HWT8_CC_STACK_SIZE_FLAG) $(MB_HWT8_CC_HEAP_SIZE_FLAG)  \
                  $(MB_HWT8_CC_INFERRED_FLAGS)  \
                  $(MB_HWT8_LINKER_SCRIPT_FLAG) $(MB_HWT8_CC_DEBUG_FLAG) $(MB_HWT8_CC_PROFILE_FLAG) 

#################################################################
# SOFTWARE APPLICATION MB_HWT9
#################################################################

MB_HWT9_SOURCES = my_sw/hw_thread.c my_sw/proc_hw_thread.c 

MB_HWT9_HEADERS = my_sw/proc_hw_thread.h 

MB_HWT9_CC = mb-gcc
MB_HWT9_CC_SIZE = mb-size
MB_HWT9_CC_OPT = -O2
MB_HWT9_CFLAGS = 
MB_HWT9_CC_SEARCH = # -B
MB_HWT9_LIBPATH = -L./microblaze_9/lib/ # -L
MB_HWT9_INCLUDES = -I./microblaze_9/include/  -Imy_sw/ # -I
MB_HWT9_LFLAGS = # -l
MB_HWT9_LINKER_SCRIPT = my_sw/fast_lmb_linkerscript.ld
MB_HWT9_LINKER_SCRIPT_FLAG = -T $(MB_HWT9_LINKER_SCRIPT) 
MB_HWT9_CC_DEBUG_FLAG =  -g 
MB_HWT9_CC_PROFILE_FLAG = # -pg
MB_HWT9_CC_GLOBPTR_FLAG= # -mxl-gp-opt
MB_HWT9_MODE = executable
MB_HWT9_LIBG_OPT = -$(MB_HWT9_MODE) microblaze_9
MB_HWT9_CC_INFERRED_FLAGS= -mno-xl-soft-mul -mhard-float -mxl-barrel-shift -mno-xl-soft-div -mcpu=v8.00.a 
MB_HWT9_CC_START_ADDR_FLAG=  #  # -Wl,-defsym -Wl,_TEXT_START_ADDR=
MB_HWT9_CC_STACK_SIZE_FLAG=  #  # -Wl,-defsym -Wl,_STACK_SIZE=
MB_HWT9_CC_HEAP_SIZE_FLAG=  #  # -Wl,-defsym -Wl,_HEAP_SIZE=
MB_HWT9_OTHER_CC_FLAGS= $(MB_HWT9_CC_GLOBPTR_FLAG)  \
                  $(MB_HWT9_CC_START_ADDR_FLAG) $(MB_HWT9_CC_STACK_SIZE_FLAG) $(MB_HWT9_CC_HEAP_SIZE_FLAG)  \
                  $(MB_HWT9_CC_INFERRED_FLAGS)  \
                  $(MB_HWT9_LINKER_SCRIPT_FLAG) $(MB_HWT9_CC_DEBUG_FLAG) $(MB_HWT9_CC_PROFILE_FLAG) 

#################################################################
# SOFTWARE APPLICATION MB_HWT10
#################################################################

MB_HWT10_SOURCES = my_sw/hw_thread.c my_sw/proc_hw_thread.c 

MB_HWT10_HEADERS = my_sw/proc_hw_thread.h 

MB_HWT10_CC = mb-gcc
MB_HWT10_CC_SIZE = mb-size
MB_HWT10_CC_OPT = -O2
MB_HWT10_CFLAGS = 
MB_HWT10_CC_SEARCH = # -B
MB_HWT10_LIBPATH = -L./microblaze_10/lib/ # -L
MB_HWT10_INCLUDES = -I./microblaze_10/include/  -Imy_sw/ # -I
MB_HWT10_LFLAGS = # -l
MB_HWT10_LINKER_SCRIPT = my_sw/fast_lmb_linkerscript.ld
MB_HWT10_LINKER_SCRIPT_FLAG = -T $(MB_HWT10_LINKER_SCRIPT) 
MB_HWT10_CC_DEBUG_FLAG =  -g 
MB_HWT10_CC_PROFILE_FLAG = # -pg
MB_HWT10_CC_GLOBPTR_FLAG= # -mxl-gp-opt
MB_HWT10_MODE = executable
MB_HWT10_LIBG_OPT = -$(MB_HWT10_MODE) microblaze_10
MB_HWT10_CC_INFERRED_FLAGS= -mno-xl-soft-mul -mhard-float -mxl-barrel-shift -mno-xl-soft-div -mcpu=v8.00.a 
MB_HWT10_CC_START_ADDR_FLAG=  #  # -Wl,-defsym -Wl,_TEXT_START_ADDR=
MB_HWT10_CC_STACK_SIZE_FLAG=  #  # -Wl,-defsym -Wl,_STACK_SIZE=
MB_HWT10_CC_HEAP_SIZE_FLAG=  #  # -Wl,-defsym -Wl,_HEAP_SIZE=
MB_HWT10_OTHER_CC_FLAGS= $(MB_HWT10_CC_GLOBPTR_FLAG)  \
                  $(MB_HWT10_CC_START_ADDR_FLAG) $(MB_HWT10_CC_STACK_SIZE_FLAG) $(MB_HWT10_CC_HEAP_SIZE_FLAG)  \
                  $(MB_HWT10_CC_INFERRED_FLAGS)  \
                  $(MB_HWT10_LINKER_SCRIPT_FLAG) $(MB_HWT10_CC_DEBUG_FLAG) $(MB_HWT10_CC_PROFILE_FLAG) 

#################################################################
# SOFTWARE APPLICATION MB_HWT11
#################################################################

MB_HWT11_SOURCES = my_sw/hw_thread.c my_sw/proc_hw_thread.c 

MB_HWT11_HEADERS = my_sw/proc_hw_thread.h 

MB_HWT11_CC = mb-gcc
MB_HWT11_CC_SIZE = mb-size
MB_HWT11_CC_OPT = -O2
MB_HWT11_CFLAGS = 
MB_HWT11_CC_SEARCH = # -B
MB_HWT11_LIBPATH = -L./microblaze_11/lib/ # -L
MB_HWT11_INCLUDES = -I./microblaze_11/include/  -Imy_sw/ # -I
MB_HWT11_LFLAGS = # -l
MB_HWT11_LINKER_SCRIPT = my_sw/fast_lmb_linkerscript.ld
MB_HWT11_LINKER_SCRIPT_FLAG = -T $(MB_HWT11_LINKER_SCRIPT) 
MB_HWT11_CC_DEBUG_FLAG =  -g 
MB_HWT11_CC_PROFILE_FLAG = # -pg
MB_HWT11_CC_GLOBPTR_FLAG= # -mxl-gp-opt
MB_HWT11_MODE = executable
MB_HWT11_LIBG_OPT = -$(MB_HWT11_MODE) microblaze_11
MB_HWT11_CC_INFERRED_FLAGS= -mno-xl-soft-mul -mhard-float -mxl-barrel-shift -mno-xl-soft-div -mcpu=v8.00.a 
MB_HWT11_CC_START_ADDR_FLAG=  #  # -Wl,-defsym -Wl,_TEXT_START_ADDR=
MB_HWT11_CC_STACK_SIZE_FLAG=  #  # -Wl,-defsym -Wl,_STACK_SIZE=
MB_HWT11_CC_HEAP_SIZE_FLAG=  #  # -Wl,-defsym -Wl,_HEAP_SIZE=
MB_HWT11_OTHER_CC_FLAGS= $(MB_HWT11_CC_GLOBPTR_FLAG)  \
                  $(MB_HWT11_CC_START_ADDR_FLAG) $(MB_HWT11_CC_STACK_SIZE_FLAG) $(MB_HWT11_CC_HEAP_SIZE_FLAG)  \
                  $(MB_HWT11_CC_INFERRED_FLAGS)  \
                  $(MB_HWT11_LINKER_SCRIPT_FLAG) $(MB_HWT11_CC_DEBUG_FLAG) $(MB_HWT11_CC_PROFILE_FLAG) 

#################################################################
# SOFTWARE APPLICATION MB_HWT12
#################################################################

MB_HWT12_SOURCES = my_sw/hw_thread.c my_sw/proc_hw_thread.c 

MB_HWT12_HEADERS = my_sw/proc_hw_thread.h 

MB_HWT12_CC = mb-gcc
MB_HWT12_CC_SIZE = mb-size
MB_HWT12_CC_OPT = -O2
MB_HWT12_CFLAGS = 
MB_HWT12_CC_SEARCH = # -B
MB_HWT12_LIBPATH = -L./microblaze_12/lib/ # -L
MB_HWT12_INCLUDES = -I./microblaze_12/include/  -Imy_sw/ # -I
MB_HWT12_LFLAGS = # -l
MB_HWT12_LINKER_SCRIPT = my_sw/fast_lmb_linkerscript.ld
MB_HWT12_LINKER_SCRIPT_FLAG = -T $(MB_HWT12_LINKER_SCRIPT) 
MB_HWT12_CC_DEBUG_FLAG =  -g 
MB_HWT12_CC_PROFILE_FLAG = # -pg
MB_HWT12_CC_GLOBPTR_FLAG= # -mxl-gp-opt
MB_HWT12_MODE = executable
MB_HWT12_LIBG_OPT = -$(MB_HWT12_MODE) microblaze_12
MB_HWT12_CC_INFERRED_FLAGS= -mno-xl-soft-mul -mhard-float -mxl-barrel-shift -mno-xl-soft-div -mcpu=v8.00.a 
MB_HWT12_CC_START_ADDR_FLAG=  #  # -Wl,-defsym -Wl,_TEXT_START_ADDR=
MB_HWT12_CC_STACK_SIZE_FLAG=  #  # -Wl,-defsym -Wl,_STACK_SIZE=
MB_HWT12_CC_HEAP_SIZE_FLAG=  #  # -Wl,-defsym -Wl,_HEAP_SIZE=
MB_HWT12_OTHER_CC_FLAGS= $(MB_HWT12_CC_GLOBPTR_FLAG)  \
                  $(MB_HWT12_CC_START_ADDR_FLAG) $(MB_HWT12_CC_STACK_SIZE_FLAG) $(MB_HWT12_CC_HEAP_SIZE_FLAG)  \
                  $(MB_HWT12_CC_INFERRED_FLAGS)  \
                  $(MB_HWT12_LINKER_SCRIPT_FLAG) $(MB_HWT12_CC_DEBUG_FLAG) $(MB_HWT12_CC_PROFILE_FLAG) 

#################################################################
# SOFTWARE APPLICATION MB_HWT13
#################################################################

MB_HWT13_SOURCES = my_sw/hw_thread.c my_sw/proc_hw_thread.c 

MB_HWT13_HEADERS = my_sw/proc_hw_thread.h 

MB_HWT13_CC = mb-gcc
MB_HWT13_CC_SIZE = mb-size
MB_HWT13_CC_OPT = -O2
MB_HWT13_CFLAGS = 
MB_HWT13_CC_SEARCH = # -B
MB_HWT13_LIBPATH = -L./microblaze_13/lib/ # -L
MB_HWT13_INCLUDES = -I./microblaze_13/include/  -Imy_sw/ # -I
MB_HWT13_LFLAGS = # -l
MB_HWT13_LINKER_SCRIPT = my_sw/fast_lmb_linkerscript.ld
MB_HWT13_LINKER_SCRIPT_FLAG = -T $(MB_HWT13_LINKER_SCRIPT) 
MB_HWT13_CC_DEBUG_FLAG =  -g 
MB_HWT13_CC_PROFILE_FLAG = # -pg
MB_HWT13_CC_GLOBPTR_FLAG= # -mxl-gp-opt
MB_HWT13_MODE = executable
MB_HWT13_LIBG_OPT = -$(MB_HWT13_MODE) microblaze_13
MB_HWT13_CC_INFERRED_FLAGS= -mno-xl-soft-mul -mhard-float -mxl-barrel-shift -mno-xl-soft-div -mcpu=v8.00.a 
MB_HWT13_CC_START_ADDR_FLAG=  #  # -Wl,-defsym -Wl,_TEXT_START_ADDR=
MB_HWT13_CC_STACK_SIZE_FLAG=  #  # -Wl,-defsym -Wl,_STACK_SIZE=
MB_HWT13_CC_HEAP_SIZE_FLAG=  #  # -Wl,-defsym -Wl,_HEAP_SIZE=
MB_HWT13_OTHER_CC_FLAGS= $(MB_HWT13_CC_GLOBPTR_FLAG)  \
                  $(MB_HWT13_CC_START_ADDR_FLAG) $(MB_HWT13_CC_STACK_SIZE_FLAG) $(MB_HWT13_CC_HEAP_SIZE_FLAG)  \
                  $(MB_HWT13_CC_INFERRED_FLAGS)  \
                  $(MB_HWT13_LINKER_SCRIPT_FLAG) $(MB_HWT13_CC_DEBUG_FLAG) $(MB_HWT13_CC_PROFILE_FLAG) 

#################################################################
# SOFTWARE APPLICATION MB_HWT14
#################################################################

MB_HWT14_SOURCES = my_sw/hw_thread.c my_sw/proc_hw_thread.c 

MB_HWT14_HEADERS = my_sw/proc_hw_thread.h 

MB_HWT14_CC = mb-gcc
MB_HWT14_CC_SIZE = mb-size
MB_HWT14_CC_OPT = -O2
MB_HWT14_CFLAGS = 
MB_HWT14_CC_SEARCH = # -B
MB_HWT14_LIBPATH = -L./microblaze_14/lib/ # -L
MB_HWT14_INCLUDES = -I./microblaze_14/include/  -Imy_sw/ # -I
MB_HWT14_LFLAGS = # -l
MB_HWT14_LINKER_SCRIPT = my_sw/fast_lmb_linkerscript.ld
MB_HWT14_LINKER_SCRIPT_FLAG = -T $(MB_HWT14_LINKER_SCRIPT) 
MB_HWT14_CC_DEBUG_FLAG =  -g 
MB_HWT14_CC_PROFILE_FLAG = # -pg
MB_HWT14_CC_GLOBPTR_FLAG= # -mxl-gp-opt
MB_HWT14_MODE = executable
MB_HWT14_LIBG_OPT = -$(MB_HWT14_MODE) microblaze_14
MB_HWT14_CC_INFERRED_FLAGS= -mno-xl-soft-mul -mhard-float -mxl-barrel-shift -mno-xl-soft-div -mcpu=v8.00.a 
MB_HWT14_CC_START_ADDR_FLAG=  #  # -Wl,-defsym -Wl,_TEXT_START_ADDR=
MB_HWT14_CC_STACK_SIZE_FLAG=  #  # -Wl,-defsym -Wl,_STACK_SIZE=
MB_HWT14_CC_HEAP_SIZE_FLAG=  #  # -Wl,-defsym -Wl,_HEAP_SIZE=
MB_HWT14_OTHER_CC_FLAGS= $(MB_HWT14_CC_GLOBPTR_FLAG)  \
                  $(MB_HWT14_CC_START_ADDR_FLAG) $(MB_HWT14_CC_STACK_SIZE_FLAG) $(MB_HWT14_CC_HEAP_SIZE_FLAG)  \
                  $(MB_HWT14_CC_INFERRED_FLAGS)  \
                  $(MB_HWT14_LINKER_SCRIPT_FLAG) $(MB_HWT14_CC_DEBUG_FLAG) $(MB_HWT14_CC_PROFILE_FLAG) 

#################################################################
# SOFTWARE APPLICATION MB_HWT15
#################################################################

MB_HWT15_SOURCES = my_sw/hw_thread.c my_sw/proc_hw_thread.c 

MB_HWT15_HEADERS = my_sw/proc_hw_thread.h 

MB_HWT15_CC = mb-gcc
MB_HWT15_CC_SIZE = mb-size
MB_HWT15_CC_OPT = -O2
MB_HWT15_CFLAGS = 
MB_HWT15_CC_SEARCH = # -B
MB_HWT15_LIBPATH = -L./microblaze_15/lib/ # -L
MB_HWT15_INCLUDES = -I./microblaze_15/include/  -Imy_sw/ # -I
MB_HWT15_LFLAGS = # -l
MB_HWT15_LINKER_SCRIPT = my_sw/fast_lmb_linkerscript.ld
MB_HWT15_LINKER_SCRIPT_FLAG = -T $(MB_HWT15_LINKER_SCRIPT) 
MB_HWT15_CC_DEBUG_FLAG =  -g 
MB_HWT15_CC_PROFILE_FLAG = # -pg
MB_HWT15_CC_GLOBPTR_FLAG= # -mxl-gp-opt
MB_HWT15_MODE = executable
MB_HWT15_LIBG_OPT = -$(MB_HWT15_MODE) microblaze_15
MB_HWT15_CC_INFERRED_FLAGS= -mno-xl-soft-mul -mhard-float -mxl-barrel-shift -mno-xl-soft-div -mcpu=v8.00.a 
MB_HWT15_CC_START_ADDR_FLAG=  #  # -Wl,-defsym -Wl,_TEXT_START_ADDR=
MB_HWT15_CC_STACK_SIZE_FLAG=  #  # -Wl,-defsym -Wl,_STACK_SIZE=
MB_HWT15_CC_HEAP_SIZE_FLAG=  #  # -Wl,-defsym -Wl,_HEAP_SIZE=
MB_HWT15_OTHER_CC_FLAGS= $(MB_HWT15_CC_GLOBPTR_FLAG)  \
                  $(MB_HWT15_CC_START_ADDR_FLAG) $(MB_HWT15_CC_STACK_SIZE_FLAG) $(MB_HWT15_CC_HEAP_SIZE_FLAG)  \
                  $(MB_HWT15_CC_INFERRED_FLAGS)  \
                  $(MB_HWT15_LINKER_SCRIPT_FLAG) $(MB_HWT15_CC_DEBUG_FLAG) $(MB_HWT15_CC_PROFILE_FLAG) 

#################################################################
# SOFTWARE APPLICATION MB_HWT16
#################################################################

MB_HWT16_SOURCES = my_sw/hw_thread.c my_sw/proc_hw_thread.c 

MB_HWT16_HEADERS = my_sw/proc_hw_thread.h 

MB_HWT16_CC = mb-gcc
MB_HWT16_CC_SIZE = mb-size
MB_HWT16_CC_OPT = -O2
MB_HWT16_CFLAGS = 
MB_HWT16_CC_SEARCH = # -B
MB_HWT16_LIBPATH = -L./microblaze_16/lib/ # -L
MB_HWT16_INCLUDES = -I./microblaze_16/include/  -Imy_sw/ # -I
MB_HWT16_LFLAGS = # -l
MB_HWT16_LINKER_SCRIPT = my_sw/fast_lmb_linkerscript.ld
MB_HWT16_LINKER_SCRIPT_FLAG = -T $(MB_HWT16_LINKER_SCRIPT) 
MB_HWT16_CC_DEBUG_FLAG =  -g 
MB_HWT16_CC_PROFILE_FLAG = # -pg
MB_HWT16_CC_GLOBPTR_FLAG= # -mxl-gp-opt
MB_HWT16_MODE = executable
MB_HWT16_LIBG_OPT = -$(MB_HWT16_MODE) microblaze_16
MB_HWT16_CC_INFERRED_FLAGS= -mno-xl-soft-mul -mhard-float -mxl-barrel-shift -mno-xl-soft-div -mcpu=v8.00.a 
MB_HWT16_CC_START_ADDR_FLAG=  #  # -Wl,-defsym -Wl,_TEXT_START_ADDR=
MB_HWT16_CC_STACK_SIZE_FLAG=  #  # -Wl,-defsym -Wl,_STACK_SIZE=
MB_HWT16_CC_HEAP_SIZE_FLAG=  #  # -Wl,-defsym -Wl,_HEAP_SIZE=
MB_HWT16_OTHER_CC_FLAGS= $(MB_HWT16_CC_GLOBPTR_FLAG)  \
                  $(MB_HWT16_CC_START_ADDR_FLAG) $(MB_HWT16_CC_STACK_SIZE_FLAG) $(MB_HWT16_CC_HEAP_SIZE_FLAG)  \
                  $(MB_HWT16_CC_INFERRED_FLAGS)  \
                  $(MB_HWT16_LINKER_SCRIPT_FLAG) $(MB_HWT16_CC_DEBUG_FLAG) $(MB_HWT16_CC_PROFILE_FLAG) 

#################################################################
# SOFTWARE APPLICATION MB_HWT17
#################################################################

MB_HWT17_SOURCES = my_sw/hw_thread.c my_sw/proc_hw_thread.c 

MB_HWT17_HEADERS = my_sw/proc_hw_thread.h 

MB_HWT17_CC = mb-gcc
MB_HWT17_CC_SIZE = mb-size
MB_HWT17_CC_OPT = -O2
MB_HWT17_CFLAGS = 
MB_HWT17_CC_SEARCH = # -B
MB_HWT17_LIBPATH = -L./microblaze_17/lib/ # -L
MB_HWT17_INCLUDES = -I./microblaze_17/include/  -Imy_sw/ # -I
MB_HWT17_LFLAGS = # -l
MB_HWT17_LINKER_SCRIPT = my_sw/fast_lmb_linkerscript.ld
MB_HWT17_LINKER_SCRIPT_FLAG = -T $(MB_HWT17_LINKER_SCRIPT) 
MB_HWT17_CC_DEBUG_FLAG =  -g 
MB_HWT17_CC_PROFILE_FLAG = # -pg
MB_HWT17_CC_GLOBPTR_FLAG= # -mxl-gp-opt
MB_HWT17_MODE = executable
MB_HWT17_LIBG_OPT = -$(MB_HWT17_MODE) microblaze_17
MB_HWT17_CC_INFERRED_FLAGS= -mno-xl-soft-mul -mhard-float -mxl-barrel-shift -mno-xl-soft-div -mcpu=v8.00.a 
MB_HWT17_CC_START_ADDR_FLAG=  #  # -Wl,-defsym -Wl,_TEXT_START_ADDR=
MB_HWT17_CC_STACK_SIZE_FLAG=  #  # -Wl,-defsym -Wl,_STACK_SIZE=
MB_HWT17_CC_HEAP_SIZE_FLAG=  #  # -Wl,-defsym -Wl,_HEAP_SIZE=
MB_HWT17_OTHER_CC_FLAGS= $(MB_HWT17_CC_GLOBPTR_FLAG)  \
                  $(MB_HWT17_CC_START_ADDR_FLAG) $(MB_HWT17_CC_STACK_SIZE_FLAG) $(MB_HWT17_CC_HEAP_SIZE_FLAG)  \
                  $(MB_HWT17_CC_INFERRED_FLAGS)  \
                  $(MB_HWT17_LINKER_SCRIPT_FLAG) $(MB_HWT17_CC_DEBUG_FLAG) $(MB_HWT17_CC_PROFILE_FLAG) 

#################################################################
# SOFTWARE APPLICATION MB_HWT18
#################################################################

MB_HWT18_SOURCES = my_sw/hw_thread.c my_sw/proc_hw_thread.c 

MB_HWT18_HEADERS = my_sw/proc_hw_thread.h 

MB_HWT18_CC = mb-gcc
MB_HWT18_CC_SIZE = mb-size
MB_HWT18_CC_OPT = -O2
MB_HWT18_CFLAGS = 
MB_HWT18_CC_SEARCH = # -B
MB_HWT18_LIBPATH = -L./microblaze_18/lib/ # -L
MB_HWT18_INCLUDES = -I./microblaze_18/include/  -Imy_sw/ # -I
MB_HWT18_LFLAGS = # -l
MB_HWT18_LINKER_SCRIPT = my_sw/fast_lmb_linkerscript.ld
MB_HWT18_LINKER_SCRIPT_FLAG = -T $(MB_HWT18_LINKER_SCRIPT) 
MB_HWT18_CC_DEBUG_FLAG =  -g 
MB_HWT18_CC_PROFILE_FLAG = # -pg
MB_HWT18_CC_GLOBPTR_FLAG= # -mxl-gp-opt
MB_HWT18_MODE = executable
MB_HWT18_LIBG_OPT = -$(MB_HWT18_MODE) microblaze_18
MB_HWT18_CC_INFERRED_FLAGS= -mno-xl-soft-mul -mhard-float -mxl-barrel-shift -mno-xl-soft-div -mcpu=v8.00.a 
MB_HWT18_CC_START_ADDR_FLAG=  #  # -Wl,-defsym -Wl,_TEXT_START_ADDR=
MB_HWT18_CC_STACK_SIZE_FLAG=  #  # -Wl,-defsym -Wl,_STACK_SIZE=
MB_HWT18_CC_HEAP_SIZE_FLAG=  #  # -Wl,-defsym -Wl,_HEAP_SIZE=
MB_HWT18_OTHER_CC_FLAGS= $(MB_HWT18_CC_GLOBPTR_FLAG)  \
                  $(MB_HWT18_CC_START_ADDR_FLAG) $(MB_HWT18_CC_STACK_SIZE_FLAG) $(MB_HWT18_CC_HEAP_SIZE_FLAG)  \
                  $(MB_HWT18_CC_INFERRED_FLAGS)  \
                  $(MB_HWT18_LINKER_SCRIPT_FLAG) $(MB_HWT18_CC_DEBUG_FLAG) $(MB_HWT18_CC_PROFILE_FLAG) 

#################################################################
# SOFTWARE APPLICATION MB_HWT19
#################################################################

MB_HWT19_SOURCES = my_sw/hw_thread.c my_sw/proc_hw_thread.c 

MB_HWT19_HEADERS = my_sw/proc_hw_thread.h 

MB_HWT19_CC = mb-gcc
MB_HWT19_CC_SIZE = mb-size
MB_HWT19_CC_OPT = -O2
MB_HWT19_CFLAGS = 
MB_HWT19_CC_SEARCH = # -B
MB_HWT19_LIBPATH = -L./microblaze_19/lib/ # -L
MB_HWT19_INCLUDES = -I./microblaze_19/include/  -Imy_sw/ # -I
MB_HWT19_LFLAGS = # -l
MB_HWT19_LINKER_SCRIPT = my_sw/fast_lmb_linkerscript.ld
MB_HWT19_LINKER_SCRIPT_FLAG = -T $(MB_HWT19_LINKER_SCRIPT) 
MB_HWT19_CC_DEBUG_FLAG =  -g 
MB_HWT19_CC_PROFILE_FLAG = # -pg
MB_HWT19_CC_GLOBPTR_FLAG= # -mxl-gp-opt
MB_HWT19_MODE = executable
MB_HWT19_LIBG_OPT = -$(MB_HWT19_MODE) microblaze_19
MB_HWT19_CC_INFERRED_FLAGS= -mno-xl-soft-mul -mhard-float -mxl-barrel-shift -mno-xl-soft-div -mcpu=v8.00.a 
MB_HWT19_CC_START_ADDR_FLAG=  #  # -Wl,-defsym -Wl,_TEXT_START_ADDR=
MB_HWT19_CC_STACK_SIZE_FLAG=  #  # -Wl,-defsym -Wl,_STACK_SIZE=
MB_HWT19_CC_HEAP_SIZE_FLAG=  #  # -Wl,-defsym -Wl,_HEAP_SIZE=
MB_HWT19_OTHER_CC_FLAGS= $(MB_HWT19_CC_GLOBPTR_FLAG)  \
                  $(MB_HWT19_CC_START_ADDR_FLAG) $(MB_HWT19_CC_STACK_SIZE_FLAG) $(MB_HWT19_CC_HEAP_SIZE_FLAG)  \
                  $(MB_HWT19_CC_INFERRED_FLAGS)  \
                  $(MB_HWT19_LINKER_SCRIPT_FLAG) $(MB_HWT19_CC_DEBUG_FLAG) $(MB_HWT19_CC_PROFILE_FLAG) 

#################################################################
# SOFTWARE APPLICATION MB_HWT20
#################################################################

MB_HWT20_SOURCES = my_sw/hw_thread.c my_sw/proc_hw_thread.c 

MB_HWT20_HEADERS = my_sw/proc_hw_thread.h 

MB_HWT20_CC = mb-gcc
MB_HWT20_CC_SIZE = mb-size
MB_HWT20_CC_OPT = -O2
MB_HWT20_CFLAGS = 
MB_HWT20_CC_SEARCH = # -B
MB_HWT20_LIBPATH = -L./microblaze_20/lib/ # -L
MB_HWT20_INCLUDES = -I./microblaze_20/include/  -Imy_sw/ # -I
MB_HWT20_LFLAGS = # -l
MB_HWT20_LINKER_SCRIPT = my_sw/fast_lmb_linkerscript.ld
MB_HWT20_LINKER_SCRIPT_FLAG = -T $(MB_HWT20_LINKER_SCRIPT) 
MB_HWT20_CC_DEBUG_FLAG =  -g 
MB_HWT20_CC_PROFILE_FLAG = # -pg
MB_HWT20_CC_GLOBPTR_FLAG= # -mxl-gp-opt
MB_HWT20_MODE = executable
MB_HWT20_LIBG_OPT = -$(MB_HWT20_MODE) microblaze_20
MB_HWT20_CC_INFERRED_FLAGS= -mno-xl-soft-mul -mhard-float -mxl-barrel-shift -mno-xl-soft-div -mcpu=v8.00.a 
MB_HWT20_CC_START_ADDR_FLAG=  #  # -Wl,-defsym -Wl,_TEXT_START_ADDR=
MB_HWT20_CC_STACK_SIZE_FLAG=  #  # -Wl,-defsym -Wl,_STACK_SIZE=
MB_HWT20_CC_HEAP_SIZE_FLAG=  #  # -Wl,-defsym -Wl,_HEAP_SIZE=
MB_HWT20_OTHER_CC_FLAGS= $(MB_HWT20_CC_GLOBPTR_FLAG)  \
                  $(MB_HWT20_CC_START_ADDR_FLAG) $(MB_HWT20_CC_STACK_SIZE_FLAG) $(MB_HWT20_CC_HEAP_SIZE_FLAG)  \
                  $(MB_HWT20_CC_INFERRED_FLAGS)  \
                  $(MB_HWT20_LINKER_SCRIPT_FLAG) $(MB_HWT20_CC_DEBUG_FLAG) $(MB_HWT20_CC_PROFILE_FLAG) 

#################################################################
# SOFTWARE APPLICATION MB_HWT21
#################################################################

MB_HWT21_SOURCES = my_sw/hw_thread.c my_sw/proc_hw_thread.c 

MB_HWT21_HEADERS = my_sw/proc_hw_thread.h 

MB_HWT21_CC = mb-gcc
MB_HWT21_CC_SIZE = mb-size
MB_HWT21_CC_OPT = -O2
MB_HWT21_CFLAGS = 
MB_HWT21_CC_SEARCH = # -B
MB_HWT21_LIBPATH = -L./microblaze_21/lib/ # -L
MB_HWT21_INCLUDES = -I./microblaze_21/include/  -Imy_sw/ # -I
MB_HWT21_LFLAGS = # -l
MB_HWT21_LINKER_SCRIPT = my_sw/fast_lmb_linkerscript.ld
MB_HWT21_LINKER_SCRIPT_FLAG = -T $(MB_HWT21_LINKER_SCRIPT) 
MB_HWT21_CC_DEBUG_FLAG =  -g 
MB_HWT21_CC_PROFILE_FLAG = # -pg
MB_HWT21_CC_GLOBPTR_FLAG= # -mxl-gp-opt
MB_HWT21_MODE = executable
MB_HWT21_LIBG_OPT = -$(MB_HWT21_MODE) microblaze_21
MB_HWT21_CC_INFERRED_FLAGS= -mno-xl-soft-mul -mhard-float -mxl-barrel-shift -mno-xl-soft-div -mcpu=v8.00.a 
MB_HWT21_CC_START_ADDR_FLAG=  #  # -Wl,-defsym -Wl,_TEXT_START_ADDR=
MB_HWT21_CC_STACK_SIZE_FLAG=  #  # -Wl,-defsym -Wl,_STACK_SIZE=
MB_HWT21_CC_HEAP_SIZE_FLAG=  #  # -Wl,-defsym -Wl,_HEAP_SIZE=
MB_HWT21_OTHER_CC_FLAGS= $(MB_HWT21_CC_GLOBPTR_FLAG)  \
                  $(MB_HWT21_CC_START_ADDR_FLAG) $(MB_HWT21_CC_STACK_SIZE_FLAG) $(MB_HWT21_CC_HEAP_SIZE_FLAG)  \
                  $(MB_HWT21_CC_INFERRED_FLAGS)  \
                  $(MB_HWT21_LINKER_SCRIPT_FLAG) $(MB_HWT21_CC_DEBUG_FLAG) $(MB_HWT21_CC_PROFILE_FLAG) 

#################################################################
# SOFTWARE APPLICATION MB_HWT22
#################################################################

MB_HWT22_SOURCES = my_sw/hw_thread.c my_sw/proc_hw_thread.c 

MB_HWT22_HEADERS = my_sw/proc_hw_thread.h 

MB_HWT22_CC = mb-gcc
MB_HWT22_CC_SIZE = mb-size
MB_HWT22_CC_OPT = -O2
MB_HWT22_CFLAGS = 
MB_HWT22_CC_SEARCH = # -B
MB_HWT22_LIBPATH = -L./microblaze_22/lib/ # -L
MB_HWT22_INCLUDES = -I./microblaze_22/include/  -Imy_sw/ # -I
MB_HWT22_LFLAGS = # -l
MB_HWT22_LINKER_SCRIPT = my_sw/fast_lmb_linkerscript.ld
MB_HWT22_LINKER_SCRIPT_FLAG = -T $(MB_HWT22_LINKER_SCRIPT) 
MB_HWT22_CC_DEBUG_FLAG =  -g 
MB_HWT22_CC_PROFILE_FLAG = # -pg
MB_HWT22_CC_GLOBPTR_FLAG= # -mxl-gp-opt
MB_HWT22_MODE = executable
MB_HWT22_LIBG_OPT = -$(MB_HWT22_MODE) microblaze_22
MB_HWT22_CC_INFERRED_FLAGS= -mno-xl-soft-mul -mhard-float -mxl-barrel-shift -mno-xl-soft-div -mcpu=v8.00.a 
MB_HWT22_CC_START_ADDR_FLAG=  #  # -Wl,-defsym -Wl,_TEXT_START_ADDR=
MB_HWT22_CC_STACK_SIZE_FLAG=  #  # -Wl,-defsym -Wl,_STACK_SIZE=
MB_HWT22_CC_HEAP_SIZE_FLAG=  #  # -Wl,-defsym -Wl,_HEAP_SIZE=
MB_HWT22_OTHER_CC_FLAGS= $(MB_HWT22_CC_GLOBPTR_FLAG)  \
                  $(MB_HWT22_CC_START_ADDR_FLAG) $(MB_HWT22_CC_STACK_SIZE_FLAG) $(MB_HWT22_CC_HEAP_SIZE_FLAG)  \
                  $(MB_HWT22_CC_INFERRED_FLAGS)  \
                  $(MB_HWT22_LINKER_SCRIPT_FLAG) $(MB_HWT22_CC_DEBUG_FLAG) $(MB_HWT22_CC_PROFILE_FLAG) 

#################################################################
# SOFTWARE APPLICATION MB_HWT23
#################################################################

MB_HWT23_SOURCES = my_sw/hw_thread.c my_sw/proc_hw_thread.c 

MB_HWT23_HEADERS = my_sw/proc_hw_thread.h 

MB_HWT23_CC = mb-gcc
MB_HWT23_CC_SIZE = mb-size
MB_HWT23_CC_OPT = -O2
MB_HWT23_CFLAGS = 
MB_HWT23_CC_SEARCH = # -B
MB_HWT23_LIBPATH = -L./microblaze_23/lib/ # -L
MB_HWT23_INCLUDES = -I./microblaze_23/include/  -Imy_sw/ # -I
MB_HWT23_LFLAGS = # -l
MB_HWT23_LINKER_SCRIPT = my_sw/fast_lmb_linkerscript.ld
MB_HWT23_LINKER_SCRIPT_FLAG = -T $(MB_HWT23_LINKER_SCRIPT) 
MB_HWT23_CC_DEBUG_FLAG =  -g 
MB_HWT23_CC_PROFILE_FLAG = # -pg
MB_HWT23_CC_GLOBPTR_FLAG= # -mxl-gp-opt
MB_HWT23_MODE = executable
MB_HWT23_LIBG_OPT = -$(MB_HWT23_MODE) microblaze_23
MB_HWT23_CC_INFERRED_FLAGS= -mno-xl-soft-mul -mhard-float -mxl-barrel-shift -mno-xl-soft-div -mcpu=v8.00.a 
MB_HWT23_CC_START_ADDR_FLAG=  #  # -Wl,-defsym -Wl,_TEXT_START_ADDR=
MB_HWT23_CC_STACK_SIZE_FLAG=  #  # -Wl,-defsym -Wl,_STACK_SIZE=
MB_HWT23_CC_HEAP_SIZE_FLAG=  #  # -Wl,-defsym -Wl,_HEAP_SIZE=
MB_HWT23_OTHER_CC_FLAGS= $(MB_HWT23_CC_GLOBPTR_FLAG)  \
                  $(MB_HWT23_CC_START_ADDR_FLAG) $(MB_HWT23_CC_STACK_SIZE_FLAG) $(MB_HWT23_CC_HEAP_SIZE_FLAG)  \
                  $(MB_HWT23_CC_INFERRED_FLAGS)  \
                  $(MB_HWT23_LINKER_SCRIPT_FLAG) $(MB_HWT23_CC_DEBUG_FLAG) $(MB_HWT23_CC_PROFILE_FLAG) 

#################################################################
# SOFTWARE APPLICATION MB_HWT24
#################################################################

MB_HWT24_SOURCES = my_sw/hw_thread.c my_sw/proc_hw_thread.c 

MB_HWT24_HEADERS = my_sw/proc_hw_thread.h 

MB_HWT24_CC = mb-gcc
MB_HWT24_CC_SIZE = mb-size
MB_HWT24_CC_OPT = -O2
MB_HWT24_CFLAGS = 
MB_HWT24_CC_SEARCH = # -B
MB_HWT24_LIBPATH = -L./microblaze_24/lib/ # -L
MB_HWT24_INCLUDES = -I./microblaze_24/include/  -Imy_sw/ # -I
MB_HWT24_LFLAGS = # -l
MB_HWT24_LINKER_SCRIPT = my_sw/fast_lmb_linkerscript.ld
MB_HWT24_LINKER_SCRIPT_FLAG = -T $(MB_HWT24_LINKER_SCRIPT) 
MB_HWT24_CC_DEBUG_FLAG =  -g 
MB_HWT24_CC_PROFILE_FLAG = # -pg
MB_HWT24_CC_GLOBPTR_FLAG= # -mxl-gp-opt
MB_HWT24_MODE = executable
MB_HWT24_LIBG_OPT = -$(MB_HWT24_MODE) microblaze_24
MB_HWT24_CC_INFERRED_FLAGS= -mno-xl-soft-mul -mhard-float -mxl-barrel-shift -mno-xl-soft-div -mcpu=v8.00.a 
MB_HWT24_CC_START_ADDR_FLAG=  #  # -Wl,-defsym -Wl,_TEXT_START_ADDR=
MB_HWT24_CC_STACK_SIZE_FLAG=  #  # -Wl,-defsym -Wl,_STACK_SIZE=
MB_HWT24_CC_HEAP_SIZE_FLAG=  #  # -Wl,-defsym -Wl,_HEAP_SIZE=
MB_HWT24_OTHER_CC_FLAGS= $(MB_HWT24_CC_GLOBPTR_FLAG)  \
                  $(MB_HWT24_CC_START_ADDR_FLAG) $(MB_HWT24_CC_STACK_SIZE_FLAG) $(MB_HWT24_CC_HEAP_SIZE_FLAG)  \
                  $(MB_HWT24_CC_INFERRED_FLAGS)  \
                  $(MB_HWT24_LINKER_SCRIPT_FLAG) $(MB_HWT24_CC_DEBUG_FLAG) $(MB_HWT24_CC_PROFILE_FLAG) 

#################################################################
# SOFTWARE APPLICATION MB_HWT25
#################################################################

MB_HWT25_SOURCES = my_sw/hw_thread.c my_sw/proc_hw_thread.c 

MB_HWT25_HEADERS = my_sw/proc_hw_thread.h 

MB_HWT25_CC = mb-gcc
MB_HWT25_CC_SIZE = mb-size
MB_HWT25_CC_OPT = -O2
MB_HWT25_CFLAGS = 
MB_HWT25_CC_SEARCH = # -B
MB_HWT25_LIBPATH = -L./microblaze_25/lib/ # -L
MB_HWT25_INCLUDES = -I./microblaze_25/include/  -Imy_sw/ # -I
MB_HWT25_LFLAGS = # -l
MB_HWT25_LINKER_SCRIPT = my_sw/fast_lmb_linkerscript.ld
MB_HWT25_LINKER_SCRIPT_FLAG = -T $(MB_HWT25_LINKER_SCRIPT) 
MB_HWT25_CC_DEBUG_FLAG =  -g 
MB_HWT25_CC_PROFILE_FLAG = # -pg
MB_HWT25_CC_GLOBPTR_FLAG= # -mxl-gp-opt
MB_HWT25_MODE = executable
MB_HWT25_LIBG_OPT = -$(MB_HWT25_MODE) microblaze_25
MB_HWT25_CC_INFERRED_FLAGS= -mno-xl-soft-mul -mhard-float -mxl-barrel-shift -mno-xl-soft-div -mcpu=v8.00.a 
MB_HWT25_CC_START_ADDR_FLAG=  #  # -Wl,-defsym -Wl,_TEXT_START_ADDR=
MB_HWT25_CC_STACK_SIZE_FLAG=  #  # -Wl,-defsym -Wl,_STACK_SIZE=
MB_HWT25_CC_HEAP_SIZE_FLAG=  #  # -Wl,-defsym -Wl,_HEAP_SIZE=
MB_HWT25_OTHER_CC_FLAGS= $(MB_HWT25_CC_GLOBPTR_FLAG)  \
                  $(MB_HWT25_CC_START_ADDR_FLAG) $(MB_HWT25_CC_STACK_SIZE_FLAG) $(MB_HWT25_CC_HEAP_SIZE_FLAG)  \
                  $(MB_HWT25_CC_INFERRED_FLAGS)  \
                  $(MB_HWT25_LINKER_SCRIPT_FLAG) $(MB_HWT25_CC_DEBUG_FLAG) $(MB_HWT25_CC_PROFILE_FLAG) 

#################################################################
# SOFTWARE APPLICATION MB_HWT26
#################################################################

MB_HWT26_SOURCES = my_sw/hw_thread.c my_sw/proc_hw_thread.c 

MB_HWT26_HEADERS = my_sw/proc_hw_thread.h 

MB_HWT26_CC = mb-gcc
MB_HWT26_CC_SIZE = mb-size
MB_HWT26_CC_OPT = -O2
MB_HWT26_CFLAGS = 
MB_HWT26_CC_SEARCH = # -B
MB_HWT26_LIBPATH = -L./microblaze_26/lib/ # -L
MB_HWT26_INCLUDES = -I./microblaze_26/include/  -Imy_sw/ # -I
MB_HWT26_LFLAGS = # -l
MB_HWT26_LINKER_SCRIPT = my_sw/fast_lmb_linkerscript.ld
MB_HWT26_LINKER_SCRIPT_FLAG = -T $(MB_HWT26_LINKER_SCRIPT) 
MB_HWT26_CC_DEBUG_FLAG =  -g 
MB_HWT26_CC_PROFILE_FLAG = # -pg
MB_HWT26_CC_GLOBPTR_FLAG= # -mxl-gp-opt
MB_HWT26_MODE = executable
MB_HWT26_LIBG_OPT = -$(MB_HWT26_MODE) microblaze_26
MB_HWT26_CC_INFERRED_FLAGS= -mno-xl-soft-mul -mhard-float -mxl-barrel-shift -mno-xl-soft-div -mcpu=v8.00.a 
MB_HWT26_CC_START_ADDR_FLAG=  #  # -Wl,-defsym -Wl,_TEXT_START_ADDR=
MB_HWT26_CC_STACK_SIZE_FLAG=  #  # -Wl,-defsym -Wl,_STACK_SIZE=
MB_HWT26_CC_HEAP_SIZE_FLAG=  #  # -Wl,-defsym -Wl,_HEAP_SIZE=
MB_HWT26_OTHER_CC_FLAGS= $(MB_HWT26_CC_GLOBPTR_FLAG)  \
                  $(MB_HWT26_CC_START_ADDR_FLAG) $(MB_HWT26_CC_STACK_SIZE_FLAG) $(MB_HWT26_CC_HEAP_SIZE_FLAG)  \
                  $(MB_HWT26_CC_INFERRED_FLAGS)  \
                  $(MB_HWT26_LINKER_SCRIPT_FLAG) $(MB_HWT26_CC_DEBUG_FLAG) $(MB_HWT26_CC_PROFILE_FLAG) 

#################################################################
# SOFTWARE APPLICATION MB_HWT27
#################################################################

MB_HWT27_SOURCES = my_sw/hw_thread.c my_sw/proc_hw_thread.c 

MB_HWT27_HEADERS = my_sw/proc_hw_thread.h 

MB_HWT27_CC = mb-gcc
MB_HWT27_CC_SIZE = mb-size
MB_HWT27_CC_OPT = -O2
MB_HWT27_CFLAGS = 
MB_HWT27_CC_SEARCH = # -B
MB_HWT27_LIBPATH = -L./microblaze_27/lib/ # -L
MB_HWT27_INCLUDES = -I./microblaze_27/include/  -Imy_sw/ # -I
MB_HWT27_LFLAGS = # -l
MB_HWT27_LINKER_SCRIPT = my_sw/fast_lmb_linkerscript.ld
MB_HWT27_LINKER_SCRIPT_FLAG = -T $(MB_HWT27_LINKER_SCRIPT) 
MB_HWT27_CC_DEBUG_FLAG =  -g 
MB_HWT27_CC_PROFILE_FLAG = # -pg
MB_HWT27_CC_GLOBPTR_FLAG= # -mxl-gp-opt
MB_HWT27_MODE = executable
MB_HWT27_LIBG_OPT = -$(MB_HWT27_MODE) microblaze_27
MB_HWT27_CC_INFERRED_FLAGS= -mno-xl-soft-mul -mhard-float -mxl-barrel-shift -mno-xl-soft-div -mcpu=v8.00.a 
MB_HWT27_CC_START_ADDR_FLAG=  #  # -Wl,-defsym -Wl,_TEXT_START_ADDR=
MB_HWT27_CC_STACK_SIZE_FLAG=  #  # -Wl,-defsym -Wl,_STACK_SIZE=
MB_HWT27_CC_HEAP_SIZE_FLAG=  #  # -Wl,-defsym -Wl,_HEAP_SIZE=
MB_HWT27_OTHER_CC_FLAGS= $(MB_HWT27_CC_GLOBPTR_FLAG)  \
                  $(MB_HWT27_CC_START_ADDR_FLAG) $(MB_HWT27_CC_STACK_SIZE_FLAG) $(MB_HWT27_CC_HEAP_SIZE_FLAG)  \
                  $(MB_HWT27_CC_INFERRED_FLAGS)  \
                  $(MB_HWT27_LINKER_SCRIPT_FLAG) $(MB_HWT27_CC_DEBUG_FLAG) $(MB_HWT27_CC_PROFILE_FLAG) 

#################################################################
# SOFTWARE APPLICATION MB_HWT28
#################################################################

MB_HWT28_SOURCES = my_sw/hw_thread.c my_sw/proc_hw_thread.c 

MB_HWT28_HEADERS = my_sw/proc_hw_thread.h 

MB_HWT28_CC = mb-gcc
MB_HWT28_CC_SIZE = mb-size
MB_HWT28_CC_OPT = -O2
MB_HWT28_CFLAGS = 
MB_HWT28_CC_SEARCH = # -B
MB_HWT28_LIBPATH = -L./microblaze_28/lib/ # -L
MB_HWT28_INCLUDES = -I./microblaze_28/include/  -Imy_sw/ # -I
MB_HWT28_LFLAGS = # -l
MB_HWT28_LINKER_SCRIPT = my_sw/fast_lmb_linkerscript.ld
MB_HWT28_LINKER_SCRIPT_FLAG = -T $(MB_HWT28_LINKER_SCRIPT) 
MB_HWT28_CC_DEBUG_FLAG =  -g 
MB_HWT28_CC_PROFILE_FLAG = # -pg
MB_HWT28_CC_GLOBPTR_FLAG= # -mxl-gp-opt
MB_HWT28_MODE = executable
MB_HWT28_LIBG_OPT = -$(MB_HWT28_MODE) microblaze_28
MB_HWT28_CC_INFERRED_FLAGS= -mno-xl-soft-mul -mhard-float -mxl-barrel-shift -mno-xl-soft-div -mcpu=v8.00.a 
MB_HWT28_CC_START_ADDR_FLAG=  #  # -Wl,-defsym -Wl,_TEXT_START_ADDR=
MB_HWT28_CC_STACK_SIZE_FLAG=  #  # -Wl,-defsym -Wl,_STACK_SIZE=
MB_HWT28_CC_HEAP_SIZE_FLAG=  #  # -Wl,-defsym -Wl,_HEAP_SIZE=
MB_HWT28_OTHER_CC_FLAGS= $(MB_HWT28_CC_GLOBPTR_FLAG)  \
                  $(MB_HWT28_CC_START_ADDR_FLAG) $(MB_HWT28_CC_STACK_SIZE_FLAG) $(MB_HWT28_CC_HEAP_SIZE_FLAG)  \
                  $(MB_HWT28_CC_INFERRED_FLAGS)  \
                  $(MB_HWT28_LINKER_SCRIPT_FLAG) $(MB_HWT28_CC_DEBUG_FLAG) $(MB_HWT28_CC_PROFILE_FLAG) 

#################################################################
# SOFTWARE APPLICATION MB_HWT29
#################################################################

MB_HWT29_SOURCES = my_sw/hw_thread.c my_sw/proc_hw_thread.c 

MB_HWT29_HEADERS = my_sw/proc_hw_thread.h 

MB_HWT29_CC = mb-gcc
MB_HWT29_CC_SIZE = mb-size
MB_HWT29_CC_OPT = -O2
MB_HWT29_CFLAGS = 
MB_HWT29_CC_SEARCH = # -B
MB_HWT29_LIBPATH = -L./microblaze_29/lib/ # -L
MB_HWT29_INCLUDES = -I./microblaze_29/include/  -Imy_sw/ # -I
MB_HWT29_LFLAGS = # -l
MB_HWT29_LINKER_SCRIPT = my_sw/fast_lmb_linkerscript.ld
MB_HWT29_LINKER_SCRIPT_FLAG = -T $(MB_HWT29_LINKER_SCRIPT) 
MB_HWT29_CC_DEBUG_FLAG =  -g 
MB_HWT29_CC_PROFILE_FLAG = # -pg
MB_HWT29_CC_GLOBPTR_FLAG= # -mxl-gp-opt
MB_HWT29_MODE = executable
MB_HWT29_LIBG_OPT = -$(MB_HWT29_MODE) microblaze_29
MB_HWT29_CC_INFERRED_FLAGS= -mno-xl-soft-mul -mhard-float -mxl-barrel-shift -mno-xl-soft-div -mcpu=v8.00.a 
MB_HWT29_CC_START_ADDR_FLAG=  #  # -Wl,-defsym -Wl,_TEXT_START_ADDR=
MB_HWT29_CC_STACK_SIZE_FLAG=  #  # -Wl,-defsym -Wl,_STACK_SIZE=
MB_HWT29_CC_HEAP_SIZE_FLAG=  #  # -Wl,-defsym -Wl,_HEAP_SIZE=
MB_HWT29_OTHER_CC_FLAGS= $(MB_HWT29_CC_GLOBPTR_FLAG)  \
                  $(MB_HWT29_CC_START_ADDR_FLAG) $(MB_HWT29_CC_STACK_SIZE_FLAG) $(MB_HWT29_CC_HEAP_SIZE_FLAG)  \
                  $(MB_HWT29_CC_INFERRED_FLAGS)  \
                  $(MB_HWT29_LINKER_SCRIPT_FLAG) $(MB_HWT29_CC_DEBUG_FLAG) $(MB_HWT29_CC_PROFILE_FLAG) 

#################################################################
# SOFTWARE APPLICATION MB_HWT30
#################################################################

MB_HWT30_SOURCES = my_sw/hw_thread.c my_sw/proc_hw_thread.c 

MB_HWT30_HEADERS = my_sw/proc_hw_thread.h 

MB_HWT30_CC = mb-gcc
MB_HWT30_CC_SIZE = mb-size
MB_HWT30_CC_OPT = -O2
MB_HWT30_CFLAGS = 
MB_HWT30_CC_SEARCH = # -B
MB_HWT30_LIBPATH = -L./microblaze_30/lib/ # -L
MB_HWT30_INCLUDES = -I./microblaze_30/include/  -Imy_sw/ # -I
MB_HWT30_LFLAGS = # -l
MB_HWT30_LINKER_SCRIPT = my_sw/fast_lmb_linkerscript.ld
MB_HWT30_LINKER_SCRIPT_FLAG = -T $(MB_HWT30_LINKER_SCRIPT) 
MB_HWT30_CC_DEBUG_FLAG =  -g 
MB_HWT30_CC_PROFILE_FLAG = # -pg
MB_HWT30_CC_GLOBPTR_FLAG= # -mxl-gp-opt
MB_HWT30_MODE = executable
MB_HWT30_LIBG_OPT = -$(MB_HWT30_MODE) microblaze_30
MB_HWT30_CC_INFERRED_FLAGS= -mno-xl-soft-mul -mhard-float -mxl-barrel-shift -mno-xl-soft-div -mcpu=v8.00.a 
MB_HWT30_CC_START_ADDR_FLAG=  #  # -Wl,-defsym -Wl,_TEXT_START_ADDR=
MB_HWT30_CC_STACK_SIZE_FLAG=  #  # -Wl,-defsym -Wl,_STACK_SIZE=
MB_HWT30_CC_HEAP_SIZE_FLAG=  #  # -Wl,-defsym -Wl,_HEAP_SIZE=
MB_HWT30_OTHER_CC_FLAGS= $(MB_HWT30_CC_GLOBPTR_FLAG)  \
                  $(MB_HWT30_CC_START_ADDR_FLAG) $(MB_HWT30_CC_STACK_SIZE_FLAG) $(MB_HWT30_CC_HEAP_SIZE_FLAG)  \
                  $(MB_HWT30_CC_INFERRED_FLAGS)  \
                  $(MB_HWT30_LINKER_SCRIPT_FLAG) $(MB_HWT30_CC_DEBUG_FLAG) $(MB_HWT30_CC_PROFILE_FLAG) 

#################################################################
# SOFTWARE APPLICATION MB_HWT31
#################################################################

MB_HWT31_SOURCES = my_sw/hw_thread.c my_sw/proc_hw_thread.c 

MB_HWT31_HEADERS = my_sw/proc_hw_thread.h 

MB_HWT31_CC = mb-gcc
MB_HWT31_CC_SIZE = mb-size
MB_HWT31_CC_OPT = -O2
MB_HWT31_CFLAGS = 
MB_HWT31_CC_SEARCH = # -B
MB_HWT31_LIBPATH = -L./microblaze_31/lib/ # -L
MB_HWT31_INCLUDES = -I./microblaze_31/include/  -Imy_sw/ # -I
MB_HWT31_LFLAGS = # -l
MB_HWT31_LINKER_SCRIPT = my_sw/fast_lmb_linkerscript.ld
MB_HWT31_LINKER_SCRIPT_FLAG = -T $(MB_HWT31_LINKER_SCRIPT) 
MB_HWT31_CC_DEBUG_FLAG =  -g 
MB_HWT31_CC_PROFILE_FLAG = # -pg
MB_HWT31_CC_GLOBPTR_FLAG= # -mxl-gp-opt
MB_HWT31_MODE = executable
MB_HWT31_LIBG_OPT = -$(MB_HWT31_MODE) microblaze_31
MB_HWT31_CC_INFERRED_FLAGS= -mno-xl-soft-mul -mhard-float -mxl-barrel-shift -mno-xl-soft-div -mcpu=v8.00.a 
MB_HWT31_CC_START_ADDR_FLAG=  #  # -Wl,-defsym -Wl,_TEXT_START_ADDR=
MB_HWT31_CC_STACK_SIZE_FLAG=  #  # -Wl,-defsym -Wl,_STACK_SIZE=
MB_HWT31_CC_HEAP_SIZE_FLAG=  #  # -Wl,-defsym -Wl,_HEAP_SIZE=
MB_HWT31_OTHER_CC_FLAGS= $(MB_HWT31_CC_GLOBPTR_FLAG)  \
                  $(MB_HWT31_CC_START_ADDR_FLAG) $(MB_HWT31_CC_STACK_SIZE_FLAG) $(MB_HWT31_CC_HEAP_SIZE_FLAG)  \
                  $(MB_HWT31_CC_INFERRED_FLAGS)  \
                  $(MB_HWT31_LINKER_SCRIPT_FLAG) $(MB_HWT31_CC_DEBUG_FLAG) $(MB_HWT31_CC_PROFILE_FLAG) 

#################################################################
# SOFTWARE APPLICATION MB_HWT32
#################################################################

MB_HWT32_SOURCES = my_sw/hw_thread.c my_sw/proc_hw_thread.c 

MB_HWT32_HEADERS = my_sw/proc_hw_thread.h 

MB_HWT32_CC = mb-gcc
MB_HWT32_CC_SIZE = mb-size
MB_HWT32_CC_OPT = -O2
MB_HWT32_CFLAGS = 
MB_HWT32_CC_SEARCH = # -B
MB_HWT32_LIBPATH = -L./microblaze_32/lib/ # -L
MB_HWT32_INCLUDES = -I./microblaze_32/include/  -Imy_sw/ # -I
MB_HWT32_LFLAGS = # -l
MB_HWT32_LINKER_SCRIPT = my_sw/fast_lmb_linkerscript.ld
MB_HWT32_LINKER_SCRIPT_FLAG = -T $(MB_HWT32_LINKER_SCRIPT) 
MB_HWT32_CC_DEBUG_FLAG =  -g 
MB_HWT32_CC_PROFILE_FLAG = # -pg
MB_HWT32_CC_GLOBPTR_FLAG= # -mxl-gp-opt
MB_HWT32_MODE = executable
MB_HWT32_LIBG_OPT = -$(MB_HWT32_MODE) microblaze_32
MB_HWT32_CC_INFERRED_FLAGS= -mno-xl-soft-mul -mhard-float -mxl-barrel-shift -mno-xl-soft-div -mcpu=v8.00.a 
MB_HWT32_CC_START_ADDR_FLAG=  #  # -Wl,-defsym -Wl,_TEXT_START_ADDR=
MB_HWT32_CC_STACK_SIZE_FLAG=  #  # -Wl,-defsym -Wl,_STACK_SIZE=
MB_HWT32_CC_HEAP_SIZE_FLAG=  #  # -Wl,-defsym -Wl,_HEAP_SIZE=
MB_HWT32_OTHER_CC_FLAGS= $(MB_HWT32_CC_GLOBPTR_FLAG)  \
                  $(MB_HWT32_CC_START_ADDR_FLAG) $(MB_HWT32_CC_STACK_SIZE_FLAG) $(MB_HWT32_CC_HEAP_SIZE_FLAG)  \
                  $(MB_HWT32_CC_INFERRED_FLAGS)  \
                  $(MB_HWT32_LINKER_SCRIPT_FLAG) $(MB_HWT32_CC_DEBUG_FLAG) $(MB_HWT32_CC_PROFILE_FLAG) 

#################################################################
# SOFTWARE APPLICATION MB_HWT33
#################################################################

MB_HWT33_SOURCES = my_sw/hw_thread.c my_sw/proc_hw_thread.c 

MB_HWT33_HEADERS = my_sw/proc_hw_thread.h 

MB_HWT33_CC = mb-gcc
MB_HWT33_CC_SIZE = mb-size
MB_HWT33_CC_OPT = -O2
MB_HWT33_CFLAGS = 
MB_HWT33_CC_SEARCH = # -B
MB_HWT33_LIBPATH = -L./microblaze_33/lib/ # -L
MB_HWT33_INCLUDES = -I./microblaze_33/include/  -Imy_sw/ # -I
MB_HWT33_LFLAGS = # -l
MB_HWT33_LINKER_SCRIPT = my_sw/fast_lmb_linkerscript.ld
MB_HWT33_LINKER_SCRIPT_FLAG = -T $(MB_HWT33_LINKER_SCRIPT) 
MB_HWT33_CC_DEBUG_FLAG =  -g 
MB_HWT33_CC_PROFILE_FLAG = # -pg
MB_HWT33_CC_GLOBPTR_FLAG= # -mxl-gp-opt
MB_HWT33_MODE = executable
MB_HWT33_LIBG_OPT = -$(MB_HWT33_MODE) microblaze_33
MB_HWT33_CC_INFERRED_FLAGS= -mno-xl-soft-mul -mhard-float -mxl-barrel-shift -mno-xl-soft-div -mcpu=v8.00.a 
MB_HWT33_CC_START_ADDR_FLAG=  #  # -Wl,-defsym -Wl,_TEXT_START_ADDR=
MB_HWT33_CC_STACK_SIZE_FLAG=  #  # -Wl,-defsym -Wl,_STACK_SIZE=
MB_HWT33_CC_HEAP_SIZE_FLAG=  #  # -Wl,-defsym -Wl,_HEAP_SIZE=
MB_HWT33_OTHER_CC_FLAGS= $(MB_HWT33_CC_GLOBPTR_FLAG)  \
                  $(MB_HWT33_CC_START_ADDR_FLAG) $(MB_HWT33_CC_STACK_SIZE_FLAG) $(MB_HWT33_CC_HEAP_SIZE_FLAG)  \
                  $(MB_HWT33_CC_INFERRED_FLAGS)  \
                  $(MB_HWT33_LINKER_SCRIPT_FLAG) $(MB_HWT33_CC_DEBUG_FLAG) $(MB_HWT33_CC_PROFILE_FLAG) 

#################################################################
# SOFTWARE APPLICATION MB_HWT34
#################################################################

MB_HWT34_SOURCES = my_sw/hw_thread.c my_sw/proc_hw_thread.c 

MB_HWT34_HEADERS = my_sw/proc_hw_thread.h 

MB_HWT34_CC = mb-gcc
MB_HWT34_CC_SIZE = mb-size
MB_HWT34_CC_OPT = -O2
MB_HWT34_CFLAGS = 
MB_HWT34_CC_SEARCH = # -B
MB_HWT34_LIBPATH = -L./microblaze_34/lib/ # -L
MB_HWT34_INCLUDES = -I./microblaze_34/include/  -Imy_sw/ # -I
MB_HWT34_LFLAGS = # -l
MB_HWT34_LINKER_SCRIPT = my_sw/fast_lmb_linkerscript.ld
MB_HWT34_LINKER_SCRIPT_FLAG = -T $(MB_HWT34_LINKER_SCRIPT) 
MB_HWT34_CC_DEBUG_FLAG =  -g 
MB_HWT34_CC_PROFILE_FLAG = # -pg
MB_HWT34_CC_GLOBPTR_FLAG= # -mxl-gp-opt
MB_HWT34_MODE = executable
MB_HWT34_LIBG_OPT = -$(MB_HWT34_MODE) microblaze_34
MB_HWT34_CC_INFERRED_FLAGS= -mno-xl-soft-mul -mhard-float -mxl-barrel-shift -mno-xl-soft-div -mcpu=v8.00.a 
MB_HWT34_CC_START_ADDR_FLAG=  #  # -Wl,-defsym -Wl,_TEXT_START_ADDR=
MB_HWT34_CC_STACK_SIZE_FLAG=  #  # -Wl,-defsym -Wl,_STACK_SIZE=
MB_HWT34_CC_HEAP_SIZE_FLAG=  #  # -Wl,-defsym -Wl,_HEAP_SIZE=
MB_HWT34_OTHER_CC_FLAGS= $(MB_HWT34_CC_GLOBPTR_FLAG)  \
                  $(MB_HWT34_CC_START_ADDR_FLAG) $(MB_HWT34_CC_STACK_SIZE_FLAG) $(MB_HWT34_CC_HEAP_SIZE_FLAG)  \
                  $(MB_HWT34_CC_INFERRED_FLAGS)  \
                  $(MB_HWT34_LINKER_SCRIPT_FLAG) $(MB_HWT34_CC_DEBUG_FLAG) $(MB_HWT34_CC_PROFILE_FLAG) 

#################################################################
# SOFTWARE APPLICATION MB_HWT35
#################################################################

MB_HWT35_SOURCES = my_sw/hw_thread.c my_sw/proc_hw_thread.c 

MB_HWT35_HEADERS = my_sw/proc_hw_thread.h 

MB_HWT35_CC = mb-gcc
MB_HWT35_CC_SIZE = mb-size
MB_HWT35_CC_OPT = -O2
MB_HWT35_CFLAGS = 
MB_HWT35_CC_SEARCH = # -B
MB_HWT35_LIBPATH = -L./microblaze_35/lib/ # -L
MB_HWT35_INCLUDES = -I./microblaze_35/include/  -Imy_sw/ # -I
MB_HWT35_LFLAGS = # -l
MB_HWT35_LINKER_SCRIPT = my_sw/fast_lmb_linkerscript.ld
MB_HWT35_LINKER_SCRIPT_FLAG = -T $(MB_HWT35_LINKER_SCRIPT) 
MB_HWT35_CC_DEBUG_FLAG =  -g 
MB_HWT35_CC_PROFILE_FLAG = # -pg
MB_HWT35_CC_GLOBPTR_FLAG= # -mxl-gp-opt
MB_HWT35_MODE = executable
MB_HWT35_LIBG_OPT = -$(MB_HWT35_MODE) microblaze_35
MB_HWT35_CC_INFERRED_FLAGS= -mno-xl-soft-mul -mhard-float -mxl-barrel-shift -mno-xl-soft-div -mcpu=v8.00.a 
MB_HWT35_CC_START_ADDR_FLAG=  #  # -Wl,-defsym -Wl,_TEXT_START_ADDR=
MB_HWT35_CC_STACK_SIZE_FLAG=  #  # -Wl,-defsym -Wl,_STACK_SIZE=
MB_HWT35_CC_HEAP_SIZE_FLAG=  #  # -Wl,-defsym -Wl,_HEAP_SIZE=
MB_HWT35_OTHER_CC_FLAGS= $(MB_HWT35_CC_GLOBPTR_FLAG)  \
                  $(MB_HWT35_CC_START_ADDR_FLAG) $(MB_HWT35_CC_STACK_SIZE_FLAG) $(MB_HWT35_CC_HEAP_SIZE_FLAG)  \
                  $(MB_HWT35_CC_INFERRED_FLAGS)  \
                  $(MB_HWT35_LINKER_SCRIPT_FLAG) $(MB_HWT35_CC_DEBUG_FLAG) $(MB_HWT35_CC_PROFILE_FLAG) 

#################################################################
# SOFTWARE APPLICATION MB_HWT36
#################################################################

MB_HWT36_SOURCES = my_sw/hw_thread.c my_sw/proc_hw_thread.c 

MB_HWT36_HEADERS = my_sw/proc_hw_thread.h 

MB_HWT36_CC = mb-gcc
MB_HWT36_CC_SIZE = mb-size
MB_HWT36_CC_OPT = -O2
MB_HWT36_CFLAGS = 
MB_HWT36_CC_SEARCH = # -B
MB_HWT36_LIBPATH = -L./microblaze_36/lib/ # -L
MB_HWT36_INCLUDES = -I./microblaze_36/include/  -Imy_sw/ # -I
MB_HWT36_LFLAGS = # -l
MB_HWT36_LINKER_SCRIPT = my_sw/fast_lmb_linkerscript.ld
MB_HWT36_LINKER_SCRIPT_FLAG = -T $(MB_HWT36_LINKER_SCRIPT) 
MB_HWT36_CC_DEBUG_FLAG =  -g 
MB_HWT36_CC_PROFILE_FLAG = # -pg
MB_HWT36_CC_GLOBPTR_FLAG= # -mxl-gp-opt
MB_HWT36_MODE = executable
MB_HWT36_LIBG_OPT = -$(MB_HWT36_MODE) microblaze_36
MB_HWT36_CC_INFERRED_FLAGS= -mno-xl-soft-mul -mhard-float -mxl-barrel-shift -mno-xl-soft-div -mcpu=v8.00.a 
MB_HWT36_CC_START_ADDR_FLAG=  #  # -Wl,-defsym -Wl,_TEXT_START_ADDR=
MB_HWT36_CC_STACK_SIZE_FLAG=  #  # -Wl,-defsym -Wl,_STACK_SIZE=
MB_HWT36_CC_HEAP_SIZE_FLAG=  #  # -Wl,-defsym -Wl,_HEAP_SIZE=
MB_HWT36_OTHER_CC_FLAGS= $(MB_HWT36_CC_GLOBPTR_FLAG)  \
                  $(MB_HWT36_CC_START_ADDR_FLAG) $(MB_HWT36_CC_STACK_SIZE_FLAG) $(MB_HWT36_CC_HEAP_SIZE_FLAG)  \
                  $(MB_HWT36_CC_INFERRED_FLAGS)  \
                  $(MB_HWT36_LINKER_SCRIPT_FLAG) $(MB_HWT36_CC_DEBUG_FLAG) $(MB_HWT36_CC_PROFILE_FLAG) 

#################################################################
# SOFTWARE APPLICATION MB_HWT37
#################################################################

MB_HWT37_SOURCES = my_sw/hw_thread.c my_sw/proc_hw_thread.c 

MB_HWT37_HEADERS = my_sw/proc_hw_thread.h 

MB_HWT37_CC = mb-gcc
MB_HWT37_CC_SIZE = mb-size
MB_HWT37_CC_OPT = -O2
MB_HWT37_CFLAGS = 
MB_HWT37_CC_SEARCH = # -B
MB_HWT37_LIBPATH = -L./microblaze_37/lib/ # -L
MB_HWT37_INCLUDES = -I./microblaze_37/include/  -Imy_sw/ # -I
MB_HWT37_LFLAGS = # -l
MB_HWT37_LINKER_SCRIPT = my_sw/fast_lmb_linkerscript.ld
MB_HWT37_LINKER_SCRIPT_FLAG = -T $(MB_HWT37_LINKER_SCRIPT) 
MB_HWT37_CC_DEBUG_FLAG =  -g 
MB_HWT37_CC_PROFILE_FLAG = # -pg
MB_HWT37_CC_GLOBPTR_FLAG= # -mxl-gp-opt
MB_HWT37_MODE = executable
MB_HWT37_LIBG_OPT = -$(MB_HWT37_MODE) microblaze_37
MB_HWT37_CC_INFERRED_FLAGS= -mno-xl-soft-mul -mhard-float -mxl-barrel-shift -mno-xl-soft-div -mcpu=v8.00.a 
MB_HWT37_CC_START_ADDR_FLAG=  #  # -Wl,-defsym -Wl,_TEXT_START_ADDR=
MB_HWT37_CC_STACK_SIZE_FLAG=  #  # -Wl,-defsym -Wl,_STACK_SIZE=
MB_HWT37_CC_HEAP_SIZE_FLAG=  #  # -Wl,-defsym -Wl,_HEAP_SIZE=
MB_HWT37_OTHER_CC_FLAGS= $(MB_HWT37_CC_GLOBPTR_FLAG)  \
                  $(MB_HWT37_CC_START_ADDR_FLAG) $(MB_HWT37_CC_STACK_SIZE_FLAG) $(MB_HWT37_CC_HEAP_SIZE_FLAG)  \
                  $(MB_HWT37_CC_INFERRED_FLAGS)  \
                  $(MB_HWT37_LINKER_SCRIPT_FLAG) $(MB_HWT37_CC_DEBUG_FLAG) $(MB_HWT37_CC_PROFILE_FLAG) 

#################################################################
# SOFTWARE APPLICATION MB_HWT38
#################################################################

MB_HWT38_SOURCES = my_sw/hw_thread.c my_sw/proc_hw_thread.c 

MB_HWT38_HEADERS = my_sw/proc_hw_thread.h 

MB_HWT38_CC = mb-gcc
MB_HWT38_CC_SIZE = mb-size
MB_HWT38_CC_OPT = -O2
MB_HWT38_CFLAGS = 
MB_HWT38_CC_SEARCH = # -B
MB_HWT38_LIBPATH = -L./microblaze_38/lib/ # -L
MB_HWT38_INCLUDES = -I./microblaze_38/include/  -Imy_sw/ # -I
MB_HWT38_LFLAGS = # -l
MB_HWT38_LINKER_SCRIPT = my_sw/fast_lmb_linkerscript.ld
MB_HWT38_LINKER_SCRIPT_FLAG = -T $(MB_HWT38_LINKER_SCRIPT) 
MB_HWT38_CC_DEBUG_FLAG =  -g 
MB_HWT38_CC_PROFILE_FLAG = # -pg
MB_HWT38_CC_GLOBPTR_FLAG= # -mxl-gp-opt
MB_HWT38_MODE = executable
MB_HWT38_LIBG_OPT = -$(MB_HWT38_MODE) microblaze_38
MB_HWT38_CC_INFERRED_FLAGS= -mno-xl-soft-mul -mhard-float -mxl-barrel-shift -mno-xl-soft-div -mcpu=v8.00.a 
MB_HWT38_CC_START_ADDR_FLAG=  #  # -Wl,-defsym -Wl,_TEXT_START_ADDR=
MB_HWT38_CC_STACK_SIZE_FLAG=  #  # -Wl,-defsym -Wl,_STACK_SIZE=
MB_HWT38_CC_HEAP_SIZE_FLAG=  #  # -Wl,-defsym -Wl,_HEAP_SIZE=
MB_HWT38_OTHER_CC_FLAGS= $(MB_HWT38_CC_GLOBPTR_FLAG)  \
                  $(MB_HWT38_CC_START_ADDR_FLAG) $(MB_HWT38_CC_STACK_SIZE_FLAG) $(MB_HWT38_CC_HEAP_SIZE_FLAG)  \
                  $(MB_HWT38_CC_INFERRED_FLAGS)  \
                  $(MB_HWT38_LINKER_SCRIPT_FLAG) $(MB_HWT38_CC_DEBUG_FLAG) $(MB_HWT38_CC_PROFILE_FLAG) 

#################################################################
# SOFTWARE APPLICATION MB_HWT39
#################################################################

MB_HWT39_SOURCES = my_sw/hw_thread.c my_sw/proc_hw_thread.c 

MB_HWT39_HEADERS = my_sw/proc_hw_thread.h 

MB_HWT39_CC = mb-gcc
MB_HWT39_CC_SIZE = mb-size
MB_HWT39_CC_OPT = -O2
MB_HWT39_CFLAGS = 
MB_HWT39_CC_SEARCH = # -B
MB_HWT39_LIBPATH = -L./microblaze_39/lib/ # -L
MB_HWT39_INCLUDES = -I./microblaze_39/include/  -Imy_sw/ # -I
MB_HWT39_LFLAGS = # -l
MB_HWT39_LINKER_SCRIPT = my_sw/fast_lmb_linkerscript.ld
MB_HWT39_LINKER_SCRIPT_FLAG = -T $(MB_HWT39_LINKER_SCRIPT) 
MB_HWT39_CC_DEBUG_FLAG =  -g 
MB_HWT39_CC_PROFILE_FLAG = # -pg
MB_HWT39_CC_GLOBPTR_FLAG= # -mxl-gp-opt
MB_HWT39_MODE = executable
MB_HWT39_LIBG_OPT = -$(MB_HWT39_MODE) microblaze_39
MB_HWT39_CC_INFERRED_FLAGS= -mno-xl-soft-mul -mhard-float -mxl-barrel-shift -mno-xl-soft-div -mcpu=v8.00.a 
MB_HWT39_CC_START_ADDR_FLAG=  #  # -Wl,-defsym -Wl,_TEXT_START_ADDR=
MB_HWT39_CC_STACK_SIZE_FLAG=  #  # -Wl,-defsym -Wl,_STACK_SIZE=
MB_HWT39_CC_HEAP_SIZE_FLAG=  #  # -Wl,-defsym -Wl,_HEAP_SIZE=
MB_HWT39_OTHER_CC_FLAGS= $(MB_HWT39_CC_GLOBPTR_FLAG)  \
                  $(MB_HWT39_CC_START_ADDR_FLAG) $(MB_HWT39_CC_STACK_SIZE_FLAG) $(MB_HWT39_CC_HEAP_SIZE_FLAG)  \
                  $(MB_HWT39_CC_INFERRED_FLAGS)  \
                  $(MB_HWT39_LINKER_SCRIPT_FLAG) $(MB_HWT39_CC_DEBUG_FLAG) $(MB_HWT39_CC_PROFILE_FLAG) 
