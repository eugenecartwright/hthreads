#################################################################
# Makefile generated by Xilinx Platform Studio 
# Project:/home/eugene/hthreads/src/platforms/xilinx/ml507_ppc_slave/design/system.xmp
#
# WARNING : This file will be re-generated every time a command
# to run a make target is invoked. So, any changes made to this  
# file manually, will be lost when make is invoked next. 
#################################################################

XILINX_EDK_DIR = /opt/Xilinx/latest/ISE_DS/EDK
NON_CYG_XILINX_EDK_DIR = /opt/Xilinx/latest/ISE_DS/EDK

SYSTEM = system

MHSFILE = system.mhs

MSSFILE = system.mss

FPGA_ARCH = virtex5

DEVICE = xc5vfx70tff1136-3

LANGUAGE = vhdl
GLOBAL_SEARCHPATHOPT = 
PROJECT_SEARCHPATHOPT =  -lp /home/eugene/hthreads/src/hardware/

SEARCHPATHOPT = $(PROJECT_SEARCHPATHOPT) $(GLOBAL_SEARCHPATHOPT)

SUBMODULE_OPT = 

PLATGEN_OPTIONS = -p $(DEVICE) -lang $(LANGUAGE) $(SEARCHPATHOPT) $(SUBMODULE_OPT) -msg __xps/ise/xmsgprops.lst

LIBGEN_OPTIONS = -mhs $(MHSFILE) -p $(DEVICE) $(SEARCHPATHOPT) -msg __xps/ise/xmsgprops.lst \
                   $(HOST_MICROBLAZE_LIBG_OPT) \
                   $(MICROBLAZE_0_LIBG_OPT) \
                   $(MICROBLAZE_1_LIBG_OPT) \
                   $(MICROBLAZE_2_LIBG_OPT) \
                   $(MICROBLAZE_3_LIBG_OPT) \
                   $(MICROBLAZE_4_LIBG_OPT)

OBSERVE_PAR_OPTIONS = -error yes

MB_HWT_OUTPUT_DIR = MB_HWT
MB_HWT_OUTPUT = $(MB_HWT_OUTPUT_DIR)/executable.elf
CYG_MB_HWT_OUTPUT_DIR = MB_HWT
CYG_MB_HWT_OUTPUT = $(CYG_MB_HWT_OUTPUT_DIR)/executable.elf

MB_HWT1_OUTPUT_DIR = MB_HWT1
MB_HWT1_OUTPUT = $(MB_HWT1_OUTPUT_DIR)/executable.elf
CYG_MB_HWT1_OUTPUT_DIR = MB_HWT1
CYG_MB_HWT1_OUTPUT = $(CYG_MB_HWT1_OUTPUT_DIR)/executable.elf

MB_HWT2_OUTPUT_DIR = MB_HWT2
MB_HWT2_OUTPUT = $(MB_HWT2_OUTPUT_DIR)/executable.elf
CYG_MB_HWT2_OUTPUT_DIR = MB_HWT2
CYG_MB_HWT2_OUTPUT = $(CYG_MB_HWT2_OUTPUT_DIR)/executable.elf

MB_HWT3_OUTPUT_DIR = MB_HWT3
MB_HWT3_OUTPUT = $(MB_HWT3_OUTPUT_DIR)/executable.elf
CYG_MB_HWT3_OUTPUT_DIR = MB_HWT3
CYG_MB_HWT3_OUTPUT = $(CYG_MB_HWT3_OUTPUT_DIR)/executable.elf

MB_HWT4_OUTPUT_DIR = MB_HWT4
MB_HWT4_OUTPUT = $(MB_HWT4_OUTPUT_DIR)/executable.elf
CYG_MB_HWT4_OUTPUT_DIR = MB_HWT4
CYG_MB_HWT4_OUTPUT = $(CYG_MB_HWT4_OUTPUT_DIR)/executable.elf

TEST_MEMORY_APP_OUTPUT_DIR = Test_Memory_App
TEST_MEMORY_APP_OUTPUT = $(TEST_MEMORY_APP_OUTPUT_DIR)/executable.elf
CYG_TEST_MEMORY_APP_OUTPUT_DIR = Test_Memory_App
CYG_TEST_MEMORY_APP_OUTPUT = $(CYG_TEST_MEMORY_APP_OUTPUT_DIR)/executable.elf

CORE_TEST_OUTPUT_DIR = Core_Test
CORE_TEST_OUTPUT = $(CORE_TEST_OUTPUT_DIR)/executable.elf
CYG_CORE_TEST_OUTPUT_DIR = Core_Test
CYG_CORE_TEST_OUTPUT = $(CYG_CORE_TEST_OUTPUT_DIR)/executable.elf

MICROBLAZE_BOOTLOOP = $(XILINX_EDK_DIR)/sw/lib/microblaze/mb_bootloop.elf
MICROBLAZE_BOOTLOOP_LE = $(XILINX_EDK_DIR)/sw/lib/microblaze/mb_bootloop_le.elf
PPC405_BOOTLOOP = $(XILINX_EDK_DIR)/sw/lib/ppc405/ppc_bootloop.elf
PPC440_BOOTLOOP = $(XILINX_EDK_DIR)/sw/lib/ppc440/ppc440_bootloop.elf
BOOTLOOP_DIR = bootloops

HOST_MICROBLAZE_BOOTLOOP = $(BOOTLOOP_DIR)/host_microblaze.elf
HOST_MICROBLAZE_XMDSTUB = host_microblaze/code/xmdstub.elf

MICROBLAZE_0_BOOTLOOP = $(BOOTLOOP_DIR)/microblaze_0.elf
MICROBLAZE_0_XMDSTUB = microblaze_0/code/xmdstub.elf

MICROBLAZE_1_BOOTLOOP = $(BOOTLOOP_DIR)/microblaze_1.elf
MICROBLAZE_1_XMDSTUB = microblaze_1/code/xmdstub.elf

MICROBLAZE_2_BOOTLOOP = $(BOOTLOOP_DIR)/microblaze_2.elf
MICROBLAZE_2_XMDSTUB = microblaze_2/code/xmdstub.elf

MICROBLAZE_3_BOOTLOOP = $(BOOTLOOP_DIR)/microblaze_3.elf
MICROBLAZE_3_XMDSTUB = microblaze_3/code/xmdstub.elf

MICROBLAZE_4_BOOTLOOP = $(BOOTLOOP_DIR)/microblaze_4.elf
MICROBLAZE_4_XMDSTUB = microblaze_4/code/xmdstub.elf

PPC440_0_BOOTLOOP = $(BOOTLOOP_DIR)/ppc440_0.elf

BRAMINIT_ELF_FILES =  $(CORE_TEST_OUTPUT) $(MB_HWT_OUTPUT) $(MB_HWT1_OUTPUT) $(MB_HWT2_OUTPUT) $(MB_HWT3_OUTPUT) $(MB_HWT4_OUTPUT) $(TEST_MEMORY_APP_OUTPUT) 
BRAMINIT_ELF_FILE_ARGS =   -pe host_microblaze $(CORE_TEST_OUTPUT)  -pe microblaze_0 $(MB_HWT_OUTPUT)  -pe microblaze_1 $(MB_HWT1_OUTPUT)  -pe microblaze_2 $(MB_HWT2_OUTPUT)  -pe microblaze_3 $(MB_HWT3_OUTPUT)  -pe microblaze_4 $(MB_HWT4_OUTPUT)  -pe ppc440_0 $(TEST_MEMORY_APP_OUTPUT) 

ALL_USER_ELF_FILES = $(MB_HWT_OUTPUT) $(MB_HWT1_OUTPUT) $(MB_HWT2_OUTPUT) $(MB_HWT3_OUTPUT) $(MB_HWT4_OUTPUT) $(TEST_MEMORY_APP_OUTPUT) $(CORE_TEST_OUTPUT) 

SIM_CMD = vsim

BEHAVIORAL_SIM_SCRIPT = simulation/behavioral/$(SYSTEM)_setup.do

STRUCTURAL_SIM_SCRIPT = simulation/structural/$(SYSTEM)_setup.do

TIMING_SIM_SCRIPT = simulation/timing/$(SYSTEM)_setup.do

DEFAULT_SIM_SCRIPT = $(BEHAVIORAL_SIM_SCRIPT)

MIX_LANG_SIM_OPT = -mixed yes

SIMGEN_OPTIONS = -p $(DEVICE) -lang $(LANGUAGE) $(SEARCHPATHOPT) $(BRAMINIT_ELF_FILE_ARGS) $(MIX_LANG_SIM_OPT) -msg __xps/ise/xmsgprops.lst -s mti


LIBRARIES =  \
       host_microblaze/lib/libxil.a  \
       microblaze_0/lib/libxil.a  \
       microblaze_1/lib/libxil.a  \
       microblaze_2/lib/libxil.a  \
       microblaze_3/lib/libxil.a  \
       microblaze_4/lib/libxil.a  \
       ppc440_0/lib/libxil.a 

LIBSCLEAN_TARGETS = host_microblaze_libsclean microblaze_0_libsclean microblaze_1_libsclean microblaze_2_libsclean microblaze_3_libsclean microblaze_4_libsclean ppc440_0_libsclean 

PROGRAMCLEAN_TARGETS = MB_HWT_programclean MB_HWT1_programclean MB_HWT2_programclean MB_HWT3_programclean MB_HWT4_programclean Test_Memory_App_programclean Core_Test_programclean 

CORE_STATE_DEVELOPMENT_FILES = /opt/Xilinx/latest/ISE_DS/EDK/hw/XilinxProcessorIPLib/pcores/proc_common_v3_00_a/hdl/vhdl/proc_common_pkg.vhd \
/opt/Xilinx/latest/ISE_DS/EDK/hw/XilinxProcessorIPLib/pcores/proc_common_v3_00_a/hdl/vhdl/ipif_pkg.vhd \
/opt/Xilinx/latest/ISE_DS/EDK/hw/XilinxProcessorIPLib/pcores/proc_common_v3_00_a/hdl/vhdl/or_muxcy.vhd \
/opt/Xilinx/latest/ISE_DS/EDK/hw/XilinxProcessorIPLib/pcores/proc_common_v3_00_a/hdl/vhdl/or_gate128.vhd \
/opt/Xilinx/latest/ISE_DS/EDK/hw/XilinxProcessorIPLib/pcores/proc_common_v3_00_a/hdl/vhdl/family_support.vhd \
/opt/Xilinx/latest/ISE_DS/EDK/hw/XilinxProcessorIPLib/pcores/proc_common_v3_00_a/hdl/vhdl/pselect_f.vhd \
/opt/Xilinx/latest/ISE_DS/EDK/hw/XilinxProcessorIPLib/pcores/proc_common_v3_00_a/hdl/vhdl/counter_f.vhd \
/opt/Xilinx/latest/ISE_DS/EDK/hw/XilinxProcessorIPLib/pcores/proc_common_v3_00_a/hdl/vhdl/soft_reset.vhd \
/opt/Xilinx/latest/ISE_DS/EDK/hw/XilinxProcessorIPLib/pcores/proc_common_v3_00_a/hdl/vhdl/cntr_incr_decr_addn_f.vhd \
/opt/Xilinx/latest/ISE_DS/EDK/hw/XilinxProcessorIPLib/pcores/proc_common_v3_00_a/hdl/vhdl/muxf_struct_f.vhd \
/opt/Xilinx/latest/ISE_DS/EDK/hw/XilinxProcessorIPLib/pcores/proc_common_v3_00_a/hdl/vhdl/dynshreg_f.vhd \
/opt/Xilinx/latest/ISE_DS/EDK/hw/XilinxProcessorIPLib/pcores/proc_common_v3_00_a/hdl/vhdl/srl_fifo_rbu_f.vhd \
/opt/Xilinx/latest/ISE_DS/EDK/hw/XilinxProcessorIPLib/pcores/proc_common_v3_00_a/hdl/vhdl/srl_fifo_f.vhd \
/opt/Xilinx/latest/ISE_DS/EDK/hw/XilinxProcessorIPLib/pcores/plbv46_slave_single_v1_01_a/hdl/vhdl/plb_address_decoder.vhd \
/opt/Xilinx/latest/ISE_DS/EDK/hw/XilinxProcessorIPLib/pcores/plbv46_slave_single_v1_01_a/hdl/vhdl/plb_slave_attachment.vhd \
/opt/Xilinx/latest/ISE_DS/EDK/hw/XilinxProcessorIPLib/pcores/plbv46_slave_single_v1_01_a/hdl/vhdl/plbv46_slave_single.vhd \
/home/eugene/hthreads/src/hardware/MyRepository/pcores/plb_hthread_reset_core_v1_00_a/hdl/vhdl/user_logic.vhd \
/home/eugene/hthreads/src/hardware/MyRepository/pcores/plb_hthread_reset_core_v1_00_a/hdl/vhdl/plb_hthread_reset_core.vhd \
/home/eugene/hthreads/src/hardware/MyRepository/pcores/plb_thread_manager_v1_00_a/hdl/vhdl/infer_bram_dual_port.vhd \
/home/eugene/hthreads/src/hardware/MyRepository/pcores/plb_thread_manager_v1_00_a/hdl/vhdl/user_logic.vhd \
/home/eugene/hthreads/src/hardware/MyRepository/pcores/plb_thread_manager_v1_00_a/hdl/vhdl/plb_thread_manager.vhd \
/opt/Xilinx/latest/ISE_DS/EDK/hw/XilinxProcessorIPLib/pcores/plbv46_master_single_v1_01_a/hdl/vhdl/data_width_adapter.vhd \
/opt/Xilinx/latest/ISE_DS/EDK/hw/XilinxProcessorIPLib/pcores/plbv46_master_single_v1_01_a/hdl/vhdl/data_mirror_128.vhd \
/opt/Xilinx/latest/ISE_DS/EDK/hw/XilinxProcessorIPLib/pcores/plbv46_master_single_v1_01_a/hdl/vhdl/plbv46_master_single.vhd \
/home/eugene/hthreads/src/hardware/MyRepository/pcores/plb_scheduler_v1_00_a/hdl/vhdl/infer_bram.vhd \
/home/eugene/hthreads/src/hardware/MyRepository/pcores/plb_scheduler_v1_00_a/hdl/vhdl/parallel.vhd \
/home/eugene/hthreads/src/hardware/MyRepository/pcores/plb_scheduler_v1_00_a/hdl/vhdl/user_logic.vhd \
/home/eugene/hthreads/src/hardware/MyRepository/pcores/plb_scheduler_v1_00_a/hdl/vhdl/plb_scheduler.vhd \
/home/eugene/hthreads/src/hardware/MyRepository/pcores/plb_sync_manager_v1_00_a/hdl/vhdl/common.vhd \
/home/eugene/hthreads/src/hardware/MyRepository/pcores/plb_sync_manager_v1_00_a/hdl/vhdl/lock_fsm.vhd \
/home/eugene/hthreads/src/hardware/MyRepository/pcores/plb_sync_manager_v1_00_a/hdl/vhdl/unlock_fsm.vhd \
/home/eugene/hthreads/src/hardware/MyRepository/pcores/plb_sync_manager_v1_00_a/hdl/vhdl/trylock_fsm.vhd \
/home/eugene/hthreads/src/hardware/MyRepository/pcores/plb_sync_manager_v1_00_a/hdl/vhdl/owner_fsm.vhd \
/home/eugene/hthreads/src/hardware/MyRepository/pcores/plb_sync_manager_v1_00_a/hdl/vhdl/kind_fsm.vhd \
/home/eugene/hthreads/src/hardware/MyRepository/pcores/plb_sync_manager_v1_00_a/hdl/vhdl/count_fsm.vhd \
/home/eugene/hthreads/src/hardware/MyRepository/pcores/plb_sync_manager_v1_00_a/hdl/vhdl/result_fsm.vhd \
/home/eugene/hthreads/src/hardware/MyRepository/pcores/plb_sync_manager_v1_00_a/hdl/vhdl/mutex_store.vhd \
/home/eugene/hthreads/src/hardware/MyRepository/pcores/plb_sync_manager_v1_00_a/hdl/vhdl/thread_store.vhd \
/home/eugene/hthreads/src/hardware/MyRepository/pcores/plb_sync_manager_v1_00_a/hdl/vhdl/send_store.vhd \
/home/eugene/hthreads/src/hardware/MyRepository/pcores/plb_sync_manager_v1_00_a/hdl/vhdl/slave.vhd \
/home/eugene/hthreads/src/hardware/MyRepository/pcores/plb_sync_manager_v1_00_a/hdl/vhdl/master.vhd \
/home/eugene/hthreads/src/hardware/MyRepository/pcores/plb_sync_manager_v1_00_a/hdl/vhdl/user_logic.vhd \
/home/eugene/hthreads/src/hardware/MyRepository/pcores/plb_sync_manager_v1_00_a/hdl/vhdl/plb_sync_manager.vhd \
/opt/Xilinx/latest/ISE_DS/EDK/hw/XilinxProcessorIPLib/pcores/fsl_v20_v2_11_c/hdl/vhdl/async_fifo_bram.vhd \
/opt/Xilinx/latest/ISE_DS/EDK/hw/XilinxProcessorIPLib/pcores/fsl_v20_v2_11_c/hdl/vhdl/async_fifo.vhd \
/opt/Xilinx/latest/ISE_DS/EDK/hw/XilinxProcessorIPLib/pcores/fsl_v20_v2_11_c/hdl/vhdl/gen_srlfifo.vhd \
/opt/Xilinx/latest/ISE_DS/EDK/hw/XilinxProcessorIPLib/pcores/fsl_v20_v2_11_c/hdl/vhdl/gen_sync_bram.vhd \
/opt/Xilinx/latest/ISE_DS/EDK/hw/XilinxProcessorIPLib/pcores/fsl_v20_v2_11_c/hdl/vhdl/gen_sync_dpram.vhd \
/opt/Xilinx/latest/ISE_DS/EDK/hw/XilinxProcessorIPLib/pcores/fsl_v20_v2_11_c/hdl/vhdl/sync_fifo.vhd \
/opt/Xilinx/latest/ISE_DS/EDK/hw/XilinxProcessorIPLib/pcores/fsl_v20_v2_11_c/hdl/vhdl/fsl_v20.vhd \
/home/eugene/hthreads/src/hardware/MyRepository/pcores/plb_cond_vars_v1_00_a/hdl/vhdl/condvar.vhd \
/home/eugene/hthreads/src/hardware/MyRepository/pcores/plb_cond_vars_v1_00_a/hdl/vhdl/user_logic.vhd \
/home/eugene/hthreads/src/hardware/MyRepository/pcores/plb_cond_vars_v1_00_a/hdl/vhdl/plb_cond_vars.vhd \
/home/eugene/hthreads/src/hardware/MyRepository/pcores/plb_hthreads_timer_v1_00_a/hdl/vhdl/user_logic.vhd \
/home/eugene/hthreads/src/hardware/MyRepository/pcores/plb_hthreads_timer_v1_00_a/hdl/vhdl/plb_hthreads_timer.vhd

WRAPPER_NGC_FILES = implementation/host_microblaze_wrapper.ngc \
implementation/host_mb_ilmb_wrapper.ngc \
implementation/host_mb_dlmb_wrapper.ngc \
implementation/host_ilmb_cntlr_wrapper.ngc \
implementation/host_dlmb_cntlr_wrapper.ngc \
implementation/host_mb_bram_wrapper.ngc \
implementation/main_plb_wrapper.ngc \
implementation/plb_vhwti_wrapper.ngc \
implementation/vhwti_bridge_wrapper.ngc \
implementation/rs232_uart_1_wrapper.ngc \
implementation/ddr2_sdram_wrapper.ngc \
implementation/clock_generator_0_wrapper.ngc \
implementation/jtagppc_cntlr_0_wrapper.ngc \
implementation/proc_sys_reset_0_wrapper.ngc \
implementation/xps_intc_0_wrapper.ngc \
implementation/main_core_bridge_wrapper.ngc \
implementation/core_main_bridge_wrapper.ngc \
implementation/core_bus_wrapper.ngc \
implementation/plb_hthread_reset_core_0_wrapper.ngc \
implementation/thread_manager_wrapper.ngc \
implementation/scheduler_wrapper.ngc \
implementation/sync_manager_wrapper.ngc \
implementation/cond_vars_wrapper.ngc \
implementation/xps_timer_0_wrapper.ngc \
implementation/microblaze_0_wrapper.ngc \
implementation/mb_ilmb_wrapper.ngc \
implementation/mb_dlmb_wrapper.ngc \
implementation/ilmb_cntlr_wrapper.ngc \
implementation/dlmb_cntlr_wrapper.ngc \
implementation/mb_bram_wrapper.ngc \
implementation/mb0_plb_bridge_wrapper.ngc \
implementation/local_timer_0_wrapper.ngc \
implementation/mb0_plb_bus_wrapper.ngc \
implementation/mdm_0_wrapper.ngc \
implementation/microblaze_1_wrapper.ngc \
implementation/mb_ilmb1_wrapper.ngc \
implementation/mb_dlmb1_wrapper.ngc \
implementation/ilmb_cntlr1_wrapper.ngc \
implementation/dlmb_cntlr1_wrapper.ngc \
implementation/mb_bram1_wrapper.ngc \
implementation/mb1_plb_bridge_wrapper.ngc \
implementation/mb1_plb_bus_wrapper.ngc \
implementation/local_timer_1_wrapper.ngc \
implementation/microblaze_2_wrapper.ngc \
implementation/mb_ilmb2_wrapper.ngc \
implementation/mb_dlmb2_wrapper.ngc \
implementation/ilmb_cntlr2_wrapper.ngc \
implementation/dlmb_cntlr2_wrapper.ngc \
implementation/mb_bram2_wrapper.ngc \
implementation/mb2_plb_bridge_wrapper.ngc \
implementation/mb2_plb_bus_wrapper.ngc \
implementation/local_timer_2_wrapper.ngc \
implementation/microblaze_3_wrapper.ngc \
implementation/mb_ilmb3_wrapper.ngc \
implementation/mb_dlmb3_wrapper.ngc \
implementation/ilmb_cntlr3_wrapper.ngc \
implementation/dlmb_cntlr3_wrapper.ngc \
implementation/mb_bram3_wrapper.ngc \
implementation/mb3_plb_bridge_wrapper.ngc \
implementation/mb3_plb_bus_wrapper.ngc \
implementation/local_timer_3_wrapper.ngc \
implementation/microblaze_4_wrapper.ngc \
implementation/mb_ilmb4_wrapper.ngc \
implementation/mb_dlmb4_wrapper.ngc \
implementation/ilmb_cntlr4_wrapper.ngc \
implementation/dlmb_cntlr4_wrapper.ngc \
implementation/mb_bram4_wrapper.ngc \
implementation/mb4_plb_bridge_wrapper.ngc \
implementation/mb4_plb_bus_wrapper.ngc \
implementation/local_timer_4_wrapper.ngc \
implementation/ppc440_0_wrapper.ngc \
implementation/ppc_boot_cntlr_wrapper.ngc \
implementation/xps_bram_if_cntlr_1_bram_wrapper.ngc \
implementation/ppc_plb_bridge_wrapper.ngc \
implementation/local_timer_5_wrapper.ngc \
implementation/ppc_plb_bus_wrapper.ngc \
implementation/vhwti_control_0_wrapper.ngc \
implementation/vhwti_local_control_0_wrapper.ngc \
implementation/vhwti_ram_0_wrapper.ngc \
implementation/vhwti_control_1_wrapper.ngc \
implementation/vhwti_local_control_1_wrapper.ngc \
implementation/vhwti_ram_1_wrapper.ngc \
implementation/vhwti_control_2_wrapper.ngc \
implementation/vhwti_local_control_2_wrapper.ngc \
implementation/vhwti_ram_2_wrapper.ngc \
implementation/vhwti_control_3_wrapper.ngc \
implementation/vhwti_local_control_3_wrapper.ngc \
implementation/vhwti_ram_3_wrapper.ngc \
implementation/vhwti_control_4_wrapper.ngc \
implementation/vhwti_local_control_4_wrapper.ngc \
implementation/vhwti_ram_4_wrapper.ngc \
implementation/vhwti_control_5_wrapper.ngc \
implementation/vhwti_local_control_5_wrapper.ngc \
implementation/vhwti_ram_5_wrapper.ngc \
implementation/extra_bram_cntlr_wrapper.ngc \
implementation/extra_bram_block_wrapper.ngc \
implementation/plb_hthreads_timer_0_wrapper.ngc \
implementation/chipscope_plbv46_iba_0_wrapper.ngc \
implementation/chipscope_icon_0_wrapper.ngc

POSTSYN_NETLIST = implementation/$(SYSTEM).ngc

SYSTEM_BIT = implementation/$(SYSTEM).bit

DOWNLOAD_BIT = implementation/download.bit

SYSTEM_ACE = implementation/$(SYSTEM).ace

UCF_FILE = data/system.ucf

BMM_FILE = implementation/$(SYSTEM).bmm

BITGEN_UT_FILE = etc/bitgen.ut

XFLOW_OPT_FILE = etc/fast_runtime.opt
XFLOW_DEPENDENCY = __xps/xpsxflow.opt $(XFLOW_OPT_FILE)

XPLORER_DEPENDENCY = __xps/xplorer.opt
XPLORER_OPTIONS = -p $(DEVICE) -uc $(SYSTEM).ucf -bm $(SYSTEM).bmm -max_runs 7

FPGA_IMP_DEPENDENCY = $(BMM_FILE) $(POSTSYN_NETLIST) $(UCF_FILE) $(XFLOW_DEPENDENCY)

# cygwin path for windows
SDK_EXPORT_DIR = SDK/SDK_Export/hw
CYG_SDK_EXPORT_DIR = SDK/SDK_Export/hw
SYSTEM_HW_HANDOFF = $(SDK_EXPORT_DIR)/$(SYSTEM).xml
CYG_SYSTEM_HW_HANDOFF = $(CYG_SDK_EXPORT_DIR)/$(SYSTEM).xml
SYSTEM_HW_HANDOFF_BIT = $(SDK_EXPORT_DIR)/$(SYSTEM).bit
CYG_SYSTEM_HW_HANDOFF_BIT = $(CYG_SDK_EXPORT_DIR)/$(SYSTEM).bit
SYSTEM_HW_HANDOFF_BMM = $(SDK_EXPORT_DIR)/$(SYSTEM)_bd.bmm
CYG_SYSTEM_HW_HANDOFF_BMM = $(CYG_SDK_EXPORT_DIR)/$(SYSTEM)_bd.bmm
SYSTEM_HW_HANDOFF_DEP = $(CYG_SYSTEM_HW_HANDOFF) $(CYG_SYSTEM_HW_HANDOFF_BIT) $(CYG_SYSTEM_HW_HANDOFF_BMM)

#################################################################
# SOFTWARE APPLICATION MB_HWT
#################################################################

MB_HWT_SOURCES = my_sw/proc_hw_thread.c my_sw/hw_thread.c 

MB_HWT_HEADERS = my_sw/proc_hw_thread.h 

MB_HWT_CC = mb-gcc
MB_HWT_CC_SIZE = mb-size
MB_HWT_CC_OPT = -O2
MB_HWT_CFLAGS = 
MB_HWT_CC_SEARCH = # -B
MB_HWT_LIBPATH = -L./microblaze_0/lib/ # -L
MB_HWT_INCLUDES = -I./microblaze_0/include/  -Imy_sw/ # -I
MB_HWT_LFLAGS = # -l
MB_HWT_LINKER_SCRIPT = 
MB_HWT_LINKER_SCRIPT_FLAG = #-T $(MB_HWT_LINKER_SCRIPT) 
MB_HWT_CC_DEBUG_FLAG =  -g 
MB_HWT_CC_PROFILE_FLAG = # -pg
MB_HWT_CC_GLOBPTR_FLAG= # -mxl-gp-opt
MB_HWT_MODE = executable
MB_HWT_LIBG_OPT = -$(MB_HWT_MODE) microblaze_0
MB_HWT_CC_INFERRED_FLAGS= -mno-xl-soft-mul -mhard-float -mxl-barrel-shift -mno-xl-soft-div -mcpu=v8.00.a 
MB_HWT_CC_START_ADDR_FLAG=  # -Wl,-defsym -Wl,_TEXT_START_ADDR=
MB_HWT_CC_STACK_SIZE_FLAG=  # -Wl,-defsym -Wl,_STACK_SIZE=
MB_HWT_CC_HEAP_SIZE_FLAG=  # -Wl,-defsym -Wl,_HEAP_SIZE=
MB_HWT_OTHER_CC_FLAGS= $(MB_HWT_CC_GLOBPTR_FLAG)  \
                  $(MB_HWT_CC_START_ADDR_FLAG) $(MB_HWT_CC_STACK_SIZE_FLAG) $(MB_HWT_CC_HEAP_SIZE_FLAG)  \
                  $(MB_HWT_CC_INFERRED_FLAGS)  \
                  $(MB_HWT_LINKER_SCRIPT_FLAG) $(MB_HWT_CC_DEBUG_FLAG) $(MB_HWT_CC_PROFILE_FLAG) 

#################################################################
# SOFTWARE APPLICATION MB_HWT1
#################################################################

MB_HWT1_SOURCES = my_sw/hw_thread.c my_sw/proc_hw_thread.c 

MB_HWT1_HEADERS = my_sw/proc_hw_thread.h 

MB_HWT1_CC = mb-gcc
MB_HWT1_CC_SIZE = mb-size
MB_HWT1_CC_OPT = -O2
MB_HWT1_CFLAGS = 
MB_HWT1_CC_SEARCH = # -B
MB_HWT1_LIBPATH = -L./microblaze_1/lib/ # -L
MB_HWT1_INCLUDES = -I./microblaze_1/include/  -Imy_sw/ # -I
MB_HWT1_LFLAGS = # -l
MB_HWT1_LINKER_SCRIPT = 
MB_HWT1_LINKER_SCRIPT_FLAG = #-T $(MB_HWT1_LINKER_SCRIPT) 
MB_HWT1_CC_DEBUG_FLAG =  -g 
MB_HWT1_CC_PROFILE_FLAG = # -pg
MB_HWT1_CC_GLOBPTR_FLAG= # -mxl-gp-opt
MB_HWT1_MODE = executable
MB_HWT1_LIBG_OPT = -$(MB_HWT1_MODE) microblaze_1
MB_HWT1_CC_INFERRED_FLAGS= -mno-xl-soft-mul -mhard-float -mxl-barrel-shift -mno-xl-soft-div -mcpu=v8.00.a 
MB_HWT1_CC_START_ADDR_FLAG=  # -Wl,-defsym -Wl,_TEXT_START_ADDR=
MB_HWT1_CC_STACK_SIZE_FLAG=  # -Wl,-defsym -Wl,_STACK_SIZE=
MB_HWT1_CC_HEAP_SIZE_FLAG=  # -Wl,-defsym -Wl,_HEAP_SIZE=
MB_HWT1_OTHER_CC_FLAGS= $(MB_HWT1_CC_GLOBPTR_FLAG)  \
                  $(MB_HWT1_CC_START_ADDR_FLAG) $(MB_HWT1_CC_STACK_SIZE_FLAG) $(MB_HWT1_CC_HEAP_SIZE_FLAG)  \
                  $(MB_HWT1_CC_INFERRED_FLAGS)  \
                  $(MB_HWT1_LINKER_SCRIPT_FLAG) $(MB_HWT1_CC_DEBUG_FLAG) $(MB_HWT1_CC_PROFILE_FLAG) 

#################################################################
# SOFTWARE APPLICATION MB_HWT2
#################################################################

MB_HWT2_SOURCES = my_sw/proc_hw_thread.c my_sw/hw_thread.c 

MB_HWT2_HEADERS = my_sw/proc_hw_thread.h 

MB_HWT2_CC = mb-gcc
MB_HWT2_CC_SIZE = mb-size
MB_HWT2_CC_OPT = -O2
MB_HWT2_CFLAGS = 
MB_HWT2_CC_SEARCH = # -B
MB_HWT2_LIBPATH = -L./microblaze_2/lib/ # -L
MB_HWT2_INCLUDES = -I./microblaze_2/include/  -Imy_sw/ # -I
MB_HWT2_LFLAGS = # -l
MB_HWT2_LINKER_SCRIPT = 
MB_HWT2_LINKER_SCRIPT_FLAG = #-T $(MB_HWT2_LINKER_SCRIPT) 
MB_HWT2_CC_DEBUG_FLAG =  -g 
MB_HWT2_CC_PROFILE_FLAG = # -pg
MB_HWT2_CC_GLOBPTR_FLAG= # -mxl-gp-opt
MB_HWT2_MODE = executable
MB_HWT2_LIBG_OPT = -$(MB_HWT2_MODE) microblaze_2
MB_HWT2_CC_INFERRED_FLAGS= -mno-xl-soft-mul -mhard-float -mxl-barrel-shift -mno-xl-soft-div -mcpu=v8.00.a 
MB_HWT2_CC_START_ADDR_FLAG=  # -Wl,-defsym -Wl,_TEXT_START_ADDR=
MB_HWT2_CC_STACK_SIZE_FLAG=  # -Wl,-defsym -Wl,_STACK_SIZE=
MB_HWT2_CC_HEAP_SIZE_FLAG=  # -Wl,-defsym -Wl,_HEAP_SIZE=
MB_HWT2_OTHER_CC_FLAGS= $(MB_HWT2_CC_GLOBPTR_FLAG)  \
                  $(MB_HWT2_CC_START_ADDR_FLAG) $(MB_HWT2_CC_STACK_SIZE_FLAG) $(MB_HWT2_CC_HEAP_SIZE_FLAG)  \
                  $(MB_HWT2_CC_INFERRED_FLAGS)  \
                  $(MB_HWT2_LINKER_SCRIPT_FLAG) $(MB_HWT2_CC_DEBUG_FLAG) $(MB_HWT2_CC_PROFILE_FLAG) 

#################################################################
# SOFTWARE APPLICATION MB_HWT3
#################################################################

MB_HWT3_SOURCES = my_sw/proc_hw_thread.c my_sw/hw_thread.c 

MB_HWT3_HEADERS = my_sw/proc_hw_thread.h 

MB_HWT3_CC = mb-gcc
MB_HWT3_CC_SIZE = mb-size
MB_HWT3_CC_OPT = -O2
MB_HWT3_CFLAGS = 
MB_HWT3_CC_SEARCH = # -B
MB_HWT3_LIBPATH = -L./microblaze_3/lib/ # -L
MB_HWT3_INCLUDES = -I./microblaze_3/include/  -Imy_sw/ # -I
MB_HWT3_LFLAGS = # -l
MB_HWT3_LINKER_SCRIPT = 
MB_HWT3_LINKER_SCRIPT_FLAG = #-T $(MB_HWT3_LINKER_SCRIPT) 
MB_HWT3_CC_DEBUG_FLAG =  -g 
MB_HWT3_CC_PROFILE_FLAG = # -pg
MB_HWT3_CC_GLOBPTR_FLAG= # -mxl-gp-opt
MB_HWT3_MODE = executable
MB_HWT3_LIBG_OPT = -$(MB_HWT3_MODE) microblaze_3
MB_HWT3_CC_INFERRED_FLAGS= -mno-xl-soft-mul -mhard-float -mxl-barrel-shift -mno-xl-soft-div -mcpu=v8.00.a 
MB_HWT3_CC_START_ADDR_FLAG=  # -Wl,-defsym -Wl,_TEXT_START_ADDR=
MB_HWT3_CC_STACK_SIZE_FLAG=  # -Wl,-defsym -Wl,_STACK_SIZE=
MB_HWT3_CC_HEAP_SIZE_FLAG=  # -Wl,-defsym -Wl,_HEAP_SIZE=
MB_HWT3_OTHER_CC_FLAGS= $(MB_HWT3_CC_GLOBPTR_FLAG)  \
                  $(MB_HWT3_CC_START_ADDR_FLAG) $(MB_HWT3_CC_STACK_SIZE_FLAG) $(MB_HWT3_CC_HEAP_SIZE_FLAG)  \
                  $(MB_HWT3_CC_INFERRED_FLAGS)  \
                  $(MB_HWT3_LINKER_SCRIPT_FLAG) $(MB_HWT3_CC_DEBUG_FLAG) $(MB_HWT3_CC_PROFILE_FLAG) 

#################################################################
# SOFTWARE APPLICATION MB_HWT4
#################################################################

MB_HWT4_SOURCES = my_sw/proc_hw_thread.c my_sw/hw_thread.c 

MB_HWT4_HEADERS = my_sw/proc_hw_thread.h 

MB_HWT4_CC = mb-gcc
MB_HWT4_CC_SIZE = mb-size
MB_HWT4_CC_OPT = -O2
MB_HWT4_CFLAGS = 
MB_HWT4_CC_SEARCH = # -B
MB_HWT4_LIBPATH = -L./microblaze_4/lib/ # -L
MB_HWT4_INCLUDES = -I./microblaze_4/include/  -Imy_sw/ # -I
MB_HWT4_LFLAGS = # -l
MB_HWT4_LINKER_SCRIPT = 
MB_HWT4_LINKER_SCRIPT_FLAG = #-T $(MB_HWT4_LINKER_SCRIPT) 
MB_HWT4_CC_DEBUG_FLAG =  -g 
MB_HWT4_CC_PROFILE_FLAG = # -pg
MB_HWT4_CC_GLOBPTR_FLAG= # -mxl-gp-opt
MB_HWT4_MODE = executable
MB_HWT4_LIBG_OPT = -$(MB_HWT4_MODE) microblaze_4
MB_HWT4_CC_INFERRED_FLAGS= -mno-xl-soft-mul -mhard-float -mxl-barrel-shift -mno-xl-soft-div -mcpu=v8.00.a 
MB_HWT4_CC_START_ADDR_FLAG=  # -Wl,-defsym -Wl,_TEXT_START_ADDR=
MB_HWT4_CC_STACK_SIZE_FLAG=  # -Wl,-defsym -Wl,_STACK_SIZE=
MB_HWT4_CC_HEAP_SIZE_FLAG=  # -Wl,-defsym -Wl,_HEAP_SIZE=
MB_HWT4_OTHER_CC_FLAGS= $(MB_HWT4_CC_GLOBPTR_FLAG)  \
                  $(MB_HWT4_CC_START_ADDR_FLAG) $(MB_HWT4_CC_STACK_SIZE_FLAG) $(MB_HWT4_CC_HEAP_SIZE_FLAG)  \
                  $(MB_HWT4_CC_INFERRED_FLAGS)  \
                  $(MB_HWT4_LINKER_SCRIPT_FLAG) $(MB_HWT4_CC_DEBUG_FLAG) $(MB_HWT4_CC_PROFILE_FLAG) 

#################################################################
# SOFTWARE APPLICATION TEST_MEMORY_APP
#################################################################

TEST_MEMORY_APP_SOURCES = my_sw_ppc/proc_hw_thread.c my_sw_ppc/hw_thread.c 

TEST_MEMORY_APP_HEADERS = my_sw_ppc/proc_hw_thread.h 

TEST_MEMORY_APP_CC = powerpc-eabi-gcc
TEST_MEMORY_APP_CC_SIZE = powerpc-eabi-size
TEST_MEMORY_APP_CC_OPT = -O2
TEST_MEMORY_APP_CFLAGS = 
TEST_MEMORY_APP_CC_SEARCH = # -B
TEST_MEMORY_APP_LIBPATH = -L./ppc440_0/lib/ # -L
TEST_MEMORY_APP_INCLUDES = -I./ppc440_0/include/  -Imy_sw_ppc/ # -I
TEST_MEMORY_APP_LFLAGS = # -l
TEST_MEMORY_APP_LINKER_SCRIPT = TestApp_Memory/src/TestApp_Memory_LinkScr.ld
TEST_MEMORY_APP_LINKER_SCRIPT_FLAG = -Wl,-T -Wl,$(TEST_MEMORY_APP_LINKER_SCRIPT) 
TEST_MEMORY_APP_CC_DEBUG_FLAG =  -g 
TEST_MEMORY_APP_CC_PROFILE_FLAG = # -pg
TEST_MEMORY_APP_CC_GLOBPTR_FLAG= # -msdata=eabi
TEST_MEMORY_APP_CC_INFERRED_FLAGS= -mcpu=440 
TEST_MEMORY_APP_CC_START_ADDR_FLAG=  #  # -Wl,-defsym -Wl,_START_ADDR=
TEST_MEMORY_APP_CC_STACK_SIZE_FLAG=  #  # -Wl,-defsym -Wl,_STACK_SIZE=
TEST_MEMORY_APP_CC_HEAP_SIZE_FLAG=  #  # -Wl,-defsym -Wl,_HEAP_SIZE=
TEST_MEMORY_APP_OTHER_CC_FLAGS= $(TEST_MEMORY_APP_CC_GLOBPTR_FLAG)  \
                  $(TEST_MEMORY_APP_CC_START_ADDR_FLAG) $(TEST_MEMORY_APP_CC_STACK_SIZE_FLAG) $(TEST_MEMORY_APP_CC_HEAP_SIZE_FLAG)  \
                  $(TEST_MEMORY_APP_CC_INFERRED_FLAGS)  \
                  $(TEST_MEMORY_APP_LINKER_SCRIPT_FLAG) $(TEST_MEMORY_APP_CC_DEBUG_FLAG) $(TEST_MEMORY_APP_CC_PROFILE_FLAG) 

#################################################################
# SOFTWARE APPLICATION CORE_TEST
#################################################################

CORE_TEST_SOURCES = CoreTest.c 

CORE_TEST_HEADERS = 

CORE_TEST_CC = mb-gcc
CORE_TEST_CC_SIZE = mb-size
CORE_TEST_CC_OPT = -O2
CORE_TEST_CFLAGS = 
CORE_TEST_CC_SEARCH = # -B
CORE_TEST_LIBPATH = -L./host_microblaze/lib/ # -L
CORE_TEST_INCLUDES = -I./host_microblaze/include/ # -I
CORE_TEST_LFLAGS = # -l
CORE_TEST_LINKER_SCRIPT = 
CORE_TEST_LINKER_SCRIPT_FLAG = #-T $(CORE_TEST_LINKER_SCRIPT) 
CORE_TEST_CC_DEBUG_FLAG =  -g 
CORE_TEST_CC_PROFILE_FLAG = # -pg
CORE_TEST_CC_GLOBPTR_FLAG= # -mxl-gp-opt
CORE_TEST_MODE = executable
CORE_TEST_LIBG_OPT = -$(CORE_TEST_MODE) host_microblaze
CORE_TEST_CC_INFERRED_FLAGS= -mno-xl-soft-mul -mhard-float -mxl-barrel-shift -mno-xl-soft-div -mcpu=v8.00.a 
CORE_TEST_CC_START_ADDR_FLAG=  # -Wl,-defsym -Wl,_TEXT_START_ADDR=
CORE_TEST_CC_STACK_SIZE_FLAG=  # -Wl,-defsym -Wl,_STACK_SIZE=
CORE_TEST_CC_HEAP_SIZE_FLAG=  # -Wl,-defsym -Wl,_HEAP_SIZE=
CORE_TEST_OTHER_CC_FLAGS= $(CORE_TEST_CC_GLOBPTR_FLAG)  \
                  $(CORE_TEST_CC_START_ADDR_FLAG) $(CORE_TEST_CC_STACK_SIZE_FLAG) $(CORE_TEST_CC_HEAP_SIZE_FLAG)  \
                  $(CORE_TEST_CC_INFERRED_FLAGS)  \
                  $(CORE_TEST_LINKER_SCRIPT_FLAG) $(CORE_TEST_CC_DEBUG_FLAG) $(CORE_TEST_CC_PROFILE_FLAG) 
