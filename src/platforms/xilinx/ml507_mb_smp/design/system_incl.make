#################################################################
# Makefile generated by Xilinx Platform Studio 
# Project:/home/swarn/port/work/src/platforms/xilinx/ml507_mb_smp/design/system.xmp
#
# WARNING : This file will be re-generated every time a command
# to run a make target is invoked. So, any changes made to this  
# file manually, will be lost when make is invoked next. 
#################################################################

XILINX_EDK_DIR = /opt/Xilinx/10.1/EDK
NON_CYG_XILINX_EDK_DIR = /opt/Xilinx/10.1/EDK

SYSTEM = system

MHSFILE = system.mhs

MSSFILE = system.mss

FPGA_ARCH = virtex5

DEVICE = xc5vfx70tff1136-1

LANGUAGE = vhdl

SEARCHPATHOPT =  -lp /home/swarn/port/work/src/hardware/

SUBMODULE_OPT = 

PLATGEN_OPTIONS = -p $(DEVICE) -lang $(LANGUAGE) $(SEARCHPATHOPT) $(SUBMODULE_OPT)

LIBGEN_OPTIONS = -mhs $(MHSFILE) -p $(DEVICE) $(SEARCHPATHOPT) \
                   $(MICROBLAZE_1_LIBG_OPT) \
                   $(MICROBLAZE_0_LIBG_OPT)

VPGEN_OPTIONS = -p $(DEVICE) $(SEARCHPATHOPT)

MANAGE_FASTRT_OPTIONS = -reduce_fanout no

OBSERVE_PAR_OPTIONS = -error yes

TESTAPP_MEMORY_OUTPUT_DIR = TestApp_Memory
TESTAPP_MEMORY_OUTPUT = $(TESTAPP_MEMORY_OUTPUT_DIR)/executable.elf

TESTAPP_PERIPHERAL_OUTPUT_DIR = TestApp_Peripheral
TESTAPP_PERIPHERAL_OUTPUT = $(TESTAPP_PERIPHERAL_OUTPUT_DIR)/executable.elf

TEST0_OUTPUT_DIR = test0
TEST0_OUTPUT = $(TEST0_OUTPUT_DIR)/executable.elf

TEST1_OUTPUT_DIR = test1
TEST1_OUTPUT = $(TEST1_OUTPUT_DIR)/executable.elf

MICROBLAZE_BOOTLOOP = $(XILINX_EDK_DIR)/sw/lib/microblaze/mb_bootloop.elf
PPC405_BOOTLOOP = $(XILINX_EDK_DIR)/sw/lib/ppc405/ppc_bootloop.elf
PPC440_BOOTLOOP = $(XILINX_EDK_DIR)/sw/lib/ppc440/ppc440_bootloop.elf
BOOTLOOP_DIR = bootloops

MICROBLAZE_1_BOOTLOOP = $(BOOTLOOP_DIR)/microblaze_1.elf
MICROBLAZE_1_XMDSTUB = microblaze_1/code/xmdstub.elf

MICROBLAZE_0_BOOTLOOP = $(BOOTLOOP_DIR)/microblaze_0.elf
MICROBLAZE_0_XMDSTUB = microblaze_0/code/xmdstub.elf

BRAMINIT_ELF_FILES =  $(TEST1_OUTPUT) $(TEST0_OUTPUT) 
BRAMINIT_ELF_FILE_ARGS =   -pe microblaze_1 $(TEST1_OUTPUT)  -pe microblaze_0 $(TEST0_OUTPUT) 

ALL_USER_ELF_FILES = $(TESTAPP_MEMORY_OUTPUT) $(TESTAPP_PERIPHERAL_OUTPUT) $(TEST0_OUTPUT) $(TEST1_OUTPUT) 

SIM_CMD = vsim

BEHAVIORAL_SIM_SCRIPT = simulation/behavioral/$(SYSTEM)_setup.do

STRUCTURAL_SIM_SCRIPT = simulation/structural/$(SYSTEM)_setup.do

TIMING_SIM_SCRIPT = simulation/timing/$(SYSTEM)_setup.do

DEFAULT_SIM_SCRIPT = $(BEHAVIORAL_SIM_SCRIPT)

MIX_LANG_SIM_OPT = -mixed yes

SIMGEN_OPTIONS = -p $(DEVICE) -lang $(LANGUAGE) $(SEARCHPATHOPT) $(BRAMINIT_ELF_FILE_ARGS) $(MIX_LANG_SIM_OPT)  -s mti -X /opt/Xilinx/10.1/ISE/ -E /opt/Xilinx/10.1/EDK_Lib/


LIBRARIES =  \
       microblaze_1/lib/libxil.a  \
       microblaze_0/lib/libxil.a 
VPEXEC = virtualplatform/vpexec

LIBSCLEAN_TARGETS = microblaze_1_libsclean microblaze_0_libsclean 

PROGRAMCLEAN_TARGETS = TestApp_Memory_programclean TestApp_Peripheral_programclean test0_programclean test1_programclean 

CORE_STATE_DEVELOPMENT_FILES = /opt/Xilinx/10.1/EDK/hw/XilinxProcessorIPLib/pcores/proc_common_v2_00_a/hdl/vhdl/proc_common_pkg.vhd \
/opt/Xilinx/10.1/EDK/hw/XilinxProcessorIPLib/pcores/proc_common_v2_00_a/hdl/vhdl/ipif_pkg.vhd \
/opt/Xilinx/10.1/EDK/hw/XilinxProcessorIPLib/pcores/proc_common_v2_00_a/hdl/vhdl/or_muxcy.vhd \
/opt/Xilinx/10.1/EDK/hw/XilinxProcessorIPLib/pcores/proc_common_v2_00_a/hdl/vhdl/or_gate128.vhd \
/opt/Xilinx/10.1/EDK/hw/XilinxProcessorIPLib/pcores/proc_common_v2_00_a/hdl/vhdl/family_support.vhd \
/opt/Xilinx/10.1/EDK/hw/XilinxProcessorIPLib/pcores/proc_common_v2_00_a/hdl/vhdl/pselect_f.vhd \
/opt/Xilinx/10.1/EDK/hw/XilinxProcessorIPLib/pcores/proc_common_v2_00_a/hdl/vhdl/counter_f.vhd \
/opt/Xilinx/10.1/EDK/hw/XilinxProcessorIPLib/pcores/proc_common_v2_00_a/hdl/vhdl/soft_reset.vhd \
/opt/Xilinx/10.1/EDK/hw/XilinxProcessorIPLib/pcores/plbv46_slave_single_v1_00_a/hdl/vhdl/plb_address_decoder.vhd \
/opt/Xilinx/10.1/EDK/hw/XilinxProcessorIPLib/pcores/plbv46_slave_single_v1_00_a/hdl/vhdl/plb_slave_attachment.vhd \
/opt/Xilinx/10.1/EDK/hw/XilinxProcessorIPLib/pcores/plbv46_slave_single_v1_00_a/hdl/vhdl/plbv46_slave_single.vhd \
/home/swarn/port/work/src/hardware/MyRepository/pcores/plb_hthread_reset_core_v1_00_a/hdl/vhdl/user_logic.vhd \
/home/swarn/port/work/src/hardware/MyRepository/pcores/plb_hthread_reset_core_v1_00_a/hdl/vhdl/plb_hthread_reset_core.vhd \
/home/swarn/port/work/src/hardware/MyRepository/pcores/plb_hthreads_timer_v1_00_a/hdl/vhdl/user_logic.vhd \
/home/swarn/port/work/src/hardware/MyRepository/pcores/plb_hthreads_timer_v1_00_a/hdl/vhdl/plb_hthreads_timer.vhd

WRAPPER_NGC_FILES = implementation/scheduler_wrapper.ngc \
implementation/xps_intc_0_wrapper.ngc \
implementation/xps_intc_1_wrapper.ngc \
implementation/microblaze_1_wrapper.ngc \
implementation/ilmb1_wrapper.ngc \
implementation/dlmb1_wrapper.ngc \
implementation/dlmb_cntlr1_wrapper.ngc \
implementation/ilmb_cntlr1_wrapper.ngc \
implementation/lmb_bram1_wrapper.ngc \
implementation/microblaze_0_wrapper.ngc \
implementation/mb_plb_wrapper.ngc \
implementation/ilmb_wrapper.ngc \
implementation/dlmb_wrapper.ngc \
implementation/dlmb_cntlr_wrapper.ngc \
implementation/ilmb_cntlr_wrapper.ngc \
implementation/lmb_bram_wrapper.ngc \
implementation/rs232_uart_1_wrapper.ngc \
implementation/leds_8bit_wrapper.ngc \
implementation/sram_wrapper.ngc \
implementation/ddr2_sdram_wrapper.ngc \
implementation/xps_timer_1_wrapper.ngc \
implementation/sram_util_bus_split_0_wrapper.ngc \
implementation/ddr2_sdram_util_bus_split_1_wrapper.ngc \
implementation/ddr2_sdram_util_bus_split_2_wrapper.ngc \
implementation/clock_generator_0_wrapper.ngc \
implementation/debug_module_wrapper.ngc \
implementation/proc_sys_reset_0_wrapper.ngc \
implementation/plbv46_opb_bridge_0_wrapper.ngc \
implementation/opb_v20_0_wrapper.ngc \
implementation/opb_bram_if_cntlr_1_wrapper.ngc \
implementation/bram_block_0_wrapper.ngc \
implementation/xps_bram_if_cntlr_0_wrapper.ngc \
implementation/thread_manager_wrapper.ngc \
implementation/synch_manager_wrapper.ngc \
implementation/cond_vars_wrapper.ngc \
implementation/plb_hthread_reset_core_0_wrapper.ngc \
implementation/plb_hthreads_timer_0_wrapper.ngc \
implementation/util_intr_split_0_wrapper.ngc

POSTSYN_NETLIST = implementation/$(SYSTEM).ngc

SYSTEM_BIT = implementation/$(SYSTEM).bit

DOWNLOAD_BIT = implementation/download.bit

SYSTEM_ACE = implementation/$(SYSTEM).ace

UCF_FILE = data/system.ucf

BMM_FILE = implementation/$(SYSTEM).bmm

BITGEN_UT_FILE = etc/bitgen.ut

XFLOW_OPT_FILE = etc/fast_runtime.opt
XFLOW_DEPENDENCY = __xps/xpsxflow.opt $(XFLOW_OPT_FILE)

XPLORER_DEPENDENCY = __xps/xplorer.opt
XPLORER_OPTIONS = -p $(DEVICE) -uc $(SYSTEM).ucf -bm $(SYSTEM).bmm -max_runs 7

FPGA_IMP_DEPENDENCY = $(BMM_FILE) $(POSTSYN_NETLIST) $(UCF_FILE) $(XFLOW_DEPENDENCY)

#################################################################
# SOFTWARE APPLICATION TESTAPP_MEMORY
#################################################################

TESTAPP_MEMORY_SOURCES = TestApp_Memory/src/TestApp_Memory.c 

TESTAPP_MEMORY_HEADERS = 

TESTAPP_MEMORY_CC = mb-gcc
TESTAPP_MEMORY_CC_SIZE = mb-size
TESTAPP_MEMORY_CC_OPT = -O2
TESTAPP_MEMORY_CFLAGS = 
TESTAPP_MEMORY_CC_SEARCH = # -B
TESTAPP_MEMORY_LIBPATH = -L./microblaze_0/lib/ # -L
TESTAPP_MEMORY_INCLUDES = -I./microblaze_0/include/ # -I
TESTAPP_MEMORY_LFLAGS = # -l
TESTAPP_MEMORY_LINKER_SCRIPT = TestApp_Memory/src/TestApp_Memory_LinkScr.ld
TESTAPP_MEMORY_LINKER_SCRIPT_FLAG = -Wl,-T -Wl,$(TESTAPP_MEMORY_LINKER_SCRIPT) 
TESTAPP_MEMORY_CC_DEBUG_FLAG =  -g 
TESTAPP_MEMORY_CC_PROFILE_FLAG = # -pg
TESTAPP_MEMORY_CC_GLOBPTR_FLAG= # -mxl-gp-opt
TESTAPP_MEMORY_MODE = executable
TESTAPP_MEMORY_LIBG_OPT = -$(TESTAPP_MEMORY_MODE) microblaze_0
TESTAPP_MEMORY_CC_INFERRED_FLAGS= -mno-xl-soft-mul -mhard-float -mxl-pattern-compare -mno-xl-soft-div -mcpu=v7.10.d 
TESTAPP_MEMORY_CC_START_ADDR_FLAG=  #  # -Wl,-defsym -Wl,_TEXT_START_ADDR=
TESTAPP_MEMORY_CC_STACK_SIZE_FLAG=  #  # -Wl,-defsym -Wl,_STACK_SIZE=
TESTAPP_MEMORY_CC_HEAP_SIZE_FLAG=  #  # -Wl,-defsym -Wl,_HEAP_SIZE=
TESTAPP_MEMORY_OTHER_CC_FLAGS= $(TESTAPP_MEMORY_CC_GLOBPTR_FLAG)  \
                  $(TESTAPP_MEMORY_CC_START_ADDR_FLAG) $(TESTAPP_MEMORY_CC_STACK_SIZE_FLAG) $(TESTAPP_MEMORY_CC_HEAP_SIZE_FLAG)  \
                  $(TESTAPP_MEMORY_CC_INFERRED_FLAGS)  \
                  $(TESTAPP_MEMORY_LINKER_SCRIPT_FLAG) $(TESTAPP_MEMORY_CC_DEBUG_FLAG) $(TESTAPP_MEMORY_CC_PROFILE_FLAG) 

#################################################################
# SOFTWARE APPLICATION TESTAPP_PERIPHERAL
#################################################################

TESTAPP_PERIPHERAL_SOURCES = TestApp_Peripheral/src/TestApp_Peripheral.c TestApp_Peripheral/src/xintc_tapp_example.c TestApp_Peripheral/src/xgpio_tapp_example.c TestApp_Peripheral/src/xtmrctr_selftest_example.c TestApp_Peripheral/src/xtmrctr_intr_example.c TestApp_Peripheral/src/xuartlite_selftest_example.c 

TESTAPP_PERIPHERAL_HEADERS = TestApp_Peripheral/src/intc_header.h TestApp_Peripheral/src/gpio_header.h TestApp_Peripheral/src/tmrctr_header.h TestApp_Peripheral/src/tmrctr_intr_header.h TestApp_Peripheral/src/uartlite_header.h 

TESTAPP_PERIPHERAL_CC = mb-gcc
TESTAPP_PERIPHERAL_CC_SIZE = mb-size
TESTAPP_PERIPHERAL_CC_OPT = -O2
TESTAPP_PERIPHERAL_CFLAGS = 
TESTAPP_PERIPHERAL_CC_SEARCH = # -B
TESTAPP_PERIPHERAL_LIBPATH = -L./microblaze_0/lib/ # -L
TESTAPP_PERIPHERAL_INCLUDES = -I./microblaze_0/include/  -ITestApp_Peripheral/src/ # -I
TESTAPP_PERIPHERAL_LFLAGS = # -l
TESTAPP_PERIPHERAL_LINKER_SCRIPT = TestApp_Peripheral/src/TestApp_Peripheral_LinkScr.ld
TESTAPP_PERIPHERAL_LINKER_SCRIPT_FLAG = -Wl,-T -Wl,$(TESTAPP_PERIPHERAL_LINKER_SCRIPT) 
TESTAPP_PERIPHERAL_CC_DEBUG_FLAG =  -g 
TESTAPP_PERIPHERAL_CC_PROFILE_FLAG = # -pg
TESTAPP_PERIPHERAL_CC_GLOBPTR_FLAG= # -mxl-gp-opt
TESTAPP_PERIPHERAL_MODE = executable
TESTAPP_PERIPHERAL_LIBG_OPT = -$(TESTAPP_PERIPHERAL_MODE) microblaze_0
TESTAPP_PERIPHERAL_CC_INFERRED_FLAGS= -mno-xl-soft-mul -mhard-float -mxl-pattern-compare -mno-xl-soft-div -mcpu=v7.10.d 
TESTAPP_PERIPHERAL_CC_START_ADDR_FLAG=  #  # -Wl,-defsym -Wl,_TEXT_START_ADDR=
TESTAPP_PERIPHERAL_CC_STACK_SIZE_FLAG=  #  # -Wl,-defsym -Wl,_STACK_SIZE=
TESTAPP_PERIPHERAL_CC_HEAP_SIZE_FLAG=  #  # -Wl,-defsym -Wl,_HEAP_SIZE=
TESTAPP_PERIPHERAL_OTHER_CC_FLAGS= $(TESTAPP_PERIPHERAL_CC_GLOBPTR_FLAG)  \
                  $(TESTAPP_PERIPHERAL_CC_START_ADDR_FLAG) $(TESTAPP_PERIPHERAL_CC_STACK_SIZE_FLAG) $(TESTAPP_PERIPHERAL_CC_HEAP_SIZE_FLAG)  \
                  $(TESTAPP_PERIPHERAL_CC_INFERRED_FLAGS)  \
                  $(TESTAPP_PERIPHERAL_LINKER_SCRIPT_FLAG) $(TESTAPP_PERIPHERAL_CC_DEBUG_FLAG) $(TESTAPP_PERIPHERAL_CC_PROFILE_FLAG) 

#################################################################
# SOFTWARE APPLICATION TEST0
#################################################################

TEST0_SOURCES = my_sw/test.c 

TEST0_HEADERS = 

TEST0_CC = mb-gcc
TEST0_CC_SIZE = mb-size
TEST0_CC_OPT = -O2
TEST0_CFLAGS = 
TEST0_CC_SEARCH = # -B
TEST0_LIBPATH = -L./microblaze_0/lib/ # -L
TEST0_INCLUDES = -I./microblaze_0/include/ # -I
TEST0_LFLAGS = # -l
TEST0_LINKER_SCRIPT = 
TEST0_LINKER_SCRIPT_FLAG = #-Wl,-T -Wl,$(TEST0_LINKER_SCRIPT) 
TEST0_CC_DEBUG_FLAG =  -g 
TEST0_CC_PROFILE_FLAG = # -pg
TEST0_CC_GLOBPTR_FLAG= # -mxl-gp-opt
TEST0_MODE = executable
TEST0_LIBG_OPT = -$(TEST0_MODE) microblaze_0
TEST0_CC_INFERRED_FLAGS= -mno-xl-soft-mul -mhard-float -mxl-pattern-compare -mno-xl-soft-div -mcpu=v7.10.d 
TEST0_CC_START_ADDR_FLAG=  # -Wl,-defsym -Wl,_TEXT_START_ADDR=
TEST0_CC_STACK_SIZE_FLAG=  # -Wl,-defsym -Wl,_STACK_SIZE=
TEST0_CC_HEAP_SIZE_FLAG=  # -Wl,-defsym -Wl,_HEAP_SIZE=
TEST0_OTHER_CC_FLAGS= $(TEST0_CC_GLOBPTR_FLAG)  \
                  $(TEST0_CC_START_ADDR_FLAG) $(TEST0_CC_STACK_SIZE_FLAG) $(TEST0_CC_HEAP_SIZE_FLAG)  \
                  $(TEST0_CC_INFERRED_FLAGS)  \
                  $(TEST0_LINKER_SCRIPT_FLAG) $(TEST0_CC_DEBUG_FLAG) $(TEST0_CC_PROFILE_FLAG) 

#################################################################
# SOFTWARE APPLICATION TEST1
#################################################################

TEST1_SOURCES = my_sw/test.c 

TEST1_HEADERS = 

TEST1_CC = mb-gcc
TEST1_CC_SIZE = mb-size
TEST1_CC_OPT = -O2
TEST1_CFLAGS = 
TEST1_CC_SEARCH = # -B
TEST1_LIBPATH = -L./microblaze_1/lib/ # -L
TEST1_INCLUDES = -I./microblaze_1/include/ # -I
TEST1_LFLAGS = # -l
TEST1_LINKER_SCRIPT = 
TEST1_LINKER_SCRIPT_FLAG = #-Wl,-T -Wl,$(TEST1_LINKER_SCRIPT) 
TEST1_CC_DEBUG_FLAG =  -g 
TEST1_CC_PROFILE_FLAG = # -pg
TEST1_CC_GLOBPTR_FLAG= # -mxl-gp-opt
TEST1_MODE = executable
TEST1_LIBG_OPT = -$(TEST1_MODE) microblaze_1
TEST1_CC_INFERRED_FLAGS= -mno-xl-soft-mul -mhard-float -mxl-pattern-compare -mno-xl-soft-div -mcpu=v7.10.d 
TEST1_CC_START_ADDR_FLAG=  # -Wl,-defsym -Wl,_TEXT_START_ADDR=
TEST1_CC_STACK_SIZE_FLAG=  # -Wl,-defsym -Wl,_STACK_SIZE=
TEST1_CC_HEAP_SIZE_FLAG=  # -Wl,-defsym -Wl,_HEAP_SIZE=
TEST1_OTHER_CC_FLAGS= $(TEST1_CC_GLOBPTR_FLAG)  \
                  $(TEST1_CC_START_ADDR_FLAG) $(TEST1_CC_STACK_SIZE_FLAG) $(TEST1_CC_HEAP_SIZE_FLAG)  \
                  $(TEST1_CC_INFERRED_FLAGS)  \
                  $(TEST1_LINKER_SCRIPT_FLAG) $(TEST1_CC_DEBUG_FLAG) $(TEST1_CC_PROFILE_FLAG) 
