CODE OVERVIEW

main.c defines nbytes_in_file, load_and_interpret_image, and
main.

 * nbytes_in_file uses the file cursor to identify the size of a file.

 * load_and_interpret_image uses nbytes_in_file to determine the size
   of the image file. It then mallocates that many bytes and fills it
   with the bytes read from the image file. Then it invokes the
   interpreter on that image now in memory.

 * main manages arguments and then invokes load_and_interpret_image.

interpreter.c defines mem_value, the registers file,
print_register_file, interpreter, and a thread entry point wrapper
around interpreter.

 * mem_value validates addresses generated by the interpreter core and
   translates them to offsets from the image's base address.

 * interpreter uses mem_value to fetch instructions and to read and
   write to memory. It exits with error status values that are defined
   in interpret.h. interpreter_entry_point wraps it in (void*) casts
   and ends with a pthread_exit call.

 * print_register_file prints the register values to stdout.
