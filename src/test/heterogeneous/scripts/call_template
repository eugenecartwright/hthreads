crc(package[#].crc_data, package[#].crc_size, package[#].crc_valid);        0
sort(package[#].sort_data, package[#].sort_size, package[#].sort_valid);    0 
vector_add(package[#].dataA, package[#].dataB, package[#].dataC, package[#].vector_size, package[#].vector_valid);        0

thread_create(&threads[#], &attr[#], worker_crc1_thread_FUNC_ID, (void *) &package[#], DYNAMIC_HW, 0); 0
thread_create(&threads[#], &attr[#], worker_sort1_thread_FUNC_ID, (void *) &package[#], DYNAMIC_HW, 0); 0
thread_create(&threads[#], &attr[#], worker_vector1_thread_FUNC_ID, (void *) &package[#], DYNAMIC_HW, 0); 1

thread_create(&threads[#], &attr[#], worker_sort_crc_thread_FUNC_ID, (void *) &package[#], DYNAMIC_HW, 0);  0
thread_create(&threads[#], &attr[#], worker_sort_vector_thread_FUNC_ID, (void *) &package[#], DYNAMIC_HW, 0);  0
thread_create(&threads[#], &attr[#], worker_crc_sort_thread_FUNC_ID, (void *) &package[#], DYNAMIC_HW, 0);  0
thread_create(&threads[#], &attr[#], worker_crc_vector_thread_FUNC_ID, (void *) &package[#], DYNAMIC_HW, 0);  0
thread_create(&threads[#], &attr[#], worker_vector_crc_thread_FUNC_ID, (void *) &package[#], DYNAMIC_HW, 0);  0
thread_create(&threads[#], &attr[#], worker_vector_sort_thread_FUNC_ID, (void *) &package[#], DYNAMIC_HW, 0);  0

thread_create(&threads[#], &attr[#], worker_vector_crc_sort_thread_FUNC_ID, (void *) &package[#], DYNAMIC_HW, 0);  0
thread_create(&threads[#], &attr[#], worker_vector_sort_crc_thread_FUNC_ID, (void *) &package[#], DYNAMIC_HW, 0);  0
thread_create(&threads[#], &attr[#], worker_crc_vector_sort_thread_FUNC_ID, (void *) &package[#], DYNAMIC_HW, 0);  0
thread_create(&threads[#], &attr[#], worker_crc_sort_vector_thread_FUNC_ID, (void *) &package[#], DYNAMIC_HW, 0);  0
thread_create(&threads[#], &attr[#], worker_sort_crc_vector_thread_FUNC_ID, (void *) &package[#], DYNAMIC_HW, 0);  0
thread_create(&threads[#], &attr[#], worker_sort_vector_crc_thread_FUNC_ID, (void *) &package[#], DYNAMIC_HW, 0);  0
